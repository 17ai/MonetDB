# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0.  If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright 1997 - July 2008 CWI, August 2008 - 2016 MonetDB B.V.

module grid;
command grid.distance(x1:lng, y1:lng, x2:lng, y2:lng, d:dbl) :bit
address GRIDdistance_lng
comment "Return true when the cartesian distance between two points is less than the specified distance";
command grid.distancesubselect(x1:bat[:lng], y1:bat[:lng], cand1:bat[:oid], x2:lng, y2:lng, d:dbl, anti:bit):bat[:oid]
address GRIDdistancesubselect_lng
comment "Return the OIDs of points that are close to the specified point";
command grid.distancesubjoin(x1:bat[:lng], y1:bat[:lng], x2:bat[:lng], y2:bat[:lng], d:dbl, s1:bat[:oid], s2:bat[:oid], nil_matches:bit, estimate:lng)(r1:bat[:oid],r2:bat[:oid])
address GRIDdistancesubjoin
comment "Returns the point pairs that with distance less than the specified distance";

command grid.distance(x1:sht, y1:sht, x2:sht, y2:sht, d:dbl) :bit
address GRIDdistance_sht
comment "Return true when the cartesian distance between two points is less than the specified distance";
command grid.distancesubselect(x1:bat[:sht], y1:bat[:sht], cand1:bat[:oid], x2:sht, y2:sht, d:dbl, anti:bit):bat[:oid]
address GRIDdistancesubselect_sht
comment "Return the OIDs of points that are close to the specified point";
command grid.distancesubjoin(x1:bat[:sht], y1:bat[:sht], x2:bat[:sht], y2:bat[:sht], d:dbl, s1:bat[:oid], s2:bat[:oid], nil_matches:bit, estimate:sht)(r1:bat[:oid],r2:bat[:oid])
address GRIDdistancesubjoin
comment "Returns the point pairs that with distance less than the specified distance";

command grid.distance(x1:int, y1:int, x2:int, y2:int, d:dbl) :bit
address GRIDdistance_int
comment "Return true when the cartesian distance between two points is less than the specified distance";
command grid.distancesubselect(x1:bat[:int], y1:bat[:int], cand1:bat[:oid], x2:int, y2:int, d:dbl, anti:bit):bat[:oid]
address GRIDdistancesubselect_int
comment "Return the OIDs of points that are close to the specified point";
command grid.distancesubjoin(x1:bat[:int], y1:bat[:int], x2:bat[:int], y2:bat[:int], d:dbl, s1:bat[:oid], s2:bat[:oid], nil_matches:bit, estimate:int)(r1:bat[:oid],r2:bat[:oid])
address GRIDdistancesubjoin
comment "Returns the point pairs that with distance less than the specified distance";

command grid.distance(x1:lng, y1:lng, x2:lng, y2:lng, d:dbl) :bit
address GRIDdistance_lng
comment "Return true when the cartesian distance between two points is less than the specified distance";
command grid.distancesubselect(x1:bat[:lng], y1:bat[:lng], cand1:bat[:oid], x2:lng, y2:lng, d:dbl, anti:bit):bat[:oid]
address GRIDdistancesubselect_lng
comment "Return the OIDs of points that are close to the specified point";
command grid.distancesubjoin(x1:bat[:lng], y1:bat[:lng], x2:bat[:lng], y2:bat[:lng], d:dbl, s1:bat[:oid], s2:bat[:oid], nil_matches:bit, estimate:lng)(r1:bat[:oid],r2:bat[:oid])
address GRIDdistancesubjoin
comment "Returns the point pairs that with distance less than the specified distance";

command grid.distance(x1:flt, y1:flt, x2:flt, y2:flt, d:dbl) :bit
address GRIDdistance_flt
comment "Return true when the cartesian distance between two points is less than the specified distance";
command grid.distancesubselect(x1:bat[:flt], y1:bat[:flt], cand1:bat[:oid], x2:flt, y2:flt, d:dbl, anti:bit):bat[:oid]
address GRIDdistancesubselect_flt
comment "Return the OIDs of points that are close to the specified point";
command grid.distancesubjoin(x1:bat[:flt], y1:bat[:flt], x2:bat[:flt], y2:bat[:flt], d:dbl, s1:bat[:oid], s2:bat[:oid], nil_matches:bit, estimate:flt)(r1:bat[:oid],r2:bat[:oid])
address GRIDdistancesubjoin
comment "Returns the point pairs that with distance less than the specified distance";

command grid.distance(x1:dbl, y1:dbl, x2:dbl, y2:dbl, d:dbl) :bit
address GRIDdistance_dbl
comment "Return true when the cartesian distance between two points is less than the specified distance";
command grid.distancesubselect(x1:bat[:dbl], y1:bat[:dbl], cand1:bat[:oid], x2:dbl, y2:dbl, d:dbl, anti:bit):bat[:oid]
address GRIDdistancesubselect_dbl
comment "Return the OIDs of points that are close to the specified point";
command grid.distancesubjoin(x1:bat[:dbl], y1:bat[:dbl], x2:bat[:dbl], y2:bat[:dbl], d:dbl, s1:bat[:oid], s2:bat[:oid], nil_matches:bit, estimate:dbl)(r1:bat[:oid],r2:bat[:oid])
address GRIDdistancesubjoin
comment "Returns the point pairs that with distance less than the specified distance";

stdout of test 'grid` in directory 'geom/sql` itself:


# 19:20:47 >  
# 19:20:47 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=38529" "--set" "mapi_usock=/var/tmp/mtest-22915/.s.monetdb.38529" "--set" "monet_prompt=" "--forcemito" "--dbpath=/ufs/kostis/INSTALL/MonetDB-public/var/MonetDB/mTests_geom_sql" "--set" "embedded_r=yes"
# 19:20:47 >  

# MonetDB 5 server v11.24.0
# This is an unreleased version
# Serving database 'mTests_geom_sql', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.589 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://athens.da.cwi.nl:38529/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-22915/.s.monetdb.38529
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_temporal.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 27_rejects.sql
# loading sql script: 39_analytics.sql
# loading sql script: 39_analytics_hge.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 40_json_hge.sql
# loading sql script: 41_grid.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 46_profiler.sql
# loading sql script: 51_sys_schema_extension.sql
# loading sql script: 72_fits.sql
# loading sql script: 74_netcdf.sql
# loading sql script: 75_lidar.sql
# loading sql script: 75_shp.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql

# 19:20:47 >  
# 19:20:47 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-22915" "--port=38529"
# 19:20:47 >  

#CREATE TABLE points1(x BIGINT, y BIGINT);
#CREATE TABLE points2(x BIGINT, y BIGINT);
#INSERT INTO points1 VALUES (100, 100), (150, 100), (100, 150), (150,150);
[ 4	]
#INSERT INTO points2 VALUES (99, 101),  (149, 149), (101, 180), (149,151);
[ 4	]
#SELECT * FROM points1 p1 WHERE [p1.x, p1.y] distance [ 99, 99, 5];
% sys.p1,	sys.p1 # table_name
% x,	y # name
% bigint,	bigint # type
% 3,	3 # length
[ 100,	100	]
#SELECT * FROM points1 p1 WHERE [p1.x, p1.y] distance [125,150,30];
% sys.p1,	sys.p1 # table_name
% x,	y # name
% bigint,	bigint # type
% 3,	3 # length
[ 100,	150	]
[ 150,	150	]
#SELECT * FROM points2 p2 WHERE [p2.x, p2.y] distance [150,150, 5];
% sys.p2,	sys.p2 # table_name
% x,	y # name
% bigint,	bigint # type
% 3,	3 # length
[ 149,	149	]
[ 149,	151	]
#SELECT * FROM points1 p1, points2 p2 WHERE [p1.x, p1.y] distance [p2.x, p2.y,  1] ORDER BY p1.x, p1.y;
% sys.p1,	sys.p1,	sys.p2,	sys.p2 # table_name
% x,	y,	x,	y # name
% bigint,	bigint,	bigint,	bigint # type
% 1,	1,	1,	1 # length
#SELECT * FROM points1 p1, points2 p2 WHERE [p1.x, p1.y] distance [p2.x, p2.y,1.5] ORDER BY p1.x, p1.y;
% sys.p1,	sys.p1,	sys.p2,	sys.p2 # table_name
% x,	y,	x,	y # name
% bigint,	bigint,	bigint,	bigint # type
% 3,	3,	3,	3 # length
[ 100,	100,	99,	101	]
[ 150,	150,	149,	149	]
#SELECT * FROM points1 p1, points2 p2 WHERE [p1.x, p1.y] distance [p2.x, p2.y, 31] ORDER BY p1.x, p1.y;
% sys.p1,	sys.p1,	sys.p2,	sys.p2 # table_name
% x,	y,	x,	y # name
% bigint,	bigint,	bigint,	bigint # type
% 3,	3,	3,	3 # length
[ 100,	100,	99,	101	]
[ 100,	150,	101,	180	]
[ 150,	150,	149,	149	]
[ 150,	150,	149,	151	]
#SELECT * FROM points1 p1, points2 p2 WHERE [p1.x, p1.y] distance [p2.x, p2.y,500] ORDER BY p1.x, p1.y, p2.x, p2.y;
% sys.p1,	sys.p1,	sys.p2,	sys.p2 # table_name
% x,	y,	x,	y # name
% bigint,	bigint,	bigint,	bigint # type
% 3,	3,	3,	3 # length
[ 100,	100,	99,	101	]
[ 100,	100,	101,	180	]
[ 100,	100,	149,	149	]
[ 100,	100,	149,	151	]
[ 100,	150,	99,	101	]
[ 100,	150,	101,	180	]
[ 100,	150,	149,	149	]
[ 100,	150,	149,	151	]
[ 150,	100,	99,	101	]
[ 150,	100,	101,	180	]
[ 150,	100,	149,	149	]
[ 150,	100,	149,	151	]
[ 150,	150,	99,	101	]
[ 150,	150,	101,	180	]
[ 150,	150,	149,	149	]
[ 150,	150,	149,	151	]
#INSERT INTO points1 VALUES ( 95,95), ( 95, 96), ( 96, 96), ( 97, 97), ( 98, 97);
[ 5	]
#INSERT INTO points1 VALUES ( 95,99), ( 99,102), (101,100), (102,100), (101,101);
[ 5	]
#INSERT INTO points1 VALUES (101,99), (100, 97), (102, 99), (103, 99), (101,102);
[ 5	]
#INSERT INTO points1 VALUES (103,98), (103, 96), (101,103), (101, 99), (102,102);
[ 5	]
#INSERT INTO points2 VALUES ( 99,99), (101, 97), (103, 98), (102, 97), (102,102);
[ 5	]
#INSERT INTO points2 VALUES ( 99,99), (101, 97), (103, 98), (102, 97), (102,102);
[ 5	]
#INSERT INTO points2 VALUES ( 99,99), (101, 97), (103, 98), (102, 97), (102,102);
[ 5	]
#INSERT INTO points2 VALUES ( 99,99), (101, 97), (103, 98), (102, 97), (102,102);
[ 5	]
#SELECT COUNT(*) FROM points1 p1 WHERE [p1.x, p1.y] distance [100, 100, 15];
% sys.L1 # table_name
% L1 # name
% wrd # type
% 2 # length
[ 21	]
#SELECT COUNT(*) FROM points2 p2 WHERE [p2.x, p2.y] distance [100, 100, 15];
% sys.L1 # table_name
% L1 # name
% wrd # type
% 2 # length
[ 21	]
#SELECT * FROM points1 p1, points2 p2 WHERE [p1.x, p1.y] distance [p2.x, p2.y, 15] ORDER BY p1.x, p1.y, p2.x, p2.y;
% sys.p1,	sys.p1,	sys.p2,	sys.p2 # table_name
% x,	y,	x,	y # name
% bigint,	bigint,	bigint,	bigint # type
% 3,	3,	3,	3 # length
[ 95,	95,	99,	99	]
[ 95,	95,	99,	99	]
[ 95,	95,	99,	99	]
[ 95,	95,	99,	99	]
[ 95,	95,	99,	101	]
[ 95,	95,	101,	97	]
[ 95,	95,	101,	97	]
[ 95,	95,	101,	97	]
[ 95,	95,	101,	97	]
[ 95,	95,	102,	97	]
[ 95,	95,	102,	97	]
[ 95,	95,	102,	97	]
[ 95,	95,	102,	97	]
[ 95,	95,	102,	102	]
[ 95,	95,	102,	102	]
[ 95,	95,	102,	102	]
[ 95,	95,	102,	102	]
[ 95,	95,	103,	98	]
[ 95,	95,	103,	98	]
[ 95,	95,	103,	98	]
[ 95,	95,	103,	98	]
[ 95,	96,	99,	99	]
[ 95,	96,	99,	99	]
[ 95,	96,	99,	99	]
[ 95,	96,	99,	99	]
[ 95,	96,	99,	101	]
[ 95,	96,	101,	97	]
[ 95,	96,	101,	97	]
[ 95,	96,	101,	97	]
[ 95,	96,	101,	97	]
[ 95,	96,	102,	97	]
[ 95,	96,	102,	97	]
[ 95,	96,	102,	97	]
[ 95,	96,	102,	97	]
[ 95,	96,	102,	102	]
[ 95,	96,	102,	102	]
[ 95,	96,	102,	102	]
[ 95,	96,	102,	102	]
[ 95,	96,	103,	98	]
[ 95,	96,	103,	98	]
[ 95,	96,	103,	98	]
[ 95,	96,	103,	98	]
[ 95,	99,	99,	99	]
[ 95,	99,	99,	99	]
[ 95,	99,	99,	99	]
[ 95,	99,	99,	99	]
[ 95,	99,	99,	101	]
[ 95,	99,	101,	97	]
[ 95,	99,	101,	97	]
[ 95,	99,	101,	97	]
[ 95,	99,	101,	97	]
[ 95,	99,	102,	97	]
[ 95,	99,	102,	97	]
[ 95,	99,	102,	97	]
[ 95,	99,	102,	97	]
[ 95,	99,	102,	102	]
[ 95,	99,	102,	102	]
[ 95,	99,	102,	102	]
[ 95,	99,	102,	102	]
[ 95,	99,	103,	98	]
[ 95,	99,	103,	98	]
[ 95,	99,	103,	98	]
[ 95,	99,	103,	98	]
[ 96,	96,	99,	99	]
[ 96,	96,	99,	99	]
[ 96,	96,	99,	99	]
[ 96,	96,	99,	99	]
[ 96,	96,	99,	101	]
[ 96,	96,	101,	97	]
[ 96,	96,	101,	97	]
[ 96,	96,	101,	97	]
[ 96,	96,	101,	97	]
[ 96,	96,	102,	97	]
[ 96,	96,	102,	97	]
[ 96,	96,	102,	97	]
[ 96,	96,	102,	97	]
[ 96,	96,	102,	102	]
[ 96,	96,	102,	102	]
[ 96,	96,	102,	102	]
[ 96,	96,	102,	102	]
[ 96,	96,	103,	98	]
[ 96,	96,	103,	98	]
[ 96,	96,	103,	98	]
[ 96,	96,	103,	98	]
[ 97,	97,	99,	99	]
[ 97,	97,	99,	99	]
[ 97,	97,	99,	99	]
[ 97,	97,	99,	99	]
[ 97,	97,	99,	101	]
[ 97,	97,	101,	97	]
[ 97,	97,	101,	97	]
[ 97,	97,	101,	97	]
[ 97,	97,	101,	97	]
[ 97,	97,	102,	97	]
[ 97,	97,	102,	97	]
[ 97,	97,	102,	97	]
[ 97,	97,	102,	97	]
[ 97,	97,	102,	102	]
[ 97,	97,	102,	102	]
[ 97,	97,	102,	102	]
[ 97,	97,	102,	102	]
[ 97,	97,	103,	98	]
[ 97,	97,	103,	98	]
[ 97,	97,	103,	98	]
[ 97,	97,	103,	98	]
[ 98,	97,	99,	99	]
[ 98,	97,	99,	99	]
[ 98,	97,	99,	99	]
[ 98,	97,	99,	99	]
[ 98,	97,	99,	101	]
[ 98,	97,	101,	97	]
[ 98,	97,	101,	97	]
[ 98,	97,	101,	97	]
[ 98,	97,	101,	97	]
[ 98,	97,	102,	97	]
[ 98,	97,	102,	97	]
[ 98,	97,	102,	97	]
[ 98,	97,	102,	97	]
[ 98,	97,	102,	102	]
[ 98,	97,	102,	102	]
[ 98,	97,	102,	102	]
[ 98,	97,	102,	102	]
[ 98,	97,	103,	98	]
[ 98,	97,	103,	98	]
[ 98,	97,	103,	98	]
[ 98,	97,	103,	98	]
[ 99,	102,	99,	99	]
[ 99,	102,	99,	99	]
[ 99,	102,	99,	99	]
[ 99,	102,	99,	99	]
[ 99,	102,	99,	101	]
[ 99,	102,	101,	97	]
[ 99,	102,	101,	97	]
[ 99,	102,	101,	97	]
[ 99,	102,	101,	97	]
[ 99,	102,	102,	97	]
[ 99,	102,	102,	97	]
[ 99,	102,	102,	97	]
[ 99,	102,	102,	97	]
[ 99,	102,	102,	102	]
[ 99,	102,	102,	102	]
[ 99,	102,	102,	102	]
[ 99,	102,	102,	102	]
[ 99,	102,	103,	98	]
[ 99,	102,	103,	98	]
[ 99,	102,	103,	98	]
[ 99,	102,	103,	98	]
[ 100,	97,	99,	99	]
[ 100,	97,	99,	99	]
[ 100,	97,	99,	99	]
[ 100,	97,	99,	99	]
[ 100,	97,	99,	101	]
[ 100,	97,	101,	97	]
[ 100,	97,	101,	97	]
[ 100,	97,	101,	97	]
[ 100,	97,	101,	97	]
[ 100,	97,	102,	97	]
[ 100,	97,	102,	97	]
[ 100,	97,	102,	97	]
[ 100,	97,	102,	97	]
[ 100,	97,	102,	102	]
[ 100,	97,	102,	102	]
[ 100,	97,	102,	102	]
[ 100,	97,	102,	102	]
[ 100,	97,	103,	98	]
[ 100,	97,	103,	98	]
[ 100,	97,	103,	98	]
[ 100,	97,	103,	98	]
[ 100,	100,	99,	99	]
[ 100,	100,	99,	99	]
[ 100,	100,	99,	99	]
[ 100,	100,	99,	99	]
[ 100,	100,	99,	101	]
[ 100,	100,	101,	97	]
[ 100,	100,	101,	97	]
[ 100,	100,	101,	97	]
[ 100,	100,	101,	97	]
[ 100,	100,	102,	97	]
[ 100,	100,	102,	97	]
[ 100,	100,	102,	97	]
[ 100,	100,	102,	97	]
[ 100,	100,	102,	102	]
[ 100,	100,	102,	102	]
[ 100,	100,	102,	102	]
[ 100,	100,	102,	102	]
[ 100,	100,	103,	98	]
[ 100,	100,	103,	98	]
[ 100,	100,	103,	98	]
[ 100,	100,	103,	98	]
[ 101,	99,	99,	99	]
[ 101,	99,	99,	99	]
[ 101,	99,	99,	99	]
[ 101,	99,	99,	99	]
[ 101,	99,	99,	99	]
[ 101,	99,	99,	99	]
[ 101,	99,	99,	99	]
[ 101,	99,	99,	99	]
[ 101,	99,	99,	101	]
[ 101,	99,	99,	101	]
[ 101,	99,	101,	97	]
[ 101,	99,	101,	97	]
[ 101,	99,	101,	97	]
[ 101,	99,	101,	97	]
[ 101,	99,	101,	97	]
[ 101,	99,	101,	97	]
[ 101,	99,	101,	97	]
[ 101,	99,	101,	97	]
[ 101,	99,	102,	97	]
[ 101,	99,	102,	97	]
[ 101,	99,	102,	97	]
[ 101,	99,	102,	97	]
[ 101,	99,	102,	97	]
[ 101,	99,	102,	97	]
[ 101,	99,	102,	97	]
[ 101,	99,	102,	97	]
[ 101,	99,	102,	102	]
[ 101,	99,	102,	102	]
[ 101,	99,	102,	102	]
[ 101,	99,	102,	102	]
[ 101,	99,	102,	102	]
[ 101,	99,	102,	102	]
[ 101,	99,	102,	102	]
[ 101,	99,	102,	102	]
[ 101,	99,	103,	98	]
[ 101,	99,	103,	98	]
[ 101,	99,	103,	98	]
[ 101,	99,	103,	98	]
[ 101,	99,	103,	98	]
[ 101,	99,	103,	98	]
[ 101,	99,	103,	98	]
[ 101,	99,	103,	98	]
[ 101,	100,	99,	99	]
[ 101,	100,	99,	99	]
[ 101,	100,	99,	99	]
[ 101,	100,	99,	99	]
[ 101,	100,	99,	101	]
[ 101,	100,	101,	97	]
[ 101,	100,	101,	97	]
[ 101,	100,	101,	97	]
[ 101,	100,	101,	97	]
[ 101,	100,	102,	97	]
[ 101,	100,	102,	97	]
[ 101,	100,	102,	97	]
[ 101,	100,	102,	97	]
[ 101,	100,	102,	102	]
[ 101,	100,	102,	102	]
[ 101,	100,	102,	102	]
[ 101,	100,	102,	102	]
[ 101,	100,	103,	98	]
[ 101,	100,	103,	98	]
[ 101,	100,	103,	98	]
[ 101,	100,	103,	98	]
[ 101,	101,	99,	99	]
[ 101,	101,	99,	99	]
[ 101,	101,	99,	99	]
[ 101,	101,	99,	99	]
[ 101,	101,	99,	101	]
[ 101,	101,	101,	97	]
[ 101,	101,	101,	97	]
[ 101,	101,	101,	97	]
[ 101,	101,	101,	97	]
[ 101,	101,	102,	97	]
[ 101,	101,	102,	97	]
[ 101,	101,	102,	97	]
[ 101,	101,	102,	97	]
[ 101,	101,	102,	102	]
[ 101,	101,	102,	102	]
[ 101,	101,	102,	102	]
[ 101,	101,	102,	102	]
[ 101,	101,	103,	98	]
[ 101,	101,	103,	98	]
[ 101,	101,	103,	98	]
[ 101,	101,	103,	98	]
[ 101,	102,	99,	99	]
[ 101,	102,	99,	99	]
[ 101,	102,	99,	99	]
[ 101,	102,	99,	99	]
[ 101,	102,	99,	101	]
[ 101,	102,	101,	97	]
[ 101,	102,	101,	97	]
[ 101,	102,	101,	97	]
[ 101,	102,	101,	97	]
[ 101,	102,	102,	97	]
[ 101,	102,	102,	97	]
[ 101,	102,	102,	97	]
[ 101,	102,	102,	97	]
[ 101,	102,	102,	102	]
[ 101,	102,	102,	102	]
[ 101,	102,	102,	102	]
[ 101,	102,	102,	102	]
[ 101,	102,	103,	98	]
[ 101,	102,	103,	98	]
[ 101,	102,	103,	98	]
[ 101,	102,	103,	98	]
[ 101,	103,	99,	99	]
[ 101,	103,	99,	99	]
[ 101,	103,	99,	99	]
[ 101,	103,	99,	99	]
[ 101,	103,	99,	101	]
[ 101,	103,	101,	97	]
[ 101,	103,	101,	97	]
[ 101,	103,	101,	97	]
[ 101,	103,	101,	97	]
[ 101,	103,	102,	97	]
[ 101,	103,	102,	97	]
[ 101,	103,	102,	97	]
[ 101,	103,	102,	97	]
[ 101,	103,	102,	102	]
[ 101,	103,	102,	102	]
[ 101,	103,	102,	102	]
[ 101,	103,	102,	102	]
[ 101,	103,	103,	98	]
[ 101,	103,	103,	98	]
[ 101,	103,	103,	98	]
[ 101,	103,	103,	98	]
[ 102,	99,	99,	99	]
[ 102,	99,	99,	99	]
[ 102,	99,	99,	99	]
[ 102,	99,	99,	99	]
[ 102,	99,	99,	101	]
[ 102,	99,	101,	97	]
[ 102,	99,	101,	97	]
[ 102,	99,	101,	97	]
[ 102,	99,	101,	97	]
[ 102,	99,	102,	97	]
[ 102,	99,	102,	97	]
[ 102,	99,	102,	97	]
[ 102,	99,	102,	97	]
[ 102,	99,	102,	102	]
[ 102,	99,	102,	102	]
[ 102,	99,	102,	102	]
[ 102,	99,	102,	102	]
[ 102,	99,	103,	98	]
[ 102,	99,	103,	98	]
[ 102,	99,	103,	98	]
[ 102,	99,	103,	98	]
[ 102,	100,	99,	99	]
[ 102,	100,	99,	99	]
[ 102,	100,	99,	99	]
[ 102,	100,	99,	99	]
[ 102,	100,	99,	101	]
[ 102,	100,	101,	97	]
[ 102,	100,	101,	97	]
[ 102,	100,	101,	97	]
[ 102,	100,	101,	97	]
[ 102,	100,	102,	97	]
[ 102,	100,	102,	97	]
[ 102,	100,	102,	97	]
[ 102,	100,	102,	97	]
[ 102,	100,	102,	102	]
[ 102,	100,	102,	102	]
[ 102,	100,	102,	102	]
[ 102,	100,	102,	102	]
[ 102,	100,	103,	98	]
[ 102,	100,	103,	98	]
[ 102,	100,	103,	98	]
[ 102,	100,	103,	98	]
[ 102,	102,	99,	99	]
[ 102,	102,	99,	99	]
[ 102,	102,	99,	99	]
[ 102,	102,	99,	99	]
[ 102,	102,	99,	101	]
[ 102,	102,	101,	97	]
[ 102,	102,	101,	97	]
[ 102,	102,	101,	97	]
[ 102,	102,	101,	97	]
[ 102,	102,	102,	97	]
[ 102,	102,	102,	97	]
[ 102,	102,	102,	97	]
[ 102,	102,	102,	97	]
[ 102,	102,	102,	102	]
[ 102,	102,	102,	102	]
[ 102,	102,	102,	102	]
[ 102,	102,	102,	102	]
[ 102,	102,	103,	98	]
[ 102,	102,	103,	98	]
[ 102,	102,	103,	98	]
[ 102,	102,	103,	98	]
[ 103,	96,	99,	99	]
[ 103,	96,	99,	99	]
[ 103,	96,	99,	99	]
[ 103,	96,	99,	99	]
[ 103,	96,	99,	101	]
[ 103,	96,	101,	97	]
[ 103,	96,	101,	97	]
[ 103,	96,	101,	97	]
[ 103,	96,	101,	97	]
[ 103,	96,	102,	97	]
[ 103,	96,	102,	97	]
[ 103,	96,	102,	97	]
[ 103,	96,	102,	97	]
[ 103,	96,	102,	102	]
[ 103,	96,	102,	102	]
[ 103,	96,	102,	102	]
[ 103,	96,	102,	102	]
[ 103,	96,	103,	98	]
[ 103,	96,	103,	98	]
[ 103,	96,	103,	98	]
[ 103,	96,	103,	98	]
[ 103,	98,	99,	99	]
[ 103,	98,	99,	99	]
[ 103,	98,	99,	99	]
[ 103,	98,	99,	99	]
[ 103,	98,	99,	101	]
[ 103,	98,	101,	97	]
[ 103,	98,	101,	97	]
[ 103,	98,	101,	97	]
[ 103,	98,	101,	97	]
[ 103,	98,	102,	97	]
[ 103,	98,	102,	97	]
[ 103,	98,	102,	97	]
[ 103,	98,	102,	97	]
[ 103,	98,	102,	102	]
[ 103,	98,	102,	102	]
[ 103,	98,	102,	102	]
[ 103,	98,	102,	102	]
[ 103,	98,	103,	98	]
[ 103,	98,	103,	98	]
[ 103,	98,	103,	98	]
[ 103,	98,	103,	98	]
[ 103,	99,	99,	99	]
[ 103,	99,	99,	99	]
[ 103,	99,	99,	99	]
[ 103,	99,	99,	99	]
[ 103,	99,	99,	101	]
[ 103,	99,	101,	97	]
[ 103,	99,	101,	97	]
[ 103,	99,	101,	97	]
[ 103,	99,	101,	97	]
[ 103,	99,	102,	97	]
[ 103,	99,	102,	97	]
[ 103,	99,	102,	97	]
[ 103,	99,	102,	97	]
[ 103,	99,	102,	102	]
[ 103,	99,	102,	102	]
[ 103,	99,	102,	102	]
[ 103,	99,	102,	102	]
[ 103,	99,	103,	98	]
[ 103,	99,	103,	98	]
[ 103,	99,	103,	98	]
[ 103,	99,	103,	98	]
[ 150,	150,	149,	149	]
[ 150,	150,	149,	151	]
#SELECT COUNT(*) FROM points1 p1, points2 p2 WHERE [p1.x, p1.y] distance [p2.x, p2.y, 15];
% sys.L1 # table_name
% L1 # name
% wrd # type
% 3 # length
[ 443	]
#SELECT COUNT(*) FROM points1 p1, points2 p2 WHERE (p1.x-p2.x)*(p1.x-p2.x)+(p1.y-p2.y)*(p1.y-p2.y) <= 15*15;
% sys.L1 # table_name
% L1 # name
% wrd # type
% 3 # length
[ 443	]
#DROP TABLE points1;
#DROP TABLE points2;

# 19:20:48 >  
# 19:20:48 >  "Done."
# 19:20:48 >  


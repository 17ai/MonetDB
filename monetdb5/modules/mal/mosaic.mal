module mosaic;

pattern compress(b:bat[:any_1], prop:str) :bat[:any_1]
address MOScompress
comment "Apply dynamic compression over chunks";

pattern compress(b:bat[:any_1]) :bat[:any_1]
address MOScompress
comment "Apply dynamic compression producing a temporary";

pattern decompress(b:bat[:any_1]) :bat[:any_1]
address MOSdecompress
comment "Apply dynamic decompression over chunks producing a temporary version";

pattern decompressStorage(b:bat[:any_1]) :bat[:any_1]
address MOSdecompressStorage
comment "Apply dynamic decompression, changing the storage layout permanently";

pattern analyse()
address MOSanalyse
comment "Apply heap compression on all";

pattern analyse(properties:str)
address MOSanalyse
comment "Apply heap compression on all with minimum threshold";

pattern analyse(properties:str,b:int)
address MOSanalyse
comment "Apply heap compression on a single column";

pattern analyse(b:int)
address MOSanalyse
comment "Apply default heap compression on a specific column";

pattern optimize(bid:int)
address MOSoptimize
comment "Perform a search thru the compression space using depth 1";

pattern optimize(bid:int)
address MOSoptimize
comment "Perform a search thru the compression space using up to 2^ply
candidate combinations";

pattern optimize(bid:int, blk:int)
address MOSoptimize
comment "Perform a search thru the compression space using up to 2^ply
candidate combinations and blk*1000 blocksize limits";

pattern slice(bid:lng)(b0:bte,b1:bte,b2:bte,b3:bte,b4:bte,b5:bte,b6:bte,b7:bte)
address MOSslice
comment "Break column into verticalslices";

pattern dump(b:bat[:any])
address MOSdump
comment "Dump the compressed structure";

pattern subselect(b:bat[:bte], low:bte, high:bte, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSsubselect;

pattern subselect(b:bat[:bit], low:bit, high:bit, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSsubselect;

pattern subselect(b:bat[:sht], low:sht, high:sht, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSsubselect;

pattern subselect(b:bat[:int], low:int, high:int, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSsubselect;

pattern subselect(b:bat[:lng], low:lng, high:lng, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSsubselect;

pattern subselect(b:bat[:oid], low:oid, high:oid, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSsubselect;

pattern subselect(b:bat[:flt], low:flt, high:flt, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSsubselect;

pattern subselect(b:bat[:dbl], low:dbl, high:dbl, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSsubselect;

pattern subselect(b:bat[:str], low:str, high:str, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSsubselect;

pattern subselect(b:bat[:timestamp], low:timestamp, high:timestamp, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSsubselect
comment "Overloaded selection routine";

pattern subselect(b:bat[:date], low:date, high:date, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSsubselect
comment "Overloaded selection routine";

pattern subselect(b:bat[:daytime], low:daytime, high:daytime, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSsubselect
comment "Overloaded selection routine";

pattern subselect(b:bat[:bte], cand:bat[:oid], low:bte, high:bte, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSsubselect;

pattern subselect(b:bat[:bit], cand:bat[:oid], low:bit, high:bit, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSsubselect;

pattern subselect(b:bat[:sht], cand:bat[:oid], low:sht, high:sht, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSsubselect;

pattern subselect(b:bat[:int], cand:bat[:oid], low:int, high:int, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSsubselect;

pattern subselect(b:bat[:lng], cand:bat[:oid], low:lng, high:lng, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSsubselect;

pattern subselect(b:bat[:oid], cand:bat[:oid], low:oid, high:oid, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSsubselect;

pattern subselect(b:bat[:flt], cand:bat[:oid], low:flt, high:flt, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSsubselect;

pattern subselect(b:bat[:dbl], cand:bat[:oid], low:dbl, high:dbl, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSsubselect;

pattern subselect(b:bat[:str], cand:bat[:oid], low:str, high:str, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSsubselect;

pattern subselect(b:bat[:timestamp], cand:bat[:oid], low:timestamp, high:timestamp, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSsubselect
comment "Overloaded selection routine";

pattern subselect(b:bat[:date], cand:bat[:oid], low:date, high:date, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSsubselect
comment "Overloaded selection routine";

pattern subselect(b:bat[:daytime], cand:bat[:oid], low:daytime, high:daytime, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSsubselect
comment "Overloaded selection routine";

pattern thetasubselect(b:bat[:bte], low:bte, oper:str) :bat[:oid]
address MOSthetasubselect;

pattern thetasubselect(b:bat[:bit], low:bit, oper:str) :bat[:oid]
address MOSthetasubselect;

pattern thetasubselect(b:bat[:sht], low:sht, oper:str) :bat[:oid]
address MOSthetasubselect;

pattern thetasubselect(b:bat[:int], low:int, oper:str) :bat[:oid]
address MOSthetasubselect;

pattern thetasubselect(b:bat[:lng], low:lng, oper:str) :bat[:oid]
address MOSthetasubselect;

pattern thetasubselect(b:bat[:oid], low:oid, oper:str) :bat[:oid]
address MOSthetasubselect;

pattern thetasubselect(b:bat[:flt], low:flt, oper:str) :bat[:oid]
address MOSthetasubselect;

pattern thetasubselect(b:bat[:dbl], low:dbl, oper:str) :bat[:oid]
address MOSthetasubselect;

pattern thetasubselect(b:bat[:str], low:str, oper:str) :bat[:oid]
address MOSthetasubselect;

pattern thetasubselect(b:bat[:timestamp], low:timestamp, oper:str) :bat[:oid]
address MOSthetasubselect
comment "Overloaded selection routine";

pattern thetasubselect(b:bat[:date], low:date, oper:str) :bat[:oid]
address MOSthetasubselect
comment "Overloaded selection routine";

pattern thetasubselect(b:bat[:daytime], low:daytime, oper:str) :bat[:oid]
address MOSthetasubselect
comment "Overloaded selection routine";

pattern thetasubselect(b:bat[:bte], c:bat[:oid], low:bte, oper:str) :bat[:oid]
address MOSthetasubselect;

pattern thetasubselect(b:bat[:bit], c:bat[:oid], low:bit, oper:str) :bat[:oid]
address MOSthetasubselect;

pattern thetasubselect(b:bat[:sht], c:bat[:oid], low:sht, oper:str) :bat[:oid]
address MOSthetasubselect;

pattern thetasubselect(b:bat[:int], c:bat[:oid], low:int, oper:str) :bat[:oid]
address MOSthetasubselect;

pattern thetasubselect(b:bat[:lng], c:bat[:oid], low:lng, oper:str) :bat[:oid]
address MOSthetasubselect;

pattern thetasubselect(b:bat[:oid], c:bat[:oid], low:oid, oper:str) :bat[:oid]
address MOSthetasubselect;

pattern thetasubselect(b:bat[:flt], c:bat[:oid], low:flt, oper:str) :bat[:oid]
address MOSthetasubselect;

pattern thetasubselect(b:bat[:dbl], c:bat[:oid], low:dbl, oper:str) :bat[:oid]
address MOSthetasubselect;

pattern thetasubselect(b:bat[:str], c:bat[:oid], low:str, oper:str) :bat[:oid]
address MOSthetasubselect;

pattern thetasubselect(b:bat[:timestamp], c:bat[:oid], low:timestamp, oper:str) :bat[:oid]
address MOSthetasubselect
comment "Overloaded selection routine";

pattern thetasubselect(b:bat[:date], c:bat[:oid], low:date, oper:str) :bat[:oid]
address MOSthetasubselect
comment "Overloaded selection routine";

pattern thetasubselect(b:bat[:daytime], c:bat[:oid], low:daytime, oper:str) :bat[:oid]
address MOSthetasubselect
comment "Overloaded selection routine";

pattern projection(b:bat[:oid], cand:bat[:bte]) :bat[:bte]
address MOSprojection;

pattern projection(b:bat[:oid], cand:bat[:bit]) :bat[:bit]
address MOSprojection;

pattern projection(b:bat[:oid], cand:bat[:sht]) :bat[:sht]
address MOSprojection;

pattern projection(b:bat[:oid], cand:bat[:int]) :bat[:int]
address MOSprojection;

pattern projection(b:bat[:oid], cand:bat[:lng]) :bat[:lng]
address MOSprojection;

pattern projection(b:bat[:oid], cand:bat[:hge]) :bat[:hge]
address MOSprojection;

pattern projection(b:bat[:oid], cand:bat[:oid]) :bat[:oid]
address MOSprojection;

pattern projection(b:bat[:oid], cand:bat[:flt]) :bat[:flt]
address MOSprojection;

pattern projection(b:bat[:oid], cand:bat[:dbl]) :bat[:dbl]
address MOSprojection;

pattern projection(b:bat[:oid], cand:bat[:str]) :bat[:str]
address MOSprojection;

pattern projection(b:bat[:oid], cand:bat[:timestamp]) :bat[:timestamp]
address MOSprojection
comment "Overloaded projection operation";

pattern projection(b:bat[:oid], cand:bat[:date]) :bat[:date]
address MOSprojection
comment "Overloaded projection operation";

pattern projection(b:bat[:oid], cand:bat[:daytime]) :bat[:daytime]
address MOSprojection
comment "Overloaded projection operation";

pattern subjoin(l:bat[:any_1],r:bat[:any_1],sl:bat[:oid],sr:bat[:oid],nil_matches:bit,estimate:lng) (:bat[:oid],:bat[:oid])
address MOSsubjoin
comment "Overloaded join operation";


stdout of test 'mosaic_delta_thetasubselect` in directory 'monetdb5/modules/mal` itself:


# 19:31:26 >  
# 19:31:26 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=37405" "--set" "mapi_usock=/var/tmp/mtest-25433/.s.monetdb.37405" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch1/mk/mosaic//Linux/var/MonetDB/mTests_monetdb5_modules_mal" "mosaic_delta_thetasubselect.mal"
# 19:31:26 >  

# MonetDB 5 server v11.20.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_modules_mal', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:37405/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-25433/.s.monetdb.37405
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
function user.main():void;
# Delta compression 
    b := bat.new(:oid,:int);
    bat.append(b,0);
    bat.append(b,1);
    bat.append(b,4);
    bat.append(b,-1);
    bat.append(b,-3);
    bat.append(b,1000);
    bat.append(b,1001);
    bat.append(b,1004);
    bat.append(b,999);
    bat.append(b,977);
    base := algebra.copy(b);
    io.print(base);
    x := mosaic.compress(b,"delta");
    s := algebra.thetasubselect(base,4,"<");
    io.print(s);
    xs := mosaic.thetasubselect(x,4,"<");
    io.print(xs);
    s := algebra.thetasubselect(base,4,"<=");
    io.print(s);
    xs := mosaic.thetasubselect(x,4,"<=");
    io.print(xs);
    s := algebra.thetasubselect(base,4,">");
    io.print(s);
    xs := mosaic.thetasubselect(x,4,">");
    io.print(xs);
    s := algebra.thetasubselect(base,4,">=");
    io.print(s);
    xs := mosaic.thetasubselect(x,4,">=");
    io.print(xs);
    s := algebra.thetasubselect(base,4,"==");
    io.print(s);
    xs := mosaic.thetasubselect(x,4,"==");
    io.print(xs);
    s := algebra.thetasubselect(base,4,"!=");
    io.print(s);
    xs := mosaic.thetasubselect(x,4,"!=");
    io.print(xs);
    c := bat.new(:oid,:oid);
    bat.append(c,0@0);
    bat.append(c,2@0);
    io.print(c);
    s := algebra.thetasubselect(base,c,4,"<");
    io.print(s);
    xs := mosaic.thetasubselect(x,c,4,"<");
    io.print(xs);
    s := algebra.thetasubselect(base,c,4,"<=");
    io.print(s);
    xs := mosaic.thetasubselect(x,c,4,"<=");
    io.print(xs);
    s := algebra.thetasubselect(base,c,4,">");
    io.print(s);
    xs := mosaic.thetasubselect(x,c,4,">");
    io.print(xs);
    s := algebra.thetasubselect(base,c,4,">=");
    io.print(s);
    xs := mosaic.thetasubselect(x,c,4,">=");
    io.print(xs);
    s := algebra.thetasubselect(base,c,4,"==");
    io.print(s);
    xs := mosaic.thetasubselect(x,c,4,"==");
    io.print(xs);
    s := algebra.thetasubselect(base,c,4,"!=");
    io.print(s);
    xs := mosaic.thetasubselect(x,c,4,"!=");
    io.print(xs);
end main;
#--------------------------#
# h	t  # name
# void	int  # type
#--------------------------#
[ 0@0,	0  ]
[ 1@0,	1  ]
[ 2@0,	4  ]
[ 3@0,	-1  ]
[ 4@0,	-3  ]
[ 5@0,	1000  ]
[ 6@0,	1001  ]
[ 7@0,	1004  ]
[ 8@0,	999  ]
[ 9@0,	977  ]
#header block 244d0b0 version 20140808
#index top 1
#[0] 5 96
#header block 244d0b0 version 20140808
#index top 2
#[0] 5 96
#[1] 10 120
#blk  type 5 todo 0
#wins 0 0 0 2 0 0 
#elms 0 0 0 10 0 0 
#time 0 0 0 0 0 0 
#perc 0 0 0 100 0 0 
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	1@0  ]
[ 2@0,	3@0  ]
[ 3@0,	4@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	1@0  ]
[ 2@0,	3@0  ]
[ 3@0,	4@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	1@0  ]
[ 2@0,	2@0  ]
[ 3@0,	3@0  ]
[ 4@0,	4@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	1@0  ]
[ 2@0,	2@0  ]
[ 3@0,	3@0  ]
[ 4@0,	4@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	5@0  ]
[ 1@0,	6@0  ]
[ 2@0,	7@0  ]
[ 3@0,	8@0  ]
[ 4@0,	9@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	5@0  ]
[ 1@0,	6@0  ]
[ 2@0,	7@0  ]
[ 3@0,	8@0  ]
[ 4@0,	9@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	2@0  ]
[ 1@0,	5@0  ]
[ 2@0,	6@0  ]
[ 3@0,	7@0  ]
[ 4@0,	8@0  ]
[ 5@0,	9@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	2@0  ]
[ 1@0,	5@0  ]
[ 2@0,	6@0  ]
[ 3@0,	7@0  ]
[ 4@0,	8@0  ]
[ 5@0,	9@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	2@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	2@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	1@0  ]
[ 2@0,	3@0  ]
[ 3@0,	4@0  ]
[ 4@0,	5@0  ]
[ 5@0,	6@0  ]
[ 6@0,	7@0  ]
[ 7@0,	8@0  ]
[ 8@0,	9@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	1@0  ]
[ 2@0,	3@0  ]
[ 3@0,	4@0  ]
[ 4@0,	5@0  ]
[ 5@0,	6@0  ]
[ 6@0,	7@0  ]
[ 7@0,	8@0  ]
[ 8@0,	9@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	2@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	2@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	2@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	2@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	2@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	2@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	2@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]

# 19:31:27 >  
# 19:31:27 >  "Done."
# 19:31:27 >  


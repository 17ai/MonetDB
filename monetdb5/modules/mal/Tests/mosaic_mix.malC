# OID list compressions

o := 19531025:int;

b:= bat.new(:oid,:int);
bat.append(b,0);
bat.append(b,1);
bat.append(b,2);
bat.append(b,3);
bat.append(b,5);
bat.append(b,7);
bat.append(b,70);
bat.append(b,188);
bat.append(b,190);
bat.append(b,192);
bat.append(b,9999);
bat.append(b,50);
bat.append(b,49);
bat.append(b,50);
bat.append(b,50);
bat.append(b,48);
bat.append(b,1003);
bat.append(b,1002);
bat.append(b,1001);
bat.append(b,1000);
bat.append(b,95);
bat.append(b,99);
bat.append(b,96);
bat.append(b,98);
bat.append(b,97);
bat.append(b,94);
bat.append(b,90);
bat.append(b,93);
bat.append(b,91);
bat.append(b,92);
bat.append(b,1140);
bat.append(b,1130);
bat.append(b,1120);
bat.append(b,1110);
bat.append(b,1100);
bat.append(b,1250);
bat.append(b,1260);
bat.append(b,1270);
bat.append(b,1280);
bat.append(b,1290);
bat.append(b,o);
bat.append(b,o);
bat.append(b,o);
bat.append(b,o);
bat.append(b,o);
bat.append(b,o);
bat.append(b,o);
bat.append(b,o);
bat.append(b,o);
bat.append(b,o);
bat.append(b,o);
bat.append(b,o);
bat.append(b,o);
bat.append(b,o);
bat.append(b,o);
bat.append(b,o);
bat.append(b,o);
bat.append(b,o);
bat.append(b,o);
bat.append(b,o);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
b:= bat.append(b,b);

io.print(b);
io.print("literal");
x:= mosaic.compress(b,"literal");
#mosaic.dump(x);
z:= mosaic.decompress(x);
io.print(z);

io.print("prefix");
x0:= mosaic.compress(b,"prefix");
z:= mosaic.decompress(x0);
io.print(z);

io.print("dictionary");
x1:= mosaic.compress(b,"dictionary");
z:= mosaic.decompress(x1);
io.print(z);

io.print("runlength");
x2:= mosaic.compress(b,"runlength");
z:= mosaic.decompress(x2);
io.print(z);

io.print("frame");
x3:= mosaic.compress(b,"frame");
z:= mosaic.decompress(x3);
io.print(z);

io.print("linear");
x4:= mosaic.compress(b,"linear");
z:= mosaic.decompress(x4);
io.print(z);

io.print("delta");
x5:= mosaic.compress(b,"delta");
z:= mosaic.decompress(x5);
io.print(z);

## all together
xall:= mosaic.compress(b);
z:= mosaic.decompress(xall);
io.print(xall);
io.print(z);

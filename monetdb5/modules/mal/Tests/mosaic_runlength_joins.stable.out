stdout of test 'mosaic_runlength_joins` in directory 'monetdb5/modules/mal` itself:


# 20:46:33 >  
# 20:46:33 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=32355" "--set" "mapi_usock=/var/tmp/mtest-3204/.s.monetdb.32355" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch1/mk/mosaic//Linux/var/MonetDB/mTests_monetdb5_modules_mal" "mosaic_rle_fetchjoin.mal"
# 20:46:33 >  

# MonetDB 5 server v11.20.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_modules_mal', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:32355/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-3204/.s.monetdb.32355
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
function user.main():void;
# Compression of noncompressable column 
    b := bat.new(:oid,:int);
    bat.append(b,50);
    bat.append(b,50);
    bat.append(b,9);
    bat.append(b,9);
    bat.append(b,9);
    b := bat.append(b,b);
    base := algebra.copy(b);
    io.print(base);
    x := mosaic.compress(b,"runlength");
    c := bat.new(:oid,:oid);
    bat.append(c,0@0);
    bat.append(c,2@0);
    bat.append(c,4@0);
    io.print(c);
#mosaic.dump(x); 
    s := algebra.leftfetchjoin(c,base);
    io.print(s);
    xs := mosaic.leftfetchjoin(c,x);
    io.print(xs);
    d := bat.new(:oid,:int);
    bat.append(d,9);
    bat.append(d,11);
    bat.append(d,nil:int);
    (jl,jr) := algebra.join(base,d);
    io.print(jl,jr);
    (ml,mr) := mosaic.join(x,d);
    io.print(ml,mr);
    (jl,jr) := algebra.join(d,base);
    io.print(jl);
    io.print(jr);
    io.print(jl,jr);
    (ml,mr) := mosaic.join(d,x);
    io.print(ml);
    io.print(mr);
    io.print(ml,mr);
end user.main;
#--------------------------#
# h	t  # name
# void	int  # type
#--------------------------#
[ 0@0,	50  ]
[ 1@0,	50  ]
[ 2@0,	9  ]
[ 3@0,	9  ]
[ 4@0,	9  ]
[ 5@0,	50  ]
[ 6@0,	50  ]
[ 7@0,	9  ]
[ 8@0,	9  ]
[ 9@0,	9  ]
#header block version 20140808
#index top 1
#[0] 2 84
#header block version 20140808
#index top 2
#[0] 2 84
#[1] 5 96
#header block version 20140808
#index top 3
#[0] 2 84
#[1] 5 96
#[2] 7 108
#ditch entry 1
#header block version 20140808
#index top 3
#[0] 2 84
#[1] 7 108
#[2] 10 120
#type 5 todo 0
#wins 0 18 0 0 0 0 0 
#elms 0 10 0 0 0 0 0 
#time 0 0 0 0 0 0 0 
#perc 0 0 0 0 0 0 0 
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	2@0  ]
[ 2@0,	4@0  ]
#--------------------------#
# h	t  # name
# void	int  # type
#--------------------------#
[ 0@0,	50  ]
[ 1@0,	9  ]
[ 2@0,	9  ]
#--------------------------#
# h	t  # name
# void	int  # type
#--------------------------#
[ 0@0,	50  ]
[ 1@0,	9  ]
[ 2@0,	9  ]
#--------------------------#
# h	t	t  # name
# void	oid	oid  # type
#--------------------------#
[ 0@0,	2@0,	0@0  ]
[ 1@0,	3@0,	0@0  ]
[ 2@0,	4@0,	0@0  ]
[ 3@0,	7@0,	0@0  ]
[ 4@0,	8@0,	0@0  ]
[ 5@0,	9@0,	0@0  ]
#--------------------------#
# h	t	t  # name
# void	oid	oid  # type
#--------------------------#
[ 0@0,	2@0,	0@0  ]
[ 1@0,	3@0,	0@0  ]
[ 2@0,	4@0,	0@0  ]
[ 3@0,	7@0,	0@0  ]
[ 4@0,	8@0,	0@0  ]
[ 5@0,	9@0,	0@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	0@0  ]
[ 2@0,	0@0  ]
[ 3@0,	0@0  ]
[ 4@0,	0@0  ]
[ 5@0,	0@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	2@0  ]
[ 1@0,	3@0  ]
[ 2@0,	4@0  ]
[ 3@0,	7@0  ]
[ 4@0,	8@0  ]
[ 5@0,	9@0  ]
#--------------------------#
# h	t	t  # name
# void	oid	oid  # type
#--------------------------#
[ 0@0,	0@0,	2@0  ]
[ 1@0,	0@0,	3@0  ]
[ 2@0,	0@0,	4@0  ]
[ 3@0,	0@0,	7@0  ]
[ 4@0,	0@0,	8@0  ]
[ 5@0,	0@0,	9@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	0@0  ]
[ 1@0,	0@0  ]
[ 2@0,	0@0  ]
[ 3@0,	0@0  ]
[ 4@0,	0@0  ]
[ 5@0,	0@0  ]
#--------------------------#
# h	t  # name
# void	oid  # type
#--------------------------#
[ 0@0,	2@0  ]
[ 1@0,	3@0  ]
[ 2@0,	4@0  ]
[ 3@0,	7@0  ]
[ 4@0,	8@0  ]
[ 5@0,	9@0  ]
#--------------------------#
# h	t	t  # name
# void	oid	oid  # type
#--------------------------#
[ 0@0,	0@0,	2@0  ]
[ 1@0,	0@0,	3@0  ]
[ 2@0,	0@0,	4@0  ]
[ 3@0,	0@0,	7@0  ]
[ 4@0,	0@0,	8@0  ]
[ 5@0,	0@0,	9@0  ]

# 20:46:33 >  
# 20:46:33 >  "Done."
# 20:46:33 >  


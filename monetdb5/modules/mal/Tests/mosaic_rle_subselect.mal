# Compression of noncompressable column
b:= bat.new(:oid,:int);
bat.append(b,50);
bat.append(b,50);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
b:= bat.append(b,b);

io.print(b);
x:= mosaic.compress(b,"rle");

s:= algebra.subselect(b,0,50,false,false,false);
io.print(s);
xs:= mosaic.subselect(x,0,50,false,false,false);
io.print(xs);

s:= algebra.subselect(b,0,50,false,true,false);
io.print(s);
xs:= mosaic.subselect(x,0,50,false,true,false);
io.print(xs);

s:= algebra.subselect(b,0,50,true,false,false);
io.print(s);
xs:= mosaic.subselect(x,0,50,true,false,false);
io.print(xs);

s:= algebra.subselect(b,0,50,true,true,false);
io.print(s);
xs:= mosaic.subselect(x,0,50,true,true,false);
io.print(xs);

s:= algebra.subselect(b,nil:int,50,false,false,false);
io.print(s);
xs:= mosaic.subselect(x,nil:int,50,false,false,false);
io.print(xs);

s:= algebra.subselect(b,50,nil:int,false,false,false);
io.print(s);
xs:= mosaic.subselect(x,50,nil:int,false,false,false);
io.print(xs);

s:= algebra.subselect(b,nil:int,nil:int,false,false,false);
io.print(s);
xs:= mosaic.subselect(x,nil:int,nil:int,false,false,false);
io.print(xs);

s:= algebra.subselect(b,nil:int,nil:int,false,false,true);
io.print(s);
xs:= mosaic.subselect(x,nil:int,nil:int,false,false,true);
io.print(xs);

c:= bat.new(:oid,:oid);
bat.append(c,0@0);
bat.append(c,3@0);
io.print(c);

s:= algebra.thetasubselect(b,c,50,"<");
io.print(s);
xs:= mosaic.thetasubselect(x,c,50,"<");
io.print(xs);

s:= algebra.thetasubselect(b,c,50,"<=");
io.print(s);
xs:= mosaic.thetasubselect(x,c,50,"<=");
io.print(xs);

s:= algebra.thetasubselect(b,c,50,">");
io.print(s);
xs:= mosaic.thetasubselect(x,c,50,">");
io.print(xs);

s:= algebra.thetasubselect(b,c,50,">=");
io.print(s);
xs:= mosaic.thetasubselect(x,c,50,">=");
io.print(xs);

s:= algebra.thetasubselect(b,c,50,"==");
io.print(s);
xs:= mosaic.thetasubselect(x,c,50,"==");
io.print(xs);

s:= algebra.thetasubselect(b,c,50,"!=");
io.print(s);
xs:= mosaic.thetasubselect(x,c,50,"!=");
io.print(xs);


#extraction of cell positions from arrays

#create array v(i int dimension[0:1:4])
v:= array.series(0,1,4,1,1);
io.print(v);

#create array M(x int dimension[0:2:6], y int dimension[0:1:4], int default 333);
mx:= array.series(0,2,6,4,1);
my:= array.series(0,1,4,1,3);
mv:= array.filler(mx,333);
io.print(mx,my,mv);

#extract the indices from both
#do a point select
x:= bat.new(:oid,:int);
bat.insert(x, 0@0,1);
io.print(x);
y:= bat.new(:oid,:int);
bat.insert(y, 0@0,2);
io.print(y);

#fetch the position of an element in a vector
z1:= array.map(v,x);
io.print(z1);
z1:= array.map(v,y);
io.print(z1);

#get the original cell oids
x1:= array.map(v,v);
io.print(x1);

x2:= array.map(mx,my,mx,my);
io.print(x2);

# select a slice M[2][0:1:3]
x3:= array.map(mx,my,y,v);
io.print(x3);
# select a slice M[0:1:3][2]
x3:= array.map(mx,my,v,y);
io.print(x3);

# select a slice A[0:1:3][0:2:6]
x4:= array.map(v,mx);
io.print(x4);

# select a slice [0:1:3][0:2:6]
x5:= array.map(v,v,mx,my);
io.print(x5);

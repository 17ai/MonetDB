# OID list compressions

o := 19531025:int;

b:= bat.new(:oid,:int);
bat.append(b,0);
bat.append(b,1);
bat.append(b,2);
bat.append(b,3);
bat.append(b,188);
bat.append(b,50);
bat.append(b,50);
bat.append(b,48);
bat.append(b,1003);
bat.append(b,1002);
bat.append(b,1290);
bat.append(b,o);
bat.append(b,o);
bat.append(b,o);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
base:=algebra.copy(b);

io.print(base);
x:= mosaic.compress(b,"runlength dictionary delta linear frame");
mosaic.dump(x);

c:= bat.new(:oid,:oid);
bat.append(c,0@0);
bat.append(c,2@0);
bat.append(c,5@0);
io.print(c);

#mosaic.dump(x);
s:= algebra.projection(c,base);
io.print(s);
xs:= mosaic.projection(c,x);
io.print(xs);

d:= bat.new(:oid,:int);
bat.append(d,9);
bat.append(d,11);
bat.append(d,nil:int);

(jl,jr):= algebra.subjoin(base,d, nil:bat, nil:bat, false, 0:lng);
io.print(jl,jr);
(ml,mr):= mosaic.subjoin(x,d, nil:bat, nil:bat, false, 0:lng);
io.print(ml,mr);

(jl,jr):= algebra.subjoin(d,base, nil:bat, nil:bat, false, 0:lng);
io.print(jl);
io.print(jr);
io.print(jl,jr);
(ml,mr):= mosaic.subjoin(d,x, nil:bat, nil:bat, false, 0:lng);
io.print(ml);
io.print(mr);
io.print(ml,mr);

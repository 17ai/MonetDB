# Compression of noncompressable column
b:= bat.new(:int);
bat.append(b,50);
bat.append(b,50);
bat.append(b,9);
bat.append(b,9);
bat.append(b,9);
b:= bat.append(b,b);
base:= algebra.copy(b);

io.print(base);
x:= mosaic.compress(b,"runlength");

c:= bat.new(:oid);
bat.append(c,0@0);
bat.append(c,2@0);
bat.append(c,4@0);
io.print(c);

#mosaic.dump(x);
s:= algebra.projection(c,base);
io.print(s);
xs:= mosaic.projection(c,x);
io.print(xs);

d:= bat.new(:int);
bat.append(d,9);
bat.append(d,11);
bat.append(d,nil:int);

(jl,jr):= algebra.subjoin(base,d, nil:bat, nil:bat, false, 0:lng);
io.print(jl,jr);
(ml,mr):= mosaic.subjoin(x,d, nil:bat, nil:bat, false, 0:lng);
io.print(ml,mr);

(jl,jr):= algebra.subjoin(d,base, nil:bat, nil:bat, false, 0:lng);
io.print(jl);
io.print(jr);
io.print(jl,jr);
(ml,mr):= mosaic.subjoin(d,x, nil:bat, nil:bat, false, 0:lng);
io.print(ml);
io.print(mr);
io.print(ml,mr);

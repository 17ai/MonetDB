module mosaic;

pattern compress(b:bat[:any_1], prop:str):bat[:any_1]
address MOScompress
comment "Apply dynamic compression over chunks";

pattern compress(b:bat[:any_1]) :bat[:any_1]
address MOScompress
comment "Apply dynamic compression producing a temporary";

pattern decompress(b:bat[:any_1]) :bat[:any_1]
address MOSdecompress
comment "Apply dynamic decompression over chunks producing a temporary version";

pattern decompressStorage(b:bat[:any_1]) :bat[:any_1]
address MOSdecompressStorage
comment "Apply dynamic decompression, changing the storage layout permanently";

pattern analyse()
address MOSanalyse
comment "Apply heap compression on all";

pattern analyse(properties:str)
address MOSanalyse
comment "Apply heap compression on all with minimum threshold";

pattern analyse(properties:str,b:int)
address MOSanalyse
comment "Apply heap compression on a single column";

pattern analyse(b:int)
address MOSanalyse
comment "Apply default heap compression on a specific column";

pattern optimize(bid:int)
address MOSoptimizer
comment "Perform a search thru the compression space using depth 1";

pattern optimize(bid:int)
address MOSoptimizer
comment "Perform a search thru the compression space of
candidate combinations";

pattern optimize(bid:int, blk:int)
address MOSoptimizer
comment "Perform a search thru the compression space of
candidate combinations";

pattern slice(bid:lng)(b0:bte,b1:bte,b2:bte,b3:bte,b4:bte,b5:bte,b6:bte,b7:bte)
address MOSslice
comment "Break column into verticalslices";

pattern dump(b:bat[:any])
address MOSdump
comment "Dump the compressed structure";

pattern select(b:bat[:any_1], low:any_1, high:any_1, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSselect
comment "Overloaded selection routine";

pattern select(b:bat[:any_1], cand:bat[:oid], low:any_1, high:any_1, li:bit, hi:bit, anti:bit) :bat[:oid]
address MOSselect
comment "Overloaded selection routine";

pattern thetaselect(b:bat[:any_1], low:any_1, oper:str) :bat[:oid]
address MOSthetaselect
comment "Overloaded selection routine";

pattern thetaselect(b:bat[:any_1], c:bat[:oid], low:any_1, oper:str) :bat[:oid]
address MOSthetaselect
comment "Overloaded selection routine";

pattern projection(b:bat[:oid], cand:bat[:any_1]) :bat[:any_1]
address MOSprojection
comment "Overloaded projection operation";

pattern join(l:bat[:any_1],r:bat[:any_1],sl:bat[:oid],sr:bat[:oid],nil_matches:bit,estimate:lng) (:bat[:oid],:bat[:oid])
address MOSjoin
comment "Overloaded join operation";


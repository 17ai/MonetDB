stdout of test 'manifold2` in directory 'monetdb5/optimizer` itself:


# 09:02:36 >  
# 09:02:36 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=33759" "--set" "mapi_usock=/var/tmp/mtest-28130/.s.monetdb.33759" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch1/mk/default//Linux/var/MonetDB/mTests_monetdb5_optimizer" "manifold2.mal"
# 09:02:36 >  

# MonetDB 5 server v11.20.0
# This is an unreleased version
# Serving database 'mTests_monetdb5_optimizer', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.590 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:33759/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-28130/.s.monetdb.33759
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.
#    z:bat[:oid,:dbl] := mal.multiplex("calc":str,"max":str,b:bat[:oid,:dbl],b2:bat[:oid,:dbl]);

# 15:36:15 >  
# 15:36:15 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-27236" "--port=37175"
# 15:36:15 >  

function user.tst(b:bat[:dbl], b2:bat[:dbl]):void;	#[0] (0)  0 <- 1 2 
barrier X_3:bit := language.dataflow(); 	#[1] (0) MALstartDataflow 9 
    c:lng := aggr.count(b:bat[:dbl]);   	#[2] (0) ALGcount_bat 3 <- 1 
    c2:lng := aggr.count(b2:bat[:dbl]); 	#[3] (0) ALGcount_bat 4 <- 2 
exit X_3:bit;                           	#[4] (0)  9 
    z:bat[:dbl] := mal.multiplex("calc":str, "max":str, b:bat[:dbl], b2:bat[:dbl]);	#[5] (0) MANIFOLDremapMultiplex 5 <- 6 7 1 2  polymorphic
    io.print(z:bat[:dbl], b:bat[:dbl], b2:bat[:dbl]);	#[6] (0) IOtable 8 <- 5 1 2 
end user.tst;                           	#[7] (0)  
#dataflow             actions= 1 time=23 usec 
#[ 0]   tst (0,0,5) =  :void   not used 
#[ 1]     b (1,0,4) =  :bat[:dbl]   
#[ 2]    b2 (2,0,4) =  :bat[:dbl]   
#[ 3]     c (1,1,1) =  :lng   not used 
#[ 4]    c2 (2,2,2) =  :lng   not used 
#[ 5]     z (3,3,4) =  :bat[:dbl]   
#[ 6]   X_0 (3,3,3) = "calc" :str  constant  
#[ 7]   X_1 (3,3,3) = "max" :str  constant  
#[ 8]   X_2 (4,4,4) =  :void   not used 
#[ 9]   X_3 (0,0,0) =  :bit  
#[13]   X_7 (0,0,0) =  :bat[:dbl]  
#[14]   X_8 (0,0,0) = nil :dbl  constant 
#[16]  X_10 (0,0,0) =  :oid  
#[17]  X_11 (0,0,0) =  :dbl  
#[19]  X_13 (0,0,0) =  :dbl  
#[21]  X_15 (0,0,0) =  :dbl  
function user.tst(b:bat[:dbl], b2:bat[:dbl]):void;	#[0] (0)  0 <- 1 2 
barrier X_3:bit := language.dataflow(); 	#[1] (0) MALstartDataflow 9 
    c:lng := aggr.count(b:bat[:dbl]);   	#[2] (0) ALGcount_bat 3 <- 1 
    c2:lng := aggr.count(b2:bat[:dbl]); 	#[3] (0) ALGcount_bat 4 <- 2 
exit X_3:bit;                           	#[4] (0)  9 
    X_7:bat[:dbl] := bat.new(nil:dbl);  	#[5] (0) CMDBATnew 13 <- 14 
barrier (X_10:oid, X_11:dbl) := iterator.new(b:bat[:dbl]);	#[6] (0) ITRbunIterator 16 17 <- 1 
    X_13:dbl := algebra.fetch(b2:bat[:dbl], X_10:oid);	#[7] (0) ALGfetchoid 19 <- 2 16 
    X_15:dbl := calc.max(X_11:dbl, X_13:dbl);	#[8] (0) CALCmax 21 <- 17 19 
    bat.append(X_7:bat[:dbl], X_15:dbl);	#[9] (0) BKCappend_val_wrap 22 <- 13 21 
    redo (X_10:oid, X_11:dbl) := iterator.next(b:bat[:dbl]);	#[10] (0) ITRbunNext 16 17 <- 1 
exit (X_10:oid, X_11:dbl);              	#[11] (0)  16 17 
    z:bat[:dbl] := X_7:bat[:dbl];       	#[12] (0)  5 <- 13 
    io.print(z:bat[:dbl], b:bat[:dbl], b2:bat[:dbl]);	#[13] (0) IOtable 8 <- 5 1 2 
end user.tst;                           	#[14] (0)  

# 09:02:36 >  
# 09:02:36 >  "Done."
# 09:02:36 >  


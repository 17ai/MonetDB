stdout of test 'ifthencst` in directory 'monetdb5/optimizer` itself:


# 16:52:54 >  
# 16:52:54 >   mserver5 "--config=/ufs/mk/monet5//Linux/etc/monetdb5.conf" --debug=10 --set gdk_nr_threads=0 --set "monet_mod_path=/ufs/mk/monet5//Linux/lib/MonetDB5:/ufs/mk/monet5//Linux/lib/MonetDB5/lib:/ufs/mk/monet5//Linux/lib/MonetDB5/bin" --set "gdk_dbfarm=/ufs/mk/monet5//Linux/var/MonetDB5/dbfarm" --set "sql_logdir=/ufs/mk/monet5//Linux/var/MonetDB5/sql_logs"   --set mapi_open=true --set xrpc_open=true --set mapi_port=39977 --set xrpc_port=45771 --set xrpc_docroot=/ufs/mk/monet5/package/MonetDB5 --set monet_prompt= --trace  --dbname=mTests_src_optimizer  ifthencst.mal
# 16:52:54 >  

# MonetDB server v5.10.0, based on kernel v1.28.0
# Serving database 'mTests_src_optimizer', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs dynamically linked
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.da.cwi.nl:37175/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-27236/.s.monetdb.37175
# MonetDB/GIS module loaded
# Start processing logs sql/sql_logs version 52200
# Start reading the write-ahead log 'sql_logs/sql/log.4'
# Finished reading the write-ahead log 'sql_logs/sql/log.4'
# Finished processing logs sql/sql_logs
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.

# 15:36:16 >  
# 15:36:16 >  "mclient" "-lmal" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-27236" "--port=37175"
# 15:36:16 >  

function user.tst():void;               	#[0] (0)  0 
barrier a:bit := false:bit;             	#[1] (0)  1 <- 2 
    io.print("never executed":str);     	#[2] (0) IOprint_val 3 <- 4 
exit a:bit;                             	#[3] (0)  1 
barrier b:bit := calc.not(false:bit);   	#[4] (0) CMDvarNOT 5 <- 2 
    io.print("always executed":str);    	#[5] (0) IOprint_val 6 <- 7 
exit b:bit;                             	#[6] (0)  5 
barrier c:bit := true:bit;              	#[7] (0)  8 <- 9 
    io.print("always executed":str);    	#[8] (0) IOprint_val 10 <- 7 
exit c:bit;                             	#[9] (0)  8 
barrier d:bit := calc.not(true:bit);    	#[10] (0) CMDvarNOT 11 <- 9 
    io.print("never executed":str);     	#[11] (0) IOprint_val 12 <- 4 
exit d:bit;                             	#[12] (0)  11 
end user.tst;                           	#[13] (0)  
function user.tst():void;               	#[0] (0)  0 
    io.print("always executed":str);    	#[1] (0) IOprint_val 6 <- 7 
    io.print("always executed":str);    	#[2] (0) IOprint_val 10 <- 7 
end user.tst;                           	#[3] (0)  
#evaluate             actions= 4 time=22 usec 
[ "always executed" ]
[ "always executed" ]

# 16:52:54 >  
# 16:52:54 >  Done.
# 16:52:54 >  


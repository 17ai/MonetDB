# The contents of this file are subject to the MonetDB Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://www.monetdb.org/Legal/MonetDBLicense
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is the MonetDB Database System.
#
# The Initial Developer of the Original Code is CWI.
# Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
# Copyright August 2008-2013 MonetDB B.V.
# All Rights Reserved.

module rdf;

io.print("RDFschemaExplore mal loaded");
command rdfschemaexplore(tbname:str, clname:str ) :void
address RDFSchemaExplore
comment "Explore the schema information from input table e.g., SPO in RDF";

command rdfextractCS( sbat:bat[:any_1,:oid], pbat:bat[:any_2,:oid], freqThreshold:int ) :void
address RDFextractCS
comment "Extract Characteristic sets from SPO table. While extracting CSs, get the frequent CSs";

command rdfextractPfromPSO(pbat:bat[:any_1,:oid], sbat:bat[:any_2,:oid]):void
address RDFextractPfromPSO
comment "Extract Properties and their supports from PSO table";

command rdfextractCSwithTypes( sbat:bat[:any_1,:oid], pbat:bat[:any_2,:oid], obat:bat[:any_3,:oid], mbat:bat[:any_4,:str], freqThreshold:int, freqCSset:void) :void
address RDFextractCSwithTypes
comment "Extract Characteristic sets from SPO table. While extracting CSs, detect the object type";

#TODO: The list of parameters for this function is not correct any more sice it has been changed for the fucntion in sql.mx  												   
command rdfreorganize( sbat:bat[:any_1,:oid], pbat:bat[:any_2,:oid], obat:bat[:any_3,:oid], mbat:bat[:any_4,:str], freqThreshold:int ) :void
address RDFreorganize
comment "Re-organize RDF triple store using the characteristic sets";

command rdfloadontology(location:str, schema:str ) :void
address RDFOntologyParser
comment "Load ontologies into RDF store";

command rdfloadsqlontologies( auri:bat[:any_1,:str], aattr:bat[:any_2,:str], muri:bat[:any_3,:str], msuper:bat[:any_4,:str] ) :void
address RDFloadsqlontologies
comment "Load ontologies from SQL into string arrays";


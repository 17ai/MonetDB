MonetDB IOT RESTful WebServer to use with the new DataCell engine written in Python 2 using Flask-RESTful framework.

The program is composed by two webservers: one for administration purposes regarding the creation and deletion of streams, and other for stream input using JSON requests.


REST resources available on administration webserver running by default on port 8001 (should be privated from outside networks):

/streams - GET - Returns JSON file with details about all the streams currently supported on the webserver.

/context - POST - Creates a stream using the JSON Schema defined on src/Streams/jsonschemas.py on CREATE_STREAMS_SCHEMA variable.

/context - DELETE - Deletes a stream using the JSON Schema defined on src/Streams/jsonschemas.py on DELETE_STREAMS_SCHEMA variable.


REST resources available on iot webserver running by default on port 8000:

/streams - GET - Returns JSON file with details about all the streams currently supported on the webserver.

/stream/<string:schema_name>/<string:stream_name> - GET - Returns JSON file with details of the stream_name on schema_name

/stream/<string:schema_name>/<string:stream_name> - POST - Inserts data to the stream using a JSON schema generated while creating the stream. The input must be a JSON array even for a single input.


Currently supports most of MonetDB datatypes. An implicit Timestamp column is added with the tuples arrival date. The flushing of the baskets can be either Tuple or Time based, as specied on the streams' creation.

More details coming soon.


Maintainer: Pedro Ferreira at CWI, email: P.E.Ferreira@cwi.nl


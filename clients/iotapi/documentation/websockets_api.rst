.. _websockets_api:

**************
WebSockets API
**************

Bellow is listed the available request and response messages for the WebSockets API.

Requests
========

The client must always provide a JSON string in a request with a request field indicating the intended action to perform in the server, followed by the other specific fields depending on the request.

.. important:: The :code:`request` field on the JSON request must always be lowercase!

The following sections explain the available :code:`request` fields.

sub
---

Subscribes for new basket creations from a specific stream. Whenever a basket is created, the server sends a notification message indicating the number of inserted tuples in the new basket. The user has to specify the stream's name and schema.

.. code-block:: json

    {
        "request": "sub",
        "schema": "measures",
        "stream": "temperature"
    }

unsub
-----

Unsubscribes a previous subscribed stream for a client. The user has to specify the stream's name and schema. The example is the same as above, just changing the request keyword.

read
----

Reads output result from baskets generated by a stream.

.. important:: The user has not to be subscribed to the stream in order to read data from it!

It's possible to provide an offset, a limit and a basket number where the read should start. The request will always provide a result, even if the query provides no tuples to read. The user has to specify the stream's name and schema.

.. code-block:: json

    {
        "request": "read",
        "basket": 2,
        "offset": 10,
        "limit": 100
    }

info
----

Retrieves information about a giving stream if a stream's name and schema are provided, or all the existing streams in the system otherwise.

.. code-block:: json

    {
        "request": "info",
        "schema": "measures",
        "stream": "temperature"
    }

Responses
=========

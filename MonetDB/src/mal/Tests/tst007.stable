# Monet Database Server V5.0
# Copyright (c) 1993-2001, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
# gdk_dbfarm:/ufs/mk/monet_5-0/Linux/../dbfarm
# gdk_dbname:demo
# gdk_dbdir:/ufs/mk/monet_5-0/Linux/../dbfarm/demo
# gdk_distr:/ufs/mk/monet_5-0/Linux
# monetrc:/ufs/mk/.monet.conf
## A collection of forloops, which should not execute
#barrier	H := batoperatie;
#	Tail:= bat.fetch(b,H);
#	#body
#redo 	H;
#end	H;
#
#
## de andere loops zijn eenvoudig. 'goto' is altijd beperkt tot
## 'randen' van het blok. (redo L, leave L)
## een while loop
#barrier L := bat.hasMoreElements(b);
#	H:= bat.head(b);
#	v:= bat.nextElement(b);
#redo	L;
#end	L;
#	
##een do-while loop
#	entry:= true;
#barrier M:= entry_or_exittest;
#	entry:= false;
#	# rest
#redo	M;
#end	M;
#
##een for-loop 
#	i:= 1;
#barrier N:= i<10;
#	#body
#	i:=i+1;
#redo	N;
#end	N;
#
#
## de if-then en if-then-else constructies
#
#barrier	FT:= booleanexpr;
#	# thenpart
#end	FT;
#
#barrier	FTE:= booleanexpr;
#	# thenpart
#end	FTE;
#barrier FS:= not FTE;
#	#elsepart
#end	FS;
#
#
#
!ERROR: 1: barrier 'H' should be of type bit
!ERROR: 5: barrier 'L' should be of type bit
!ERROR: 11: barrier 'M' should be of type bit
!ERROR: 20: barrier 'FT' should be of type bit
!ERROR: 22: barrier 'FTE' should be of type bit
!ERROR: 24: barrier 'FS' should be of type bit
function Admin.main():int;	#0:(main:int->0)
barrier	H := batoperatie;	#1 dynamic:(H:any->1)(batoperatie:any->2)
	Tail := bat.fetch(b,H);	#2 unknown:(Tail:any->3)(b:any->4)(H:any->1)
	redo H ;	#3:(H:any->1)
end	H;	#4:(H:any->1)
barrier	L := bat.hasMoreElements(b);	#5 unknown:(L:any->5)(b:any->4)
	H := bat.head(b);	#6 unknown:(H:any->1)(b:any->4)
	v := bat.nextElement(b);	#7 unknown:(v:any->6)(b:any->4)
	redo L ;	#8:(L:any->5)
end	L;	#9:(L:any->5)
	entry := true;	#10:(entry:bit->7)($8:bit->8)
barrier	M := entry_or_exittest;	#11 dynamic:(M:any->9)(entry_or_exittest:any->10)
	entry := false;	#12:(entry:bit->7)($11:bit->11)
	redo M ;	#13:(M:any->9)
end	M;	#14:(M:any->9)
	i := 1;	#15:(i:int->12)($13:int->13)
barrier	N := arith.<(i,10);	#16:(N:bit->14)(i:int->12)($15:int->15)
	i := arith.+(i,1);	#17:(i:int->12)(i:int->12)($13:int->13)
	redo N ;	#18:(N:bit->14)
end	N;	#19:(N:bit->14)
barrier	FT := booleanexpr;	#20 dynamic:(FT:any->16)(booleanexpr:any->17)
end	FT;	#21:(FT:any->16)
barrier	FTE := booleanexpr;	#22 dynamic:(FTE:any->18)(booleanexpr:any->17)
end	FTE;	#23:(FTE:any->18)
barrier	FS := not;	#24 dynamic:(FS:any->19)(not:any->20)
end	FS;	#25:(FS:any->19)
end function;	#26:
!ERROR: SyntaxError::'Admin.main' contains errors
>
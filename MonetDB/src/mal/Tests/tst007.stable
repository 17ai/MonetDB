# Monet Database Server V5.0
# Copyright (c) 1993-2001, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
# gdk_dbfarm:/ufs/mk/monet_5-0/Linux/../dbfarm
# gdk_dbname:demo
# gdk_dbdir:/ufs/mk/monet_5-0/Linux/../dbfarm/demo
# gdk_distr:/ufs/mk/monet_5-0/Linux
# monetrc:/ufs/mk/.monet.conf
## A collection of forloops, which should not execute
#barrier	H := batoperatie;
#	Tail:= bat.fetch(b,H);
#	#body
#redo 	H;
#end	H;
#
#
## de andere loops zijn eenvoudig. 'goto' is altijd beperkt tot
## 'randen' van het blok. (redo L, leave L)
## een while loop
#barrier L := bat.hasMoreElements(b);
#	H:= bat.head(b);
#	v:= bat.nextElement(b);
#redo	L;
#end	L;
#	
##een do-while loop
#	entry:= true;
#barrier M:= entry_or_exittest;
#	entry:= false;
#	# rest
#redo	M;
#end	M;
#
##een for-loop 
#	i:= 1;
#barrier N:= i<10;
#	#body
#	i:=i+1;
#redo	N;
#end	N;
#
#
## de if-then en if-then-else constructies
#
#barrier	FT:= booleanexpr;
#	# thenpart
#end	FT;
#
#barrier	FTE:= booleanexpr;
#	# thenpart
#end	FTE;
#barrier FS:= not FTE;
#	#elsepart
#end	FS;
#
#
#
function Admin.main():int;	#0:void (main:int)
barrier	H := batoperatie;	#1 dynamic:void (H:any)(batoperatie:any)
	Tail := bat.fetch(b,H);	#2 unknown:void (Tail:any)(b:any)(H:any)
	redo H ;	#3:void (H:any)
end	H;	#4:void (H:any)
barrier	L := bat.hasMoreElements(b);	#5 unknown:void (L:any)(b:any)
	H := bat.head(b);	#6 unknown:void (H:any)(b:any)
	v := bat.nextElement(b);	#7 unknown:void (v:any)(b:any)
	redo L ;	#8:void (L:any)
end	L;	#9:void (L:any)
	entry := true;	#10:bit (entry:bit)($8:bit)
barrier	M := entry_or_exittest;	#11 dynamic:void (M:any)(entry_or_exittest:any)
	entry := false;	#12:bit (entry:bit)($11:bit)
	redo M ;	#13:void (M:any)
end	M;	#14:void (M:any)
	i := 1;	#15:int (i:int)($13:int)
barrier	N := arith.<(i,10);	#16:bit (N:bit)(i:int)($15:int)
	i := arith.+(i,1);	#17:int (i:int)(i:int)($13:int)
	redo N ;	#18:bit (N:bit)
end	N;	#19:bit (N:bit)
barrier	FT := booleanexpr;	#20 dynamic:void (FT:any)(booleanexpr:any)
end	FT;	#21:void (FT:any)
barrier	FTE := booleanexpr;	#22 dynamic:void (FTE:any)(booleanexpr:any)
end	FTE;	#23:void (FTE:any)
barrier	FS := not;	#24 dynamic:void (FS:any)(not:any)
end	FS;	#25:void (FS:any)
end function;	#26:void 
!ERROR: MALexception:Admin.main[5]:Instruction type not fixed
>
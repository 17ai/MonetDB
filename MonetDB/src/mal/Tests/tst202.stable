# Monet Database Server V5.0
# Copyright (c) 1993-2001, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
# gdk_dbfarm:/ufs/mk/monet_5-0/Linux/../dbfarm
# gdk_dbname:demo
# gdk_dbdir:/ufs/mk/monet_5-0/Linux/../dbfarm/demo
# gdk_distr:/ufs/mk/monet_5-0/Linux
# monetrc:/ufs/mk/.monet.conf
## GDK layer should produce exceptions rather then direct warnings
## or ignoring.
## a typical case is to try to rename an existing (persistent) bat
#
#	b:= bat.new(int,int);
#	rename(b,"mybat");
#	setPersistent(b);
#	roles(b,"first","second");
#	print(b);
#	c:= bat.new(int,str);
#	rename(c,"mybat");
#	print(c);
#	setPersistent(c);
#	print(c);
#	printf("catched anything?\n");
#catch GDKerror;
#	printf("Catched the renaming exception\n");
#end GDKerror;
##get rid of it again
#	#destroy(b);
#	#destroy(c);
#
function Admin.main():int;	#0:(main:int->0)
	b := bat.new(int,int);	#1:(b:bat[int,int]->13)(int:int->6)(int:int->6)
	bat.rename(b,"mybat");	#2:($14:any->14)(b:bat[int,int]->13)($15:str->15)
	bat.setPersistent(b);	#3:($16:bit->16)(b:bat[int,int]->13)
	bat.roles(b,"first","second");	#4:($17:int->17)(b:bat[int,int]->13)($18:str->18)($19:str->19)
	system.print(b);	#5:($20:int->20)(b:bat[int,int]->13)
	c := bat.new(int,str);	#6:(c:bat[int,str]->21)(int:int->6)(str:str->12)
	bat.rename(c,"mybat");	#7:($22:any->22)(c:bat[int,str]->21)($15:str->15)
	system.print(c);	#8:($23:int->23)(c:bat[int,str]->21)
	bat.setPersistent(c);	#9:($24:bit->24)(c:bat[int,str]->21)
	system.print(c);	#10:($25:int->25)(c:bat[int,str]->21)
	system.printf("catched anything?\n");	#11:($26:int->26)($27:str->27)
catch	GDKerror;	#12:(GDKerror:str->28)
	system.printf("Catched the renaming exception\n");	#13:($29:int->29)($30:str->30)
end	GDKerror;	#14:(GDKerror:str->28)
end function;	#15:
#-----------------#
# BAT:	  mybat	  #
# (int)	  (int)	  #
#-----------------#
#-----------------#
# BAT:	  mybat	  #
# (int)	  (str)	  #
#-----------------#
#-----------------#
# BAT:	  mybat	  #
# (int)	  (str)	  #
#-----------------#
catched anything?
>
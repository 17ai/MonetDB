# Monet Database Server V5.0
# Copyright (c) 1993-2001, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
# gdk_dbfarm:/ufs/mk/monet_5-0/Linux/../dbfarm
# gdk_dbname:demo
# gdk_dbdir:/ufs/mk/monet_5-0/Linux/../dbfarm/demo
# gdk_distr:/ufs/mk/monet_5-0/Linux
# monetrc:/ufs/mk/.monet.conf
## GDK layer should produce exceptions rather then direct warnings
## or ignoring.
## a typical case is to try to rename an existing (persistent) bat
#
#	b:= bat.new(int,int);
#	rename(b,"mybat");
#	#setPersistent(b);
#	roles(b,"first","second");
#	print(b);
#	c:= bat.new(int,str);
#	rename(c,"mybat");
#	print(c);
#	#setPersistent(c);
#	print(c);
#	printf("catched anything?\n");
#catch GDKerror;
#	printf("Catched the renaming exception\n");
#end GDKerror;
##get rid of it again
#	#destroy(b);
#	#destroy(c);
#
function Admin.main():int;	#0:(main:int->0)
	b := bat.new(int,int);	#1:(b:bat[int,int]->1)(int:int->2)(int:int->2)
	bat.rename(b,"mybat");	#2:($3:any->3)(b:bat[int,int]->1)($4:str->4)
	bat.roles(b,"first","second");	#3:($5:int->5)(b:bat[int,int]->1)($6:str->6)($7:str->7)
	system.print(b);	#4:($8:int->8)(b:bat[int,int]->1)
	c := bat.new(int,str);	#5:(c:bat[int,str]->9)(int:int->2)(str:str->10)
	bat.rename(c,"mybat");	#6:($11:any->11)(c:bat[int,str]->9)($4:str->4)
	system.print(c);	#7:($12:int->12)(c:bat[int,str]->9)
	system.print(c);	#8:($13:int->13)(c:bat[int,str]->9)
	system.printf("catched anything?\n");	#9:($14:int->14)($15:str->15)
catch	GDKerror;	#10:(GDKerror:str->16)
	system.printf("Catched the renaming exception\n");	#11:($17:int->17)($18:str->18)
end	GDKerror;	#12:(GDKerror:str->16)
end function;	#13:
#-----------------#
# BAT:	  mybat	  #
# (int)	  (int)	  #
#-----------------#
#-----------------#
# BAT:	  mybat	  #
# (int)	  (str)	  #
#-----------------#
#-----------------#
# BAT:	  mybat	  #
# (int)	  (str)	  #
#-----------------#
catched anything?
>
# Monet Database Server V5.0
# Copyright (c) 1993-2001, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
# gdk_dbfarm:/ufs/mk/monet_5-0/Linux/../dbfarm
# gdk_dbname:demo
# gdk_dbdir:/ufs/mk/monet_5-0/Linux/../dbfarm/demo
# gdk_distr:/ufs/mk/monet_5-0/Linux
# monetrc:/ufs/mk/.monet.conf
## GDK layer should produce exceptions rather then direct warnings
## or ignoring.
## a typical case is to try to rename an existing (persistent) bat
#
#	b:bat[int,int]:= new(int,int);
#	setName(b,"mybat");
#	#setPersistent(b);
#	setRole(b,"first","second");
#	print(b);
#	c:= new(int,str);
#	setName(c,"mybat");
#	print(c);
#	#setPersistent(c);
#	print(c);
#	printf("catched anything?\n");
#catch GDKerror;
#	printf("Catched the renaming exception\n");
#end GDKerror;
##get rid of it again
#	#destroy(b);
#	#destroy(c);
#
function Admin.main():int;	#0:void (main:int)
	b := mal.new(int,int);	#1:BAT (b:bat[int,int])(int:int)(int:int)
	bat.setName(b,"mybat");	#2:void ($3:any)(b:bat[int,int])($4:str)
	bat.setRole(b,"first","second");	#3:BAT ($5:bat[int,int])(b:bat[int,int])($6:str)($7:str)
	mal.print(b);	#4:int ($8:int)(b:bat[int,int])
	c := mal.new(int,str);	#5:BAT (c:bat[int,str])(int:int)(str:str)
	bat.setName(c,"mybat");	#6:void ($11:any)(c:bat[int,str])($4:str)
	mal.print(c);	#7:int ($12:int)(c:bat[int,str])
	mal.print(c);	#8:int ($13:int)(c:bat[int,str])
	system.printf("catched anything?\n");	#9:int ($14:int)($15:str)
catch	GDKerror;	#10:str (GDKerror:str)
	system.printf("Catched the renaming exception\n");	#11:int ($17:int)($18:str)
end	GDKerror;	#12:str (GDKerror:str)
end function;	#13:void 
#-----------------#
# BAT:	  mybat	  #
# (int)	  (int)	  #
#-----------------#
#-----------------#
# BAT:	  mybat	  #
# (int)	  (str)	  #
#-----------------#
#-----------------#
# BAT:	  mybat	  #
# (int)	  (str)	  #
#-----------------#
catched anything?
>
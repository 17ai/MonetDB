# Monet Database Server V5.0
# Copyright (c) 1993-2002, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
# gdk_dbfarm:/ufs/mk/monet_5-0/Linux/../dbfarm
# gdk_dbname:demo
# gdk_dbdir:/ufs/mk/monet_5-0/Linux/../dbfarm/demo
# gdk_distr:/ufs/mk/monet_5-0/Linux
# monetrc:/ufs/mk/.monet.conf
## Testing global consts defined for all users
## It should travers the nested spaces looking for the correct variable
## take a local copy
#	v:str := const.take("version");
#	u:str := const.take("user");
#	db:str:= const.take("database");
#	df:str:= const.take("dbfarm");
#	dd:str:= const.take("distribution");
##	bb:bat[void,str] := const.take("environment");
#
## how to obtain a copy of all objects in a space?
##barrier (b,nme):= const.iterator();
#barrier b:= const.iterator(nme:str);
#	printf("%s=",nme);
#	val:str := const.toString(nme);
#	printf("%s\n",val);
#	redo b;
#end b;
#
function Admin.main():int;	#0:(main:int)
	v := const.take("version");	#1:(v:str)<-($2:str)
	u := const.take("user");	#2:(u:str)<-($4:str)
	db := const.take("database");	#3:(db:str)<-($6:str)
	df := const.take("dbfarm");	#4:(df:str)<-($8:str)
	dd := const.take("distribution");	#5:(dd:str)<-($10:str)
barrier	b := const.iterator(nme);	#6:(b:lng)<-(nme:str)
	system.printf("%s=",nme);	#7:($13:int)<-($14:str)(nme:str)
	val := const.toString(nme);	#8:(val:str)<-(nme:str)
	system.printf("%s\n",val);	#9:($16:int)<-($17:str)(val:str)
	redo b ;	#10:(b:lng)
end	b;	#11:(b:lng)
end function;	#12:
user=Admin
database=demo
dbfarm=/ufs/mk/monet_5-0/Linux/../dbfarm/demo
distribution=/ufs/mk/monet_5-0/Linux
monetrc=/ufs/mk/.monet.conf
architecture=i686-pc-linux-gnu
version=5.0
environment=unknown yet
pi=nil
>
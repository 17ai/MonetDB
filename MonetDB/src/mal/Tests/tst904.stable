# Monet Database Server V5.0
# Copyright (c) 1993-2001, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
# gdk_dbfarm:/ufs/mk/monet_5-0/Linux/../dbfarm
# gdk_dbname:demo
# gdk_dbdir:/ufs/mk/monet_5-0/Linux/../dbfarm/demo
# gdk_distr:/ufs/mk/monet_5-0/Linux
# monetrc:/ufs/mk/.monet.conf
## the multiplex code blocks using CONSTANTS.
#
#b:= new(lng,lng);
#i:= -1:lng;
#barrier v:= nextElement(i,0:lng,10:lng);
#	insert(b,i,i);
#	redo v;
#end v;
#c:= 1;
#x:= multiplex.multiplex("+",b,c);
#print(x);
#
multiplex against operator + (original multiplex)
	calc.+($2,$3);	#0:lng ($0:lng)($2:lng)($3:int)
function Admin.main():int;	#0:void (main:int)
	b := mal.new(lng,lng);	#1:BAT (b:bat[lng,lng])(lng:lng)(lng:lng)
	i := -1;	#2:lng (i:lng)($4:lng)
barrier	v := mal.nextElement(i,0,10);	#3:bit (v:bit)(i:lng)($6:lng)($7:lng)
	bat.insert(b,i,i);	#4:BAT ($8:bat[lng,lng])(b:bat[lng,lng])(i:lng)(i:lng)
	redo v ;	#5:bit (v:bit)
end	v;	#6:bit (v:bit)
	c := 1;	#7:int (c:int)($10:int)
	x := multiplex.multiplex("+",b,c);	#8:void (x:bat[lng,int])($12:str)(b:bat[lng,lng])(c:int)
	mal.print(x);	#9:int ($13:int)(x:bat[lng,int])
end function;	#10:void 
>
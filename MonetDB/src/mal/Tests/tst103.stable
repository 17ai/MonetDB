# Monet Database Server V5.0
# Copyright (c) 1993-2001, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
# gdk_dbfarm:/ufs/mk/monet_5-0/Linux/../dbfarm
# gdk_dbname:demo
# gdk_dbdir:/ufs/mk/monet_5-0/Linux/../dbfarm/demo
# gdk_distr:/ufs/mk/monet_5-0/Linux
# monetrc:/ufs/mk/.monet.conf
## check propagation of type variables over bats
#
#function f(a:any::1, b:any::2):bat[any::2,any::1] ; end function;
FUNCTION f(a:any::1,b:any::2):bat[any::2,any::1];	#0 polymorphic:(f:bat[any::2,any::1]->0)(a:any::1->1)(b:any::2->2)
END FUNCTION;	#1:
#
#a:= f(1,"hello");
#b:= f(1,"world");
#c:= f(1.0, -3);
#d:= f(true,false);
#
FUNCTION Service.main():int;	#0:(main:int->0)
	a := Service.f(1,"hello");	#1:(a:bat[str,int]->3)($1:int->1)($2:str->2)
	b := Service.f(1,"world");	#2:(b:bat[str,int]->5)($1:int->1)($4:str->4)
	c := Service.f(1.0,-3);	#3:(c:bat[int,flt]->8)($6:flt->6)($7:int->7)
	d := Service.f(true,false);	#4:(d:bat[bit,bit]->11)($9:bit->9)($10:bit->10)
END FUNCTION;	#5:

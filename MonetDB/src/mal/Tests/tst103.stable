# Monet Database Server V5.0
# Copyright (c) 1993-2001, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
# gdk_dbfarm:/ufs/mk/monet_5-0/Linux/../dbfarm
# gdk_dbname:demo
# gdk_dbdir:/ufs/mk/monet_5-0/Linux/../dbfarm/demo
# gdk_distr:/ufs/mk/monet_5-0/Linux
# monetrc:/ufs/mk/.monet.conf
## check propagation of type variables over bats
#
#function f(a:any::1, b:any::2):bat[any::2,any::1] ; end function;
function f(a:any::1,b:any::2):bat[any::2,any::1];	#0 polymorphic:(f:bat[any::2,any::1]->0)(a:any::1->1)(b:any::2->2)
end function;	#1:
#
#a:= f(1,"hello");
#b:= f(1,"world");
#c:= f(1.0, -3);
#d:= f(true,false);
#
function Client.main():int;	#0:(main:int->0)
	a := Client.f(1,"hello");	#1:(a:bat[str,int]->13)($14:int->14)($15:str->15)
	b := Client.f(1,"world");	#2:(b:bat[str,int]->16)($14:int->14)($17:str->17)
	c := Client.f(1.0,-3);	#3:(c:bat[int,flt]->18)($19:flt->19)($20:int->20)
	d := Client.f(true,false);	#4:(d:bat[bit,bit]->21)($22:bit->22)($23:bit->23)
end function;	#5:

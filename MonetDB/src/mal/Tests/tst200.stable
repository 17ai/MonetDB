# Monet Database Server V5.0
# Copyright (c) 1993-2001, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
# gdk_dbfarm:/ufs/mk/monet_5-0/Linux/../dbfarm
# gdk_dbname:demo
# gdk_dbdir:/ufs/mk/monet_5-0/Linux/../dbfarm/demo
# gdk_distr:/ufs/mk/monet_5-0/Linux
# monetrc:/ufs/mk/.monet.conf
## The series tst2?? is a patched version of suite_00
## The first and foremost BAT operations
#
#o:=oid(20000000);
#err:=setoid(o);
##test basic functionality of the BAT library.
##focussed on integers
##it includes insertions,deletions,selections, and joins.
#
#b:= new(int,int);
#err:= printf("#~BeginVariableOutput~#\n"); 
##binfo:= info(b);
##err:= print(binfo); 
#err:= printf("#~EndVariableOutput~#\n");
#
#err := insert(b,1,15);
#err := insert(b,2,4);
#n0  := int(nil);
#err := insert(b,3,n0);
#err := insert(b,4,16);
#err := insert(b,5,25);
#err := insert(b,6,36);
#err := insert(b,7,49);
#err := insert(b,8,64);
#err := insert(b,9,n0);
#err := insert(b,n0,n0);
#err := insert(b,n0,81);
#err := print(b);
#err := print(b,b,b);
#
!ERROR: WARNING:newConstant:int coerced to lng
function Admin.main():int;	#0:void (main:int)
	o := atoms.oid(20000000);	#1:oid (o:oid)($2:int)
	err := atoms.setoid(o);	#2:void (err:int)(o:oid)
	b := bat.new(int,int);	#3:BAT (b:bat[int,int])(int:int)(int:int)
	err := system.printf("#~BeginVariableOutput~#\n");	#4:int (err:int)($6:str)
	err := system.printf("#~EndVariableOutput~#\n");	#5:int (err:int)($7:str)
	err := bat.insert(b,1,15);	#6:int (err:int)(b:bat[int,int])($8:int)($9:int)
	err := bat.insert(b,2,4);	#7:int (err:int)(b:bat[int,int])($10:int)($11:int)
	n0 := atoms.int(nil);	#8:int (n0:int)($13:void)
	err := bat.insert(b,3,n0);	#9:int (err:int)(b:bat[int,int])($14:int)(n0:int)
	err := bat.insert(b,4,16);	#10:int (err:int)(b:bat[int,int])($11:int)($15:int)
	err := bat.insert(b,5,25);	#11:int (err:int)(b:bat[int,int])($16:int)($17:int)
	err := bat.insert(b,6,36);	#12:int (err:int)(b:bat[int,int])($18:int)($19:int)
	err := bat.insert(b,7,49);	#13:int (err:int)(b:bat[int,int])($20:int)($21:int)
	err := bat.insert(b,8,64);	#14:int (err:int)(b:bat[int,int])($22:int)($23:int)
	err := bat.insert(b,9,n0);	#15:int (err:int)(b:bat[int,int])($24:int)(n0:int)
	err := bat.insert(b,n0,n0);	#16:int (err:int)(b:bat[int,int])(n0:int)(n0:int)
	err := bat.insert(b,n0,81);	#17:int (err:int)(b:bat[int,int])(n0:int)($25:int)
	err := system.print(b);	#18:int (err:int)(b:bat[int,int])
	err := system.print(b,b,b);	#19:int (err:int)(b:bat[int,int])(b:bat[int,int])(b:bat[int,int])
end function;	#20:void 
#~BeginVariableOutput~#
#~EndVariableOutput~#
#-----------------#
# BAT:	  tmp_5	  #
# (int)	  (int)	  #
#-----------------#
[ 1,	  15	  ]
[ 2,	  4	  ]
[ 3,	  nil	  ]
[ 4,	  16	  ]
[ 5,	  25	  ]
[ 6,	  36	  ]
[ 7,	  49	  ]
[ 8,	  64	  ]
[ 9,	  nil	  ]
[ nil,	  nil	  ]
[ nil,	  81	  ]
#-----------------#
# tmp_5	| tmp_5	  #
#-----------------#
[ 15,	  15	  ]
[ 4,	  4	  ]
[ nil,	  nil	  ]
[ 16,	  16	  ]
[ 25,	  25	  ]
[ 36,	  36	  ]
[ 49,	  49	  ]
[ 64,	  64	  ]
[ nil,	  nil	  ]
[ nil,	  81	  ]
[ nil,	  nil	  ]
[ 81,	  81	  ]
[ 81,	  nil	  ]
>
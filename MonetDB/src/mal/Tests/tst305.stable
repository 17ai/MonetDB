# Monet Database Server V5.0
# Copyright (c) 1993-2001, CWI. All rights reserved.
# compiled for i686-pc-linux-gnu/32bit.
# gdk_dbfarm:/ufs/mk/monet_5-0/Linux/../dbfarm
# gdk_dbname:demo
# gdk_dbdir:/ufs/mk/monet_5-0/Linux/../dbfarm/demo
# gdk_distr:/ufs/mk/monet_5-0/Linux
# monetrc:/ufs/mk/.monet.conf
#
## Exceptions can be explicitly raised in a function
## which requires the exception identifier to be defined.
#
#function myException();
#	IllegalAccess:="new exception";
#	raise IllegalAccess;
#	print("should have left function ");
#end function;
function Admin.myException():any;	#0 polymorphic:void (myException:any)
	IllegalAccess := "new exception";	#1:str (IllegalAccess:str)($2:str)
	raise IllegalAccess;	#2:str (IllegalAccess:str)
	mal.print("should have left function ");	#3:int ($3:int)($4:str)
end function;	#4:void 
#
#	myException();
#	print("should not come here");
#
function Admin.main():int;	#0:void (main:int)
	Admin.myException();	#1:void ($1:any)
	mal.print("should not come here");	#2:int ($2:int)($3:str)
end function;	#3:void 
!ERROR: IllegalAccess:Admin.myException[2]:new exception
MALexception:Admin.myException[4]:propagated
>
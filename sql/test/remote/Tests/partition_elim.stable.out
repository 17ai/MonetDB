stdout of test 'partition_elim` in directory 'sql/test/remote` itself:


# 18:37:29 >  
# 18:37:29 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35081" "--set" "mapi_usock=/var/tmp/mtest-17557/.s.monetdb.35081" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_remote" "--set" "mal_listing=0" "--set" "embedded_r=yes"
# 18:37:29 >  

# MonetDB 5 server v11.20.0
# This is an unreleased version
# Serving database 'mTests_sql_test_remote', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 7.333 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://localhost.nes.nl:35081/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17557/.s.monetdb.35081
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_temporal.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 39_analytics_hge.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 40_json_hge.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 51_sys_schema_extension.sql
# loading sql script: 72_fits.sql
# loading sql script: 74_netcdf.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql

# 18:37:29 >  
# 18:37:29 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-17557" "--port=35081"
# 18:37:29 >  

#create merge table test (x double, y double);
#create table test1 (x double, y double);
#create table test2 (x double, y double);
#create table test3 (x double, y double);
#create table test4 (x double, y double);
#insert into test1 values (1.0, 1.0);
[ 1	]
#insert into test1 values (2.0, 2.0);
[ 1	]
#insert into test2 values (3.0, -1.0);
[ 1	]
#insert into test2 values (4.0, -2.0);
[ 1	]
#insert into test3 values (3.0, 1.0);
[ 1	]
#insert into test3 values (6.0, 2.0);
[ 1	]
#insert into test4 values (7.0, 1.0);
[ 1	]
#insert into test4 values (10.0, 2.0);
[ 1	]
#alter table test1 set read only;
#alter table test2 set read only;
#alter table test3 set read only;
#alter table test4 set read only;
#alter table test add table test1;
#alter table test add table test2;
#alter table test add table test3;
#alter table test add table test4;
#select x from test1 where x between 0 and -1;
% sys.test1 # table_name
% x # name
% double # type
% 24 # length
#select x from test2 where x between 0 and -1;
% sys.test2 # table_name
% x # name
% double # type
% 24 # length
#select x from test3 where x between 0 and -1;
% sys.test3 # table_name
% x # name
% double # type
% 24 # length
#select x from test4 where x between 0 and -1;
% sys.test4 # table_name
% x # name
% double # type
% 24 # length
#select y from test1 where y between 0 and -1;
% sys.test1 # table_name
% y # name
% double # type
% 24 # length
#select y from test2 where y between 0 and -1;
% sys.test2 # table_name
% y # name
% double # type
% 24 # length
#select y from test3 where y between 0 and -1;
% sys.test3 # table_name
% y # name
% double # type
% 24 # length
#select y from test4 where y between 0 and -1;
% sys.test4 # table_name
% y # name
% double # type
% 24 # length
#explain select x,y from test where x between 4.0 and 6.0;
% .explain # table_name
% mal # name
% clob # type
% 118 # length
function user.main():void;
    X_1207:void := querylog.define("explain select x,y from test where x between 4.0 and 6.0;","default_pipe",49:int);
barrier X_1326 := language.dataflow();
    X_1250 := bat.new(nil:str);
    X_1257 := bat.append(X_1250,".test");
    X_1267 := bat.append(X_1257,".test");
    X_1252 := bat.new(nil:str);
    X_1259 := bat.append(X_1252,"x");
    X_1268 := bat.append(X_1259,"y");
    X_1253 := bat.new(nil:str);
    X_1261 := bat.append(X_1253,"double");
    X_1270 := bat.append(X_1261,"double");
    X_1254 := bat.new(nil:int);
    X_1263 := bat.append(X_1254,53:int);
    X_1271 := bat.append(X_1263,53:int);
    X_1256 := bat.new(nil:int);
    X_1265 := bat.append(X_1256,0:int);
    X_1272 := bat.append(X_1265,0:int);
    X_1242:bat[:dbl] := bat.new(nil:dbl);
    X_1210 := sql.mvc();
    X_1331:bat[:dbl] := sql.bind(X_1210,"sys","test2","x",0:int,0:int,2:int);
    X_1296:bat[:dbl] := mosaic.decompress(X_1331);
    C_1293:bat[:oid] := sql.tid(X_1210,"sys","test2",0:int,2:int);
    C_1301 := algebra.select(X_1296,C_1293,4:dbl,6:dbl,true,true,false);
    X_1303 := algebra.projection(C_1301,X_1296);
    X_1332:bat[:dbl] := sql.bind(X_1210,"sys","test2","x",0:int,1:int,2:int);
    X_1297:bat[:dbl] := mosaic.decompress(X_1332);
    C_1295:bat[:oid] := sql.tid(X_1210,"sys","test2",1:int,2:int);
    C_1302 := algebra.select(X_1297,C_1295,4:dbl,6:dbl,true,true,false);
    X_1304 := algebra.projection(C_1302,X_1297);
    X_1315 := mat.packIncrement(X_1303,2:int);
    X_1227 := mat.packIncrement(X_1315,X_1304);
    X_1244 := bat.append(X_1242,X_1227,true);
    X_1333:bat[:dbl] := sql.bind(X_1210,"sys","test3","x",0:int);
    X_1232:bat[:dbl] := mosaic.decompress(X_1333);
    C_1230:bat[:oid] := sql.tid(X_1210,"sys","test3");
    C_1238 := algebra.select(X_1232,C_1230,4:dbl,6:dbl,true,true,false);
    X_1239 := algebra.projection(C_1238,X_1232);
    X_1245 := bat.append(X_1244,X_1239,true);
    X_1246:bat[:dbl] := bat.new(nil:dbl);
    X_1298:bat[:dbl] := sql.bind(X_1210,"sys","test2","y",0:int,0:int,2:int);
    X_1305 := mosaic.projection(C_1301,X_1298);
    X_1299:bat[:dbl] := sql.bind(X_1210,"sys","test2","y",0:int,1:int,2:int);
    X_1306 := mosaic.projection(C_1302,X_1299);
    X_1317 := mat.packIncrement(X_1305,2:int);
    X_1228 := mat.packIncrement(X_1317,X_1306);
    X_1247 := bat.append(X_1246,X_1228,true);
    X_1234:bat[:dbl] := sql.bind(X_1210,"sys","test3","y",0:int);
    X_1240 := mosaic.projection(C_1238,X_1234);
    X_1248 := bat.append(X_1247,X_1240,true);
    language.pass(X_1296);
    language.pass(X_1297);
    language.pass(X_1232);
    language.pass(C_1301);
    language.pass(C_1302);
    language.pass(C_1238);
exit X_1326;
    sql.resultSet(X_1267,X_1268,X_1270,X_1271,X_1272,X_1245,X_1248);
end user.main;
#inline               actions= 0 time=1 usec 
#remap                actions= 0 time=3 usec 
#costmodel            actions= 1 time=2 usec 
#coercion             actions= 0 time=2 usec 
#evaluate             actions= 6 time=21 usec 
#emptybind            actions= 0 time=0 usec 
#pushselect           actions= 8 time=15 usec 
#aliases              actions=12 time=12 usec 
#mitosis              actions= 1 time=29 usec 
#mergetable           actions= 3 time=61 usec 
#deadcode             actions= 4 time=10 usec 
#aliases              actions= 0 time=1 usec 
#constants            actions= 8 time=10 usec 
#commonTerms          actions= 0 time=8 usec 
#projectionpath       actions= 0 time=6 usec 
#deadcode             actions= 0 time=8 usec 
#reorder              actions= 1 time=35 usec 
#matpack              actions= 2 time=9 usec 
#dataflow             actions=27 time=44 usec 
#multiplex            actions= 0 time=3 usec 
#profiler             actions= 1 time=4 usec 
#candidates           actions= 1 time=1 usec 
#garbagecollector     actions= 1 time=32 usec 
#total                actions=26 time=442 usec 
#explain select x,y from test where x between (7-3) and (7-1);
% .explain # table_name
% mal # name
% clob # type
% 122 # length
function user.main():void;
    X_1345:void := querylog.define("explain select x,y from test where x between (7-3) and (7-1);","default_pipe",63:int);
barrier X_1481 := language.dataflow();
    X_1400 := bat.new(nil:str);
    X_1407 := bat.append(X_1400,".test");
    X_1417 := bat.append(X_1407,".test");
    X_1402 := bat.new(nil:str);
    X_1409 := bat.append(X_1402,"x");
    X_1418 := bat.append(X_1409,"y");
    X_1403 := bat.new(nil:str);
    X_1411 := bat.append(X_1403,"double");
    X_1420 := bat.append(X_1411,"double");
    X_1404 := bat.new(nil:int);
    X_1413 := bat.append(X_1404,53:int);
    X_1421 := bat.append(X_1413,53:int);
    X_1406 := bat.new(nil:int);
    X_1415 := bat.append(X_1406,0:int);
    X_1422 := bat.append(X_1415,0:int);
    X_1392:bat[:dbl] := bat.new(nil:dbl);
    X_1348 := sql.mvc();
    X_1486:bat[:dbl] := sql.bind(X_1348,"sys","test2","x",0:int,0:int,2:int);
    X_1451:bat[:dbl] := mosaic.decompress(X_1486);
    C_1448:bat[:oid] := sql.tid(X_1348,"sys","test2",0:int,2:int);
    C_1456 := algebra.select(X_1451,C_1448,4:dbl,6:dbl,true,true,false);
    X_1458 := algebra.projection(C_1456,X_1451);
    X_1487:bat[:dbl] := sql.bind(X_1348,"sys","test2","x",0:int,1:int,2:int);
    X_1452:bat[:dbl] := mosaic.decompress(X_1487);
    C_1450:bat[:oid] := sql.tid(X_1348,"sys","test2",1:int,2:int);
    C_1457 := algebra.select(X_1452,C_1450,4:dbl,6:dbl,true,true,false);
    X_1459 := algebra.projection(C_1457,X_1452);
    X_1470 := mat.packIncrement(X_1458,2:int);
    X_1371 := mat.packIncrement(X_1470,X_1459);
    X_1394 := bat.append(X_1392,X_1371,true);
    X_1488:bat[:dbl] := sql.bind(X_1348,"sys","test3","x",0:int);
    X_1376:bat[:dbl] := mosaic.decompress(X_1488);
    C_1374:bat[:oid] := sql.tid(X_1348,"sys","test3");
    C_1388 := algebra.select(X_1376,C_1374,4:dbl,6:dbl,true,true,false);
    X_1389 := algebra.projection(C_1388,X_1376);
    X_1395 := bat.append(X_1394,X_1389,true);
    X_1396:bat[:dbl] := bat.new(nil:dbl);
    X_1453:bat[:dbl] := sql.bind(X_1348,"sys","test2","y",0:int,0:int,2:int);
    X_1460 := mosaic.projection(C_1456,X_1453);
    X_1454:bat[:dbl] := sql.bind(X_1348,"sys","test2","y",0:int,1:int,2:int);
    X_1461 := mosaic.projection(C_1457,X_1454);
    X_1472 := mat.packIncrement(X_1460,2:int);
    X_1372 := mat.packIncrement(X_1472,X_1461);
    X_1397 := bat.append(X_1396,X_1372,true);
    X_1378:bat[:dbl] := sql.bind(X_1348,"sys","test3","y",0:int);
    X_1390 := mosaic.projection(C_1388,X_1378);
    X_1398 := bat.append(X_1397,X_1390,true);
    language.pass(X_1451);
    language.pass(X_1452);
    language.pass(X_1376);
    language.pass(C_1456);
    language.pass(C_1457);
    language.pass(C_1388);
exit X_1481;
    sql.resultSet(X_1417,X_1418,X_1420,X_1421,X_1422,X_1395,X_1398);
end user.main;
#inline               actions= 0 time=1 usec 
#remap                actions= 0 time=5 usec 
#costmodel            actions= 1 time=2 usec 
#coercion             actions= 0 time=2 usec 
#evaluate             actions=20 time=59 usec 
#emptybind            actions= 0 time=0 usec 
#pushselect           actions= 8 time=17 usec 
#aliases              actions=26 time=24 usec 
#mitosis              actions= 1 time=29 usec 
#mergetable           actions= 3 time=62 usec 
#deadcode             actions= 4 time=11 usec 
#aliases              actions= 0 time=1 usec 
#constants            actions= 9 time=11 usec 
#commonTerms          actions= 0 time=8 usec 
#projectionpath       actions= 0 time=6 usec 
#deadcode             actions= 0 time=7 usec 
#reorder              actions= 1 time=36 usec 
#matpack              actions= 2 time=9 usec 
#dataflow             actions=27 time=34 usec 
#multiplex            actions= 0 time=3 usec 
#profiler             actions= 1 time=4 usec 
#candidates           actions= 1 time=2 usec 
#garbagecollector     actions= 1 time=32 usec 
#total                actions=26 time=505 usec 
#explain select x,y from test where x between 4.0 and 6.0 and y between 0.0 and 2.0;
% .explain # table_name
% mal # name
% clob # type
% 144 # length
function user.main():void;
    X_1501:void := querylog.define("explain select x,y from test where x between 4.0 and 6.0 and y between 0.0 and 2.0;","default_pipe",37:int);
barrier X_1604 := language.dataflow();
    X_1528 := bat.new(nil:str);
    X_1535 := bat.append(X_1528,"sys.test");
    X_1544 := bat.append(X_1535,"sys.test");
    X_1530 := bat.new(nil:str);
    X_1537 := bat.append(X_1530,"x");
    X_1545 := bat.append(X_1537,"y");
    X_1531 := bat.new(nil:str);
    X_1538 := bat.append(X_1531,"double");
    X_1547 := bat.append(X_1538,"double");
    X_1532 := bat.new(nil:int);
    X_1540 := bat.append(X_1532,53:int);
    X_1548 := bat.append(X_1540,53:int);
    X_1534 := bat.new(nil:int);
    X_1542 := bat.append(X_1534,0:int);
    X_1549 := bat.append(X_1542,0:int);
    X_1504 := sql.mvc();
    X_1609:bat[:dbl] := sql.bind(X_1504,"sys","test3","y",0:int,0:int,2:int);
    X_1574:bat[:dbl] := mosaic.decompress(X_1609);
    X_1610:bat[:dbl] := sql.bind(X_1504,"sys","test3","x",0:int,0:int,2:int);
    X_1572:bat[:dbl] := mosaic.decompress(X_1610);
    C_1569:bat[:oid] := sql.tid(X_1504,"sys","test3",0:int,2:int);
    C_1577 := algebra.select(X_1572,C_1569,4:dbl,6:dbl,true,true,false);
    C_1579 := algebra.select(X_1574,C_1577,0:dbl,2:dbl,true,true,false);
    X_1581 := algebra.projection(C_1579,X_1572);
    X_1611:bat[:dbl] := sql.bind(X_1504,"sys","test3","y",0:int,1:int,2:int);
    X_1575:bat[:dbl] := mosaic.decompress(X_1611);
    X_1612:bat[:dbl] := sql.bind(X_1504,"sys","test3","x",0:int,1:int,2:int);
    X_1573:bat[:dbl] := mosaic.decompress(X_1612);
    C_1571:bat[:oid] := sql.tid(X_1504,"sys","test3",1:int,2:int);
    C_1578 := algebra.select(X_1573,C_1571,4:dbl,6:dbl,true,true,false);
    C_1580 := algebra.select(X_1575,C_1578,0:dbl,2:dbl,true,true,false);
    X_1582 := algebra.projection(C_1580,X_1573);
    X_1593 := mat.packIncrement(X_1581,2:int);
    X_1524 := mat.packIncrement(X_1593,X_1582);
    X_1583 := algebra.projection(C_1579,X_1574);
    X_1584 := algebra.projection(C_1580,X_1575);
    X_1595 := mat.packIncrement(X_1583,2:int);
    X_1525 := mat.packIncrement(X_1595,X_1584);
    language.pass(X_1572);
    language.pass(X_1573);
    language.pass(C_1579);
    language.pass(X_1574);
    language.pass(C_1580);
    language.pass(X_1575);
exit X_1604;
    sql.resultSet(X_1544,X_1545,X_1547,X_1548,X_1549,X_1524,X_1525);
end user.main;
#inline               actions= 0 time=1 usec 
#remap                actions= 0 time=6 usec 
#costmodel            actions= 1 time=2 usec 
#coercion             actions= 0 time=1 usec 
#evaluate             actions= 8 time=23 usec 
#emptybind            actions= 0 time=1 usec 
#pushselect           actions= 4 time=13 usec 
#aliases              actions=11 time=10 usec 
#mitosis              actions= 1 time=35 usec 
#mergetable           actions= 4 time=57 usec 
#deadcode             actions= 5 time=10 usec 
#aliases              actions= 0 time=1 usec 
#constants            actions= 9 time=9 usec 
#commonTerms          actions= 0 time=7 usec 
#projectionpath       actions= 0 time=5 usec 
#deadcode             actions= 0 time=6 usec 
#reorder              actions= 1 time=29 usec 
#matpack              actions= 2 time=7 usec 
#dataflow             actions=27 time=29 usec 
#multiplex            actions= 0 time=3 usec 
#profiler             actions= 1 time=3 usec 
#candidates           actions= 1 time=2 usec 
#garbagecollector     actions= 1 time=29 usec 
#total                actions=26 time=400 usec 
#explain select x,y from test where x between 4.0 and 6.0 and y between (1.0-1.0) and (4.0-2.0);
% .explain # table_name
% mal # name
% clob # type
% 156 # length
function user.main():void;
    X_1628:void := querylog.define("explain select x,y from test where x between 4.0 and 6.0 and y between (1.0-1.0) and (4.0-2.0);","default_pipe",45:int);
barrier X_1743 := language.dataflow();
    X_1662 := bat.new(nil:str);
    X_1669 := bat.append(X_1662,"sys.test");
    X_1679 := bat.append(X_1669,"sys.test");
    X_1664 := bat.new(nil:str);
    X_1671 := bat.append(X_1664,"x");
    X_1680 := bat.append(X_1671,"y");
    X_1665 := bat.new(nil:str);
    X_1673 := bat.append(X_1665,"double");
    X_1682 := bat.append(X_1673,"double");
    X_1666 := bat.new(nil:int);
    X_1675 := bat.append(X_1666,53:int);
    X_1683 := bat.append(X_1675,53:int);
    X_1668 := bat.new(nil:int);
    X_1677 := bat.append(X_1668,0:int);
    X_1684 := bat.append(X_1677,0:int);
    X_1631 := sql.mvc();
    X_1748:bat[:dbl] := sql.bind(X_1631,"sys","test3","y",0:int,0:int,2:int);
    X_1713:bat[:dbl] := mosaic.decompress(X_1748);
    X_1749:bat[:dbl] := sql.bind(X_1631,"sys","test3","x",0:int,0:int,2:int);
    X_1711:bat[:dbl] := mosaic.decompress(X_1749);
    C_1708:bat[:oid] := sql.tid(X_1631,"sys","test3",0:int,2:int);
    C_1716 := algebra.select(X_1711,C_1708,4:dbl,6:dbl,true,true,false);
    C_1718 := algebra.select(X_1713,C_1716,0:dbl,2:dbl,true,true,false);
    X_1720 := algebra.projection(C_1718,X_1711);
    X_1750:bat[:dbl] := sql.bind(X_1631,"sys","test3","y",0:int,1:int,2:int);
    X_1714:bat[:dbl] := mosaic.decompress(X_1750);
    X_1751:bat[:dbl] := sql.bind(X_1631,"sys","test3","x",0:int,1:int,2:int);
    X_1712:bat[:dbl] := mosaic.decompress(X_1751);
    C_1710:bat[:oid] := sql.tid(X_1631,"sys","test3",1:int,2:int);
    C_1717 := algebra.select(X_1712,C_1710,4:dbl,6:dbl,true,true,false);
    C_1719 := algebra.select(X_1714,C_1717,0:dbl,2:dbl,true,true,false);
    X_1721 := algebra.projection(C_1719,X_1712);
    X_1732 := mat.packIncrement(X_1720,2:int);
    X_1658 := mat.packIncrement(X_1732,X_1721);
    X_1722 := algebra.projection(C_1718,X_1713);
    X_1723 := algebra.projection(C_1719,X_1714);
    X_1734 := mat.packIncrement(X_1722,2:int);
    X_1659 := mat.packIncrement(X_1734,X_1723);
    language.pass(X_1711);
    language.pass(X_1712);
    language.pass(C_1718);
    language.pass(X_1713);
    language.pass(C_1719);
    language.pass(X_1714);
exit X_1743;
    sql.resultSet(X_1679,X_1680,X_1682,X_1683,X_1684,X_1658,X_1659);
end user.main;
#inline               actions= 0 time=1 usec 
#remap                actions= 0 time=6 usec 
#costmodel            actions= 1 time=1 usec 
#coercion             actions= 0 time=1 usec 
#evaluate             actions=16 time=41 usec 
#emptybind            actions= 0 time=1 usec 
#pushselect           actions= 4 time=12 usec 
#aliases              actions=19 time=11 usec 
#mitosis              actions= 1 time=26 usec 
#mergetable           actions= 4 time=54 usec 
#deadcode             actions= 5 time=9 usec 
#aliases              actions= 0 time=0 usec 
#constants            actions=12 time=11 usec 
#commonTerms          actions= 0 time=7 usec 
#projectionpath       actions= 0 time=5 usec 
#deadcode             actions= 0 time=7 usec 
#reorder              actions= 1 time=29 usec 
#matpack              actions= 2 time=8 usec 
#dataflow             actions=27 time=28 usec 
#multiplex            actions= 0 time=3 usec 
#profiler             actions= 1 time=3 usec 
#candidates           actions= 1 time=2 usec 
#garbagecollector     actions= 1 time=28 usec 
#total                actions=26 time=420 usec 
#explain select x,y from test where x between (7-3) and (7-1) and y between (1.0-1.0) and (4.0-2.0);
% .explain # table_name
% mal # name
% clob # type
% 160 # length
function user.main():void;
    X_1770:void := querylog.define("explain select x,y from test where x between (7-3) and (7-1) and y between (1.0-1.0) and (4.0-2.0);","default_pipe",53:int);
barrier X_1895 := language.dataflow();
    X_1810 := bat.new(nil:str);
    X_1817 := bat.append(X_1810,"sys.test");
    X_1827 := bat.append(X_1817,"sys.test");
    X_1812 := bat.new(nil:str);
    X_1819 := bat.append(X_1812,"x");
    X_1828 := bat.append(X_1819,"y");
    X_1813 := bat.new(nil:str);
    X_1821 := bat.append(X_1813,"double");
    X_1830 := bat.append(X_1821,"double");
    X_1814 := bat.new(nil:int);
    X_1823 := bat.append(X_1814,53:int);
    X_1831 := bat.append(X_1823,53:int);
    X_1816 := bat.new(nil:int);
    X_1825 := bat.append(X_1816,0:int);
    X_1832 := bat.append(X_1825,0:int);
    X_1773 := sql.mvc();
    X_1900:bat[:dbl] := sql.bind(X_1773,"sys","test3","y",0:int,0:int,2:int);
    X_1865:bat[:dbl] := mosaic.decompress(X_1900);
    X_1901:bat[:dbl] := sql.bind(X_1773,"sys","test3","x",0:int,0:int,2:int);
    X_1863:bat[:dbl] := mosaic.decompress(X_1901);
    C_1860:bat[:oid] := sql.tid(X_1773,"sys","test3",0:int,2:int);
    C_1868 := algebra.select(X_1863,C_1860,4:dbl,6:dbl,true,true,false);
    C_1870 := algebra.select(X_1865,C_1868,0:dbl,2:dbl,true,true,false);
    X_1872 := algebra.projection(C_1870,X_1863);
    X_1902:bat[:dbl] := sql.bind(X_1773,"sys","test3","y",0:int,1:int,2:int);
    X_1866:bat[:dbl] := mosaic.decompress(X_1902);
    X_1903:bat[:dbl] := sql.bind(X_1773,"sys","test3","x",0:int,1:int,2:int);
    X_1864:bat[:dbl] := mosaic.decompress(X_1903);
    C_1862:bat[:oid] := sql.tid(X_1773,"sys","test3",1:int,2:int);
    C_1869 := algebra.select(X_1864,C_1862,4:dbl,6:dbl,true,true,false);
    C_1871 := algebra.select(X_1866,C_1869,0:dbl,2:dbl,true,true,false);
    X_1873 := algebra.projection(C_1871,X_1864);
    X_1884 := mat.packIncrement(X_1872,2:int);
    X_1806 := mat.packIncrement(X_1884,X_1873);
    X_1874 := algebra.projection(C_1870,X_1865);
    X_1875 := algebra.projection(C_1871,X_1866);
    X_1886 := mat.packIncrement(X_1874,2:int);
    X_1807 := mat.packIncrement(X_1886,X_1875);
    language.pass(X_1863);
    language.pass(X_1864);
    language.pass(C_1870);
    language.pass(X_1865);
    language.pass(C_1871);
    language.pass(X_1866);
exit X_1895;
    sql.resultSet(X_1827,X_1828,X_1830,X_1831,X_1832,X_1806,X_1807);
end user.main;
#inline               actions= 0 time=1 usec 
#remap                actions= 0 time=6 usec 
#costmodel            actions= 1 time=2 usec 
#coercion             actions= 0 time=2 usec 
#evaluate             actions=24 time=48 usec 
#emptybind            actions= 0 time=1 usec 
#pushselect           actions= 4 time=14 usec 
#aliases              actions=27 time=13 usec 
#mitosis              actions= 1 time=25 usec 
#mergetable           actions= 4 time=54 usec 
#deadcode             actions= 5 time=9 usec 
#aliases              actions= 0 time=0 usec 
#constants            actions=13 time=11 usec 
#commonTerms          actions= 0 time=7 usec 
#projectionpath       actions= 0 time=4 usec 
#deadcode             actions= 0 time=7 usec 
#reorder              actions= 1 time=29 usec 
#matpack              actions= 2 time=8 usec 
#dataflow             actions=27 time=28 usec 
#multiplex            actions= 0 time=2 usec 
#profiler             actions= 1 time=3 usec 
#candidates           actions= 1 time=1 usec 
#garbagecollector     actions= 1 time=28 usec 
#total                actions=26 time=426 usec 
#drop table test;
#drop table test1;
#drop table test2;
#drop table test3;
#drop table test4;

# 18:37:29 >  
# 18:37:29 >  "Done."
# 18:37:29 >  


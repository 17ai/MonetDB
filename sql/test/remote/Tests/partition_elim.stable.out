stdout of test 'partition_elim` in directory 'sql/test/remote` itself:


# 18:37:29 >  
# 18:37:29 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35081" "--set" "mapi_usock=/var/tmp/mtest-17557/.s.monetdb.35081" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_remote" "--set" "mal_listing=0" "--set" "embedded_r=yes"
# 18:37:29 >  

# MonetDB 5 server v11.20.0
# This is an unreleased version
# Serving database 'mTests_sql_test_remote', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 7.333 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://localhost.nes.nl:35081/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17557/.s.monetdb.35081
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_temporal.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 39_analytics_hge.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 40_json_hge.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 51_sys_schema_extension.sql
# loading sql script: 72_fits.sql
# loading sql script: 74_netcdf.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql

# 18:37:29 >  
# 18:37:29 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-17557" "--port=35081"
# 18:37:29 >  

#create merge table test (x double, y double);
#create table test1 (x double, y double);
#create table test2 (x double, y double);
#create table test3 (x double, y double);
#create table test4 (x double, y double);
#insert into test1 values (1.0, 1.0);
[ 1	]
#insert into test1 values (2.0, 2.0);
[ 1	]
#insert into test2 values (3.0, -1.0);
[ 1	]
#insert into test2 values (4.0, -2.0);
[ 1	]
#insert into test3 values (3.0, 1.0);
[ 1	]
#insert into test3 values (6.0, 2.0);
[ 1	]
#insert into test4 values (7.0, 1.0);
[ 1	]
#insert into test4 values (10.0, 2.0);
[ 1	]
#alter table test1 set read only;
#alter table test2 set read only;
#alter table test3 set read only;
#alter table test4 set read only;
#alter table test add table test1;
#alter table test add table test2;
#alter table test add table test3;
#alter table test add table test4;
#select x from test1 where x between 0 and -1;
% sys.test1 # table_name
% x # name
% double # type
% 24 # length
#select x from test2 where x between 0 and -1;
% sys.test2 # table_name
% x # name
% double # type
% 24 # length
#select x from test3 where x between 0 and -1;
% sys.test3 # table_name
% x # name
% double # type
% 24 # length
#select x from test4 where x between 0 and -1;
% sys.test4 # table_name
% x # name
% double # type
% 24 # length
#select y from test1 where y between 0 and -1;
% sys.test1 # table_name
% y # name
% double # type
% 24 # length
#select y from test2 where y between 0 and -1;
% sys.test2 # table_name
% y # name
% double # type
% 24 # length
#select y from test3 where y between 0 and -1;
% sys.test3 # table_name
% y # name
% double # type
% 24 # length
#select y from test4 where y between 0 and -1;
% sys.test4 # table_name
% y # name
% double # type
% 24 # length
#explain select x,y from test where x between 4.0 and 6.0;
% .explain # table_name
% mal # name
% clob # type
% 117 # length
function user.main():void;
    X_5:void := querylog.define("explain select x,y from test where x between 4.0 and 6.0;", "default_pipe", 49:int);
barrier X_150 := language.dataflow();
    X_48 := bat.new(nil:str);
    X_55 := bat.append(X_48, ".test");
    X_65 := bat.append(X_55, ".test");
    X_50 := bat.new(nil:str);
    X_57 := bat.append(X_50, "x");
    X_66 := bat.append(X_57, "y");
    X_51 := bat.new(nil:str);
    X_59 := bat.append(X_51, "double");
    X_68 := bat.append(X_59, "double");
    X_52 := bat.new(nil:int);
    X_61 := bat.append(X_52, 53:int);
    X_69 := bat.append(X_61, 53:int);
    X_54 := bat.new(nil:int);
    X_63 := bat.append(X_54, 0:int);
    X_70 := bat.append(X_63, 0:int);
    X_40:bat[:dbl] := bat.new(nil:dbl);
    X_8 := sql.mvc();
    X_155:bat[:dbl] := sql.bind(X_8, "sys", "test2", "x", 0:int, 0:int, 2:int);
    X_120:bat[:dbl] := mosaic.decompress(X_155);
    C_156:bat[:oid] := sql.tid(X_8, "sys", "test2", 0:int, 2:int);
    X_117:bat[:oid] := mosaic.decompress(C_156);
    C_125 := algebra.select(X_120, X_117, 4:dbl, 6:dbl, true, true, false);
    X_127 := algebra.projection(C_125, X_120);
    X_157:bat[:dbl] := sql.bind(X_8, "sys", "test2", "x", 0:int, 1:int, 2:int);
    X_121:bat[:dbl] := mosaic.decompress(X_157);
    C_158:bat[:oid] := sql.tid(X_8, "sys", "test2", 1:int, 2:int);
    X_119:bat[:oid] := mosaic.decompress(C_158);
    C_126 := algebra.select(X_121, X_119, 4:dbl, 6:dbl, true, true, false);
    X_128 := algebra.projection(C_126, X_121);
    X_139 := mat.packIncrement(X_127, 2:int);
    X_25 := mat.packIncrement(X_139, X_128);
    X_42 := bat.append(X_40, X_25, true);
    X_159:bat[:dbl] := sql.bind(X_8, "sys", "test3", "x", 0:int);
    X_30:bat[:dbl] := mosaic.decompress(X_159);
    C_160:bat[:oid] := sql.tid(X_8, "sys", "test3");
    X_28:bat[:oid] := mosaic.decompress(C_160);
    C_36 := algebra.select(X_30, X_28, 4:dbl, 6:dbl, true, true, false);
    X_37 := algebra.projection(C_36, X_30);
    X_43 := bat.append(X_42, X_37, true);
    X_44:bat[:dbl] := bat.new(nil:dbl);
    X_122:bat[:dbl] := sql.bind(X_8, "sys", "test2", "y", 0:int, 0:int, 2:int);
    X_129 := mosaic.projection(C_125, X_122);
    X_123:bat[:dbl] := sql.bind(X_8, "sys", "test2", "y", 0:int, 1:int, 2:int);
    X_130 := mosaic.projection(C_126, X_123);
    X_141 := mat.packIncrement(X_129, 2:int);
    X_26 := mat.packIncrement(X_141, X_130);
    X_45 := bat.append(X_44, X_26, true);
    X_32:bat[:dbl] := sql.bind(X_8, "sys", "test3", "y", 0:int);
    X_38 := mosaic.projection(C_36, X_32);
    X_46 := bat.append(X_45, X_38, true);
    language.pass(X_120);
    language.pass(X_121);
    language.pass(X_30);
    language.pass(C_125);
    language.pass(C_126);
    language.pass(C_36);
exit X_150;
    sql.resultSet(X_65, X_66, X_68, X_69, X_70, X_43, X_46);
end user.main;
#inline               actions= 0 time=1 usec 
#remap                actions= 0 time=3 usec 
#costmodel            actions= 1 time=2 usec 
#coercion             actions= 0 time=2 usec 
#evaluate             actions= 6 time=21 usec 
#emptybind            actions= 0 time=0 usec 
#pushselect           actions= 8 time=15 usec 
#aliases              actions=12 time=12 usec 
#mitosis              actions= 1 time=29 usec 
#mergetable           actions= 3 time=61 usec 
#deadcode             actions= 4 time=10 usec 
#aliases              actions= 0 time=1 usec 
#constants            actions= 8 time=10 usec 
#commonTerms          actions= 0 time=8 usec 
#projectionpath       actions= 0 time=6 usec 
#deadcode             actions= 0 time=8 usec 
#reorder              actions= 1 time=35 usec 
#matpack              actions= 2 time=9 usec 
#dataflow             actions=27 time=44 usec 
#multiplex            actions= 0 time=3 usec 
#profiler             actions= 1 time=4 usec 
#candidates           actions= 1 time=1 usec 
#garbagecollector     actions= 1 time=32 usec 
#total                actions=26 time=442 usec 
#explain select x,y from test where x between (7-3) and (7-1);
% .explain # table_name
% mal # name
% clob # type
% 121 # length
function user.main():void;
    X_8:void := querylog.define("explain select x,y from test where x between (7-3) and (7-1);", "default_pipe", 63:int);
barrier X_170 := language.dataflow();
    X_63 := bat.new(nil:str);
    X_70 := bat.append(X_63, ".test");
    X_80 := bat.append(X_70, ".test");
    X_65 := bat.new(nil:str);
    X_72 := bat.append(X_65, "x");
    X_81 := bat.append(X_72, "y");
    X_66 := bat.new(nil:str);
    X_74 := bat.append(X_66, "double");
    X_83 := bat.append(X_74, "double");
    X_67 := bat.new(nil:int);
    X_76 := bat.append(X_67, 53:int);
    X_84 := bat.append(X_76, 53:int);
    X_69 := bat.new(nil:int);
    X_78 := bat.append(X_69, 0:int);
    X_85 := bat.append(X_78, 0:int);
    X_55:bat[:dbl] := bat.new(nil:dbl);
    X_11 := sql.mvc();
    X_175:bat[:dbl] := sql.bind(X_11, "sys", "test2", "x", 0:int, 0:int, 2:int);
    X_140:bat[:dbl] := mosaic.decompress(X_175);
    C_176:bat[:oid] := sql.tid(X_11, "sys", "test2", 0:int, 2:int);
    X_137:bat[:oid] := mosaic.decompress(C_176);
    C_145 := algebra.select(X_140, X_137, 4:dbl, 6:dbl, true, true, false);
    X_147 := algebra.projection(C_145, X_140);
    X_177:bat[:dbl] := sql.bind(X_11, "sys", "test2", "x", 0:int, 1:int, 2:int);
    X_141:bat[:dbl] := mosaic.decompress(X_177);
    C_178:bat[:oid] := sql.tid(X_11, "sys", "test2", 1:int, 2:int);
    X_139:bat[:oid] := mosaic.decompress(C_178);
    C_146 := algebra.select(X_141, X_139, 4:dbl, 6:dbl, true, true, false);
    X_148 := algebra.projection(C_146, X_141);
    X_159 := mat.packIncrement(X_147, 2:int);
    X_34 := mat.packIncrement(X_159, X_148);
    X_57 := bat.append(X_55, X_34, true);
    X_179:bat[:dbl] := sql.bind(X_11, "sys", "test3", "x", 0:int);
    X_39:bat[:dbl] := mosaic.decompress(X_179);
    C_180:bat[:oid] := sql.tid(X_11, "sys", "test3");
    X_37:bat[:oid] := mosaic.decompress(C_180);
    C_51 := algebra.select(X_39, X_37, 4:dbl, 6:dbl, true, true, false);
    X_52 := algebra.projection(C_51, X_39);
    X_58 := bat.append(X_57, X_52, true);
    X_59:bat[:dbl] := bat.new(nil:dbl);
    X_142:bat[:dbl] := sql.bind(X_11, "sys", "test2", "y", 0:int, 0:int, 2:int);
    X_149 := mosaic.projection(C_145, X_142);
    X_143:bat[:dbl] := sql.bind(X_11, "sys", "test2", "y", 0:int, 1:int, 2:int);
    X_150 := mosaic.projection(C_146, X_143);
    X_161 := mat.packIncrement(X_149, 2:int);
    X_35 := mat.packIncrement(X_161, X_150);
    X_60 := bat.append(X_59, X_35, true);
    X_41:bat[:dbl] := sql.bind(X_11, "sys", "test3", "y", 0:int);
    X_53 := mosaic.projection(C_51, X_41);
    X_61 := bat.append(X_60, X_53, true);
    language.pass(X_140);
    language.pass(X_141);
    language.pass(X_39);
    language.pass(C_145);
    language.pass(C_146);
    language.pass(C_51);
exit X_170;
    sql.resultSet(X_80, X_81, X_83, X_84, X_85, X_58, X_61);
end user.main;
#inline               actions= 0 time=1 usec 
#remap                actions= 0 time=5 usec 
#costmodel            actions= 1 time=2 usec 
#coercion             actions= 0 time=2 usec 
#evaluate             actions=20 time=59 usec 
#emptybind            actions= 0 time=0 usec 
#pushselect           actions= 8 time=17 usec 
#aliases              actions=26 time=24 usec 
#mitosis              actions= 1 time=29 usec 
#mergetable           actions= 3 time=62 usec 
#deadcode             actions= 4 time=11 usec 
#aliases              actions= 0 time=1 usec 
#constants            actions= 9 time=11 usec 
#commonTerms          actions= 0 time=8 usec 
#projectionpath       actions= 0 time=6 usec 
#deadcode             actions= 0 time=7 usec 
#reorder              actions= 1 time=36 usec 
#matpack              actions= 2 time=9 usec 
#dataflow             actions=27 time=34 usec 
#multiplex            actions= 0 time=3 usec 
#profiler             actions= 1 time=4 usec 
#candidates           actions= 1 time=2 usec 
#garbagecollector     actions= 1 time=32 usec 
#total                actions=26 time=505 usec 
#explain select x,y from test where x between 4.0 and 6.0 and y between 0.0 and 2.0;
% .explain # table_name
% mal # name
% clob # type
% 143 # length
function user.main():void;
    X_9:void := querylog.define("explain select x,y from test where x between 4.0 and 6.0 and y between 0.0 and 2.0;", "default_pipe", 37:int);
barrier X_138 := language.dataflow();
    X_36 := bat.new(nil:str);
    X_43 := bat.append(X_36, "sys.test");
    X_52 := bat.append(X_43, "sys.test");
    X_38 := bat.new(nil:str);
    X_45 := bat.append(X_38, "x");
    X_53 := bat.append(X_45, "y");
    X_39 := bat.new(nil:str);
    X_46 := bat.append(X_39, "double");
    X_55 := bat.append(X_46, "double");
    X_40 := bat.new(nil:int);
    X_48 := bat.append(X_40, 53:int);
    X_56 := bat.append(X_48, 53:int);
    X_42 := bat.new(nil:int);
    X_50 := bat.append(X_42, 0:int);
    X_57 := bat.append(X_50, 0:int);
    X_12 := sql.mvc();
    X_143:bat[:dbl] := sql.bind(X_12, "sys", "test3", "y", 0:int, 0:int, 2:int);
    X_108:bat[:dbl] := mosaic.decompress(X_143);
    X_144:bat[:dbl] := sql.bind(X_12, "sys", "test3", "x", 0:int, 0:int, 2:int);
    X_106:bat[:dbl] := mosaic.decompress(X_144);
    C_145:bat[:oid] := sql.tid(X_12, "sys", "test3", 0:int, 2:int);
    X_103:bat[:oid] := mosaic.decompress(C_145);
    C_111 := algebra.select(X_106, X_103, 4:dbl, 6:dbl, true, true, false);
    C_113 := algebra.select(X_108, C_111, 0:dbl, 2:dbl, true, true, false);
    X_115 := algebra.projection(C_113, X_106);
    X_146:bat[:dbl] := sql.bind(X_12, "sys", "test3", "y", 0:int, 1:int, 2:int);
    X_109:bat[:dbl] := mosaic.decompress(X_146);
    X_147:bat[:dbl] := sql.bind(X_12, "sys", "test3", "x", 0:int, 1:int, 2:int);
    X_107:bat[:dbl] := mosaic.decompress(X_147);
    C_148:bat[:oid] := sql.tid(X_12, "sys", "test3", 1:int, 2:int);
    X_105:bat[:oid] := mosaic.decompress(C_148);
    C_112 := algebra.select(X_107, X_105, 4:dbl, 6:dbl, true, true, false);
    C_114 := algebra.select(X_109, C_112, 0:dbl, 2:dbl, true, true, false);
    X_116 := algebra.projection(C_114, X_107);
    X_127 := mat.packIncrement(X_115, 2:int);
    X_32 := mat.packIncrement(X_127, X_116);
    X_117 := algebra.projection(C_113, X_108);
    X_118 := algebra.projection(C_114, X_109);
    X_129 := mat.packIncrement(X_117, 2:int);
    X_33 := mat.packIncrement(X_129, X_118);
    language.pass(X_106);
    language.pass(X_107);
    language.pass(C_113);
    language.pass(X_108);
    language.pass(C_114);
    language.pass(X_109);
exit X_138;
    sql.resultSet(X_52, X_53, X_55, X_56, X_57, X_32, X_33);
end user.main;
#inline               actions= 0 time=1 usec 
#remap                actions= 0 time=6 usec 
#costmodel            actions= 1 time=2 usec 
#coercion             actions= 0 time=1 usec 
#evaluate             actions= 8 time=23 usec 
#emptybind            actions= 0 time=1 usec 
#pushselect           actions= 4 time=13 usec 
#aliases              actions=11 time=10 usec 
#mitosis              actions= 1 time=35 usec 
#mergetable           actions= 4 time=57 usec 
#deadcode             actions= 5 time=10 usec 
#aliases              actions= 0 time=1 usec 
#constants            actions= 9 time=9 usec 
#commonTerms          actions= 0 time=7 usec 
#projectionpath       actions= 0 time=5 usec 
#deadcode             actions= 0 time=6 usec 
#reorder              actions= 1 time=29 usec 
#matpack              actions= 2 time=7 usec 
#dataflow             actions=27 time=29 usec 
#multiplex            actions= 0 time=3 usec 
#profiler             actions= 1 time=3 usec 
#candidates           actions= 1 time=2 usec 
#garbagecollector     actions= 1 time=29 usec 
#total                actions=26 time=400 usec 
#explain select x,y from test where x between 4.0 and 6.0 and y between (1.0-1.0) and (4.0-2.0);
% .explain # table_name
% mal # name
% clob # type
% 156 # length
function user.main():void;
    X_12:void := querylog.define("explain select x,y from test where x between 4.0 and 6.0 and y between (1.0-1.0) and (4.0-2.0);", "default_pipe", 45:int);
barrier X_153 := language.dataflow();
    X_46 := bat.new(nil:str);
    X_53 := bat.append(X_46, "sys.test");
    X_63 := bat.append(X_53, "sys.test");
    X_48 := bat.new(nil:str);
    X_55 := bat.append(X_48, "x");
    X_64 := bat.append(X_55, "y");
    X_49 := bat.new(nil:str);
    X_57 := bat.append(X_49, "double");
    X_66 := bat.append(X_57, "double");
    X_50 := bat.new(nil:int);
    X_59 := bat.append(X_50, 53:int);
    X_67 := bat.append(X_59, 53:int);
    X_52 := bat.new(nil:int);
    X_61 := bat.append(X_52, 0:int);
    X_68 := bat.append(X_61, 0:int);
    X_15 := sql.mvc();
    X_158:bat[:dbl] := sql.bind(X_15, "sys", "test3", "y", 0:int, 0:int, 2:int);
    X_123:bat[:dbl] := mosaic.decompress(X_158);
    X_159:bat[:dbl] := sql.bind(X_15, "sys", "test3", "x", 0:int, 0:int, 2:int);
    X_121:bat[:dbl] := mosaic.decompress(X_159);
    C_160:bat[:oid] := sql.tid(X_15, "sys", "test3", 0:int, 2:int);
    X_118:bat[:oid] := mosaic.decompress(C_160);
    C_126 := algebra.select(X_121, X_118, 4:dbl, 6:dbl, true, true, false);
    C_128 := algebra.select(X_123, C_126, 0:dbl, 2:dbl, true, true, false);
    X_130 := algebra.projection(C_128, X_121);
    X_161:bat[:dbl] := sql.bind(X_15, "sys", "test3", "y", 0:int, 1:int, 2:int);
    X_124:bat[:dbl] := mosaic.decompress(X_161);
    X_162:bat[:dbl] := sql.bind(X_15, "sys", "test3", "x", 0:int, 1:int, 2:int);
    X_122:bat[:dbl] := mosaic.decompress(X_162);
    C_163:bat[:oid] := sql.tid(X_15, "sys", "test3", 1:int, 2:int);
    X_120:bat[:oid] := mosaic.decompress(C_163);
    C_127 := algebra.select(X_122, X_120, 4:dbl, 6:dbl, true, true, false);
    C_129 := algebra.select(X_124, C_127, 0:dbl, 2:dbl, true, true, false);
    X_131 := algebra.projection(C_129, X_122);
    X_142 := mat.packIncrement(X_130, 2:int);
    X_42 := mat.packIncrement(X_142, X_131);
    X_132 := algebra.projection(C_128, X_123);
    X_133 := algebra.projection(C_129, X_124);
    X_144 := mat.packIncrement(X_132, 2:int);
    X_43 := mat.packIncrement(X_144, X_133);
    language.pass(X_121);
    language.pass(X_122);
    language.pass(C_128);
    language.pass(X_123);
    language.pass(C_129);
    language.pass(X_124);
exit X_153;
    sql.resultSet(X_63, X_64, X_66, X_67, X_68, X_42, X_43);
end user.main;
#inline               actions= 0 time=1 usec 
#remap                actions= 0 time=6 usec 
#costmodel            actions= 1 time=1 usec 
#coercion             actions= 0 time=1 usec 
#evaluate             actions=16 time=41 usec 
#emptybind            actions= 0 time=1 usec 
#pushselect           actions= 4 time=12 usec 
#aliases              actions=19 time=11 usec 
#mitosis              actions= 1 time=26 usec 
#mergetable           actions= 4 time=54 usec 
#deadcode             actions= 5 time=9 usec 
#aliases              actions= 0 time=0 usec 
#constants            actions=12 time=11 usec 
#commonTerms          actions= 0 time=7 usec 
#projectionpath       actions= 0 time=5 usec 
#deadcode             actions= 0 time=7 usec 
#reorder              actions= 1 time=29 usec 
#matpack              actions= 2 time=8 usec 
#dataflow             actions=27 time=28 usec 
#multiplex            actions= 0 time=3 usec 
#profiler             actions= 1 time=3 usec 
#candidates           actions= 1 time=2 usec 
#garbagecollector     actions= 1 time=28 usec 
#total                actions=26 time=420 usec 
#explain select x,y from test where x between (7-3) and (7-1) and y between (1.0-1.0) and (4.0-2.0);
% .explain # table_name
% mal # name
% clob # type
% 160 # length
function user.main():void;
    X_15:void := querylog.define("explain select x,y from test where x between (7-3) and (7-1) and y between (1.0-1.0) and (4.0-2.0);", "default_pipe", 53:int);
barrier X_166 := language.dataflow();
    X_55 := bat.new(nil:str);
    X_62 := bat.append(X_55, "sys.test");
    X_72 := bat.append(X_62, "sys.test");
    X_57 := bat.new(nil:str);
    X_64 := bat.append(X_57, "x");
    X_73 := bat.append(X_64, "y");
    X_58 := bat.new(nil:str);
    X_66 := bat.append(X_58, "double");
    X_75 := bat.append(X_66, "double");
    X_59 := bat.new(nil:int);
    X_68 := bat.append(X_59, 53:int);
    X_76 := bat.append(X_68, 53:int);
    X_61 := bat.new(nil:int);
    X_70 := bat.append(X_61, 0:int);
    X_77 := bat.append(X_70, 0:int);
    X_18 := sql.mvc();
    X_171:bat[:dbl] := sql.bind(X_18, "sys", "test3", "y", 0:int, 0:int, 2:int);
    X_136:bat[:dbl] := mosaic.decompress(X_171);
    X_172:bat[:dbl] := sql.bind(X_18, "sys", "test3", "x", 0:int, 0:int, 2:int);
    X_134:bat[:dbl] := mosaic.decompress(X_172);
    C_173:bat[:oid] := sql.tid(X_18, "sys", "test3", 0:int, 2:int);
    X_131:bat[:oid] := mosaic.decompress(C_173);
    C_139 := algebra.select(X_134, X_131, 4:dbl, 6:dbl, true, true, false);
    C_141 := algebra.select(X_136, C_139, 0:dbl, 2:dbl, true, true, false);
    X_143 := algebra.projection(C_141, X_134);
    X_174:bat[:dbl] := sql.bind(X_18, "sys", "test3", "y", 0:int, 1:int, 2:int);
    X_137:bat[:dbl] := mosaic.decompress(X_174);
    X_175:bat[:dbl] := sql.bind(X_18, "sys", "test3", "x", 0:int, 1:int, 2:int);
    X_135:bat[:dbl] := mosaic.decompress(X_175);
    C_176:bat[:oid] := sql.tid(X_18, "sys", "test3", 1:int, 2:int);
    X_133:bat[:oid] := mosaic.decompress(C_176);
    C_140 := algebra.select(X_135, X_133, 4:dbl, 6:dbl, true, true, false);
    C_142 := algebra.select(X_137, C_140, 0:dbl, 2:dbl, true, true, false);
    X_144 := algebra.projection(C_142, X_135);
    X_155 := mat.packIncrement(X_143, 2:int);
    X_51 := mat.packIncrement(X_155, X_144);
    X_145 := algebra.projection(C_141, X_136);
    X_146 := algebra.projection(C_142, X_137);
    X_157 := mat.packIncrement(X_145, 2:int);
    X_52 := mat.packIncrement(X_157, X_146);
    language.pass(X_134);
    language.pass(X_135);
    language.pass(C_141);
    language.pass(X_136);
    language.pass(C_142);
    language.pass(X_137);
exit X_166;
    sql.resultSet(X_72, X_73, X_75, X_76, X_77, X_51, X_52);
end user.main;
#inline               actions= 0 time=1 usec 
#remap                actions= 0 time=6 usec 
#costmodel            actions= 1 time=2 usec 
#coercion             actions= 0 time=2 usec 
#evaluate             actions=24 time=48 usec 
#emptybind            actions= 0 time=1 usec 
#pushselect           actions= 4 time=14 usec 
#aliases              actions=27 time=13 usec 
#mitosis              actions= 1 time=25 usec 
#mergetable           actions= 4 time=54 usec 
#deadcode             actions= 5 time=9 usec 
#aliases              actions= 0 time=0 usec 
#constants            actions=13 time=11 usec 
#commonTerms          actions= 0 time=7 usec 
#projectionpath       actions= 0 time=4 usec 
#deadcode             actions= 0 time=7 usec 
#reorder              actions= 1 time=29 usec 
#matpack              actions= 2 time=8 usec 
#dataflow             actions=27 time=28 usec 
#multiplex            actions= 0 time=2 usec 
#profiler             actions= 1 time=3 usec 
#candidates           actions= 1 time=1 usec 
#garbagecollector     actions= 1 time=28 usec 
#total                actions=26 time=426 usec 
#drop table test;
#drop table test1;
#drop table test2;
#drop table test3;
#drop table test4;

# 18:37:29 >  
# 18:37:29 >  "Done."
# 18:37:29 >  


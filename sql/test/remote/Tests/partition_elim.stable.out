stdout of test 'partition_elim` in directory 'sql/test/remote` itself:


# 18:37:29 >  
# 18:37:29 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=35081" "--set" "mapi_usock=/var/tmp/mtest-17557/.s.monetdb.35081" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/home/niels/scratch/monetdb/Linux-x86_64/var/MonetDB/mTests_sql_test_remote" "--set" "mal_listing=0" "--set" "embedded_r=yes"
# 18:37:29 >  

# MonetDB 5 server v11.20.0
# This is an unreleased version
# Serving database 'mTests_sql_test_remote', using 4 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 7.333 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://localhost.nes.nl:35081/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-17557/.s.monetdb.35081
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_temporal.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 39_analytics_hge.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 40_json_hge.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 51_sys_schema_extension.sql
# loading sql script: 72_fits.sql
# loading sql script: 74_netcdf.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 85_bam.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql

# 18:37:29 >  
# 18:37:29 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-17557" "--port=35081"
# 18:37:29 >  

#create merge table test (x double, y double);
#create table test1 (x double, y double);
#create table test2 (x double, y double);
#create table test3 (x double, y double);
#create table test4 (x double, y double);
#insert into test1 values (1.0, 1.0);
[ 1	]
#insert into test1 values (2.0, 2.0);
[ 1	]
#insert into test2 values (3.0, -1.0);
[ 1	]
#insert into test2 values (4.0, -2.0);
[ 1	]
#insert into test3 values (3.0, 1.0);
[ 1	]
#insert into test3 values (6.0, 2.0);
[ 1	]
#insert into test4 values (7.0, 1.0);
[ 1	]
#insert into test4 values (10.0, 2.0);
[ 1	]
#alter table test1 set read only;
#alter table test2 set read only;
#alter table test3 set read only;
#alter table test4 set read only;
#alter table test add table test1;
#alter table test add table test2;
#alter table test add table test3;
#alter table test add table test4;
#select x from test1 where x between 0 and -1;
% sys.test1 # table_name
% x # name
% double # type
% 24 # length
#select x from test2 where x between 0 and -1;
% sys.test2 # table_name
% x # name
% double # type
% 24 # length
#select x from test3 where x between 0 and -1;
% sys.test3 # table_name
% x # name
% double # type
% 24 # length
#select x from test4 where x between 0 and -1;
% sys.test4 # table_name
% x # name
% double # type
% 24 # length
#select y from test1 where y between 0 and -1;
% sys.test1 # table_name
% y # name
% double # type
% 24 # length
#select y from test2 where y between 0 and -1;
% sys.test2 # table_name
% y # name
% double # type
% 24 # length
#select y from test3 where y between 0 and -1;
% sys.test3 # table_name
% y # name
% double # type
% 24 # length
#select y from test4 where y between 0 and -1;
% sys.test4 # table_name
% y # name
% double # type
% 24 # length
#explain select x,y from test where x between 4.0 and 6.0;
% .explain # table_name
% mal # name
% clob # type
% 68 # length
function user.SQLanalyze():void;
barrier X_1253 := language.dataflow();
    X_1181 := bat.new(nil:str);
    X_1188 := bat.append(X_1181,".test");
    X_1198 := bat.append(X_1188,".test");
    X_1183 := bat.new(nil:str);
    X_1190 := bat.append(X_1183,"x");
    X_1199 := bat.append(X_1190,"y");
    X_1184 := bat.new(nil:str);
    X_1192 := bat.append(X_1184,"double");
    X_1200 := bat.append(X_1192,"double");
    X_1185 := bat.new(nil:int);
    X_1194 := bat.append(X_1185,53);
    X_1201 := bat.append(X_1194,53);
    X_1187 := bat.new(nil:int);
    X_1196 := bat.append(X_1187,0);
    X_1202 := bat.append(X_1196,0);
    X_1144:bat[:dbl] := bat.new(nil:dbl);
    X_1143 := sql.mvc();
    X_1283:bat[:dbl] := sql.bind(X_1143,"sys","test2","x",0,0,2);
    X_1258:bat[:dbl] := mosaic.decompress(X_1283);
    X_1222:bat[:dbl] := mosaic.decompress(X_1258);
    C_1219:bat[:oid] := sql.tid(X_1143,"sys","test2",0,2);
    C_1227 := algebra.subselect(X_1222,C_1219,4,6,true,true,false);
    X_1229 := algebra.projection(C_1227,X_1222);
    X_1284:bat[:dbl] := sql.bind(X_1143,"sys","test2","x",0,1,2);
    X_1259:bat[:dbl] := mosaic.decompress(X_1284);
    X_1223:bat[:dbl] := mosaic.decompress(X_1259);
    C_1221:bat[:oid] := sql.tid(X_1143,"sys","test2",1,2);
    C_1228 := algebra.subselect(X_1223,C_1221,4,6,true,true,false);
    X_1230 := algebra.projection(C_1228,X_1223);
    X_1242 := mat.packIncrement(X_1229,2);
    X_1159 := mat.packIncrement(X_1242,X_1230);
    X_1160 := bat.append(X_1144,X_1159,true);
    X_1285:bat[:dbl] := sql.bind(X_1143,"sys","test3","x",0);
    X_1260:bat[:dbl] := mosaic.decompress(X_1285);
    X_1163:bat[:dbl] := mosaic.decompress(X_1260);
    C_1161:bat[:oid] := sql.tid(X_1143,"sys","test3");
    C_1167 := algebra.subselect(X_1163,C_1161,4,6,true,true,false);
    X_1168 := algebra.projection(C_1167,X_1163);
    X_1169 := bat.append(X_1160,X_1168,true);
    X_1170:bat[:dbl] := bat.new(nil:dbl);
    X_1286:bat[:dbl] := sql.bind(X_1143,"sys","test2","y",0,0,2);
    X_1224:bat[:dbl] := mosaic.decompress(X_1286);
    X_1231 := mosaic.projection(C_1227,X_1224);
    X_1287:bat[:dbl] := sql.bind(X_1143,"sys","test2","y",0,1,2);
    X_1225:bat[:dbl] := mosaic.decompress(X_1287);
    X_1232 := mosaic.projection(C_1228,X_1225);
    X_1244 := mat.packIncrement(X_1231,2);
    X_1174 := mat.packIncrement(X_1244,X_1232);
    X_1175 := bat.append(X_1170,X_1174,true);
    X_1288:bat[:dbl] := sql.bind(X_1143,"sys","test3","y",0);
    X_1176:bat[:dbl] := mosaic.decompress(X_1288);
    X_1178 := mosaic.projection(C_1167,X_1176);
    X_1179 := bat.append(X_1175,X_1178,true);
    language.pass(X_1222);
    language.pass(X_1223);
    language.pass(X_1163);
    language.pass(C_1227);
    language.pass(C_1228);
    language.pass(C_1167);
exit X_1253;
    sql.resultSet(X_1198,X_1199,X_1200,X_1201,X_1202,X_1169,X_1179);
end user.SQLanalyze;
#explain select x,y from test where x between (7-3) and (7-1);
% .explain # table_name
% mal # name
% clob # type
% 75 # length
function user.SQLanalyze():void;
barrier X_1400 := language.dataflow();
    X_1323 := bat.new(nil:str);
    X_1330 := bat.append(X_1323,".test");
    X_1340 := bat.append(X_1330,".test");
    X_1325 := bat.new(nil:str);
    X_1332 := bat.append(X_1325,"x");
    X_1341 := bat.append(X_1332,"y");
    X_1326 := bat.new(nil:str);
    X_1334 := bat.append(X_1326,"double");
    X_1342 := bat.append(X_1334,"double");
    X_1327 := bat.new(nil:int);
    X_1336 := bat.append(X_1327,53);
    X_1343 := bat.append(X_1336,53);
    X_1329 := bat.new(nil:int);
    X_1338 := bat.append(X_1329,0);
    X_1344 := bat.append(X_1338,0);
    X_1273:bat[:dbl] := bat.new(nil:dbl);
    X_1272 := sql.mvc();
    X_1430:bat[:dbl] := sql.bind(X_1272,"sys","test2","x",0,0,2);
    X_1405:bat[:dbl] := mosaic.decompress(X_1430);
    X_1369:bat[:dbl] := mosaic.decompress(X_1405);
    C_1366:bat[:oid] := sql.tid(X_1272,"sys","test2",0,2);
    C_1374 := algebra.subselect(X_1369,C_1366,4:dbl,6:dbl,true,true,false);
    X_1376 := algebra.projection(C_1374,X_1369);
    X_1431:bat[:dbl] := sql.bind(X_1272,"sys","test2","x",0,1,2);
    X_1406:bat[:dbl] := mosaic.decompress(X_1431);
    X_1370:bat[:dbl] := mosaic.decompress(X_1406);
    C_1368:bat[:oid] := sql.tid(X_1272,"sys","test2",1,2);
    C_1375 := algebra.subselect(X_1370,C_1368,4:dbl,6:dbl,true,true,false);
    X_1377 := algebra.projection(C_1375,X_1370);
    X_1389 := mat.packIncrement(X_1376,2);
    X_1294 := mat.packIncrement(X_1389,X_1377);
    X_1295 := bat.append(X_1273,X_1294,true);
    X_1432:bat[:dbl] := sql.bind(X_1272,"sys","test3","x",0);
    X_1407:bat[:dbl] := mosaic.decompress(X_1432);
    X_1298:bat[:dbl] := mosaic.decompress(X_1407);
    C_1296:bat[:oid] := sql.tid(X_1272,"sys","test3");
    C_1308 := algebra.subselect(X_1298,C_1296,4:dbl,6:dbl,true,true,false);
    X_1309 := algebra.projection(C_1308,X_1298);
    X_1310 := bat.append(X_1295,X_1309,true);
    X_1311:bat[:dbl] := bat.new(nil:dbl);
    X_1433:bat[:dbl] := sql.bind(X_1272,"sys","test2","y",0,0,2);
    X_1371:bat[:dbl] := mosaic.decompress(X_1433);
    X_1378 := mosaic.projection(C_1374,X_1371);
    X_1434:bat[:dbl] := sql.bind(X_1272,"sys","test2","y",0,1,2);
    X_1372:bat[:dbl] := mosaic.decompress(X_1434);
    X_1379 := mosaic.projection(C_1375,X_1372);
    X_1391 := mat.packIncrement(X_1378,2);
    X_1316 := mat.packIncrement(X_1391,X_1379);
    X_1317 := bat.append(X_1311,X_1316,true);
    X_1435:bat[:dbl] := sql.bind(X_1272,"sys","test3","y",0);
    X_1318:bat[:dbl] := mosaic.decompress(X_1435);
    X_1320 := mosaic.projection(C_1308,X_1318);
    X_1321 := bat.append(X_1317,X_1320,true);
    language.pass(X_1369);
    language.pass(X_1370);
    language.pass(X_1298);
    language.pass(C_1374);
    language.pass(C_1375);
    language.pass(C_1308);
exit X_1400;
    sql.resultSet(X_1340,X_1341,X_1342,X_1343,X_1344,X_1310,X_1321);
end user.SQLanalyze;
#explain select x,y from test where x between 4.0 and 6.0 and y between 0.0 and 2.0;
% .explain # table_name
% mal # name
% clob # type
% 68 # length
function user.SQLanalyze():void;
barrier X_1517 := language.dataflow();
    X_1443 := bat.new(nil:str);
    X_1450 := bat.append(X_1443,"sys.test");
    X_1458 := bat.append(X_1450,"sys.test");
    X_1445 := bat.new(nil:str);
    X_1452 := bat.append(X_1445,"x");
    X_1459 := bat.append(X_1452,"y");
    X_1446 := bat.new(nil:str);
    X_1453 := bat.append(X_1446,"double");
    X_1461 := bat.append(X_1453,"double");
    X_1447 := bat.new(nil:int);
    X_1455 := bat.append(X_1447,53);
    X_1462 := bat.append(X_1455,53);
    X_1449 := bat.new(nil:int);
    X_1457 := bat.append(X_1449,0);
    X_1463 := bat.append(X_1457,0);
    X_1420 := sql.mvc();
    X_1548:bat[:dbl] := sql.bind(X_1420,"sys","test3","y",0,0,2);
    X_1522:bat[:dbl] := mosaic.decompress(X_1548);
    X_1484:bat[:dbl] := mosaic.decompress(X_1522);
    X_1549:bat[:dbl] := sql.bind(X_1420,"sys","test3","x",0,0,2);
    X_1523:bat[:dbl] := mosaic.decompress(X_1549);
    X_1486:bat[:dbl] := mosaic.decompress(X_1523);
    C_1481:bat[:oid] := sql.tid(X_1420,"sys","test3",0,2);
    C_1489 := algebra.subselect(X_1486,C_1481,4,6,true,true,false);
    C_1491 := algebra.subselect(X_1484,C_1489,0,2,true,true,false);
    X_1493 := algebra.projection(C_1491,X_1486);
    X_1550:bat[:dbl] := sql.bind(X_1420,"sys","test3","y",0,1,2);
    X_1524:bat[:dbl] := mosaic.decompress(X_1550);
    X_1485:bat[:dbl] := mosaic.decompress(X_1524);
    X_1551:bat[:dbl] := sql.bind(X_1420,"sys","test3","x",0,1,2);
    X_1525:bat[:dbl] := mosaic.decompress(X_1551);
    X_1487:bat[:dbl] := mosaic.decompress(X_1525);
    C_1483:bat[:oid] := sql.tid(X_1420,"sys","test3",1,2);
    C_1490 := algebra.subselect(X_1487,C_1483,4,6,true,true,false);
    C_1492 := algebra.subselect(X_1485,C_1490,0,2,true,true,false);
    X_1494 := algebra.projection(C_1492,X_1487);
    X_1506 := mat.packIncrement(X_1493,2);
    X_1440 := mat.packIncrement(X_1506,X_1494);
    X_1495 := algebra.projection(C_1491,X_1484);
    X_1496 := algebra.projection(C_1492,X_1485);
    X_1508 := mat.packIncrement(X_1495,2);
    X_1441 := mat.packIncrement(X_1508,X_1496);
    language.pass(X_1486);
    language.pass(X_1487);
    language.pass(C_1491);
    language.pass(X_1484);
    language.pass(C_1492);
    language.pass(X_1485);
exit X_1517;
    sql.resultSet(X_1458,X_1459,X_1461,X_1462,X_1463,X_1440,X_1441);
end user.SQLanalyze;
#explain select x,y from test where x between 4.0 and 6.0 and y between (1.0-1.0) and (4.0-2.0);
% .explain # table_name
% mal # name
% clob # type
% 75 # length
function user.SQLanalyze():void;
barrier X_1649 := language.dataflow();
    X_1571 := bat.new(nil:str);
    X_1578 := bat.append(X_1571,"sys.test");
    X_1587 := bat.append(X_1578,"sys.test");
    X_1573 := bat.new(nil:str);
    X_1580 := bat.append(X_1573,"x");
    X_1588 := bat.append(X_1580,"y");
    X_1574 := bat.new(nil:str);
    X_1581 := bat.append(X_1574,"double");
    X_1590 := bat.append(X_1581,"double");
    X_1575 := bat.new(nil:int);
    X_1583 := bat.append(X_1575,53);
    X_1591 := bat.append(X_1583,53);
    X_1577 := bat.new(nil:int);
    X_1585 := bat.append(X_1577,0);
    X_1592 := bat.append(X_1585,0);
    X_1541 := sql.mvc();
    X_1680:bat[:dbl] := sql.bind(X_1541,"sys","test3","y",0,0,2);
    X_1654:bat[:dbl] := mosaic.decompress(X_1680);
    X_1616:bat[:dbl] := mosaic.decompress(X_1654);
    X_1681:bat[:dbl] := sql.bind(X_1541,"sys","test3","x",0,0,2);
    X_1655:bat[:dbl] := mosaic.decompress(X_1681);
    X_1618:bat[:dbl] := mosaic.decompress(X_1655);
    C_1613:bat[:oid] := sql.tid(X_1541,"sys","test3",0,2);
    C_1621 := algebra.subselect(X_1618,C_1613,4,6,true,true,false);
    C_1623 := algebra.subselect(X_1616,C_1621,0:dbl,2:dbl,true,true,false);
    X_1625 := algebra.projection(C_1623,X_1618);
    X_1682:bat[:dbl] := sql.bind(X_1541,"sys","test3","y",0,1,2);
    X_1656:bat[:dbl] := mosaic.decompress(X_1682);
    X_1617:bat[:dbl] := mosaic.decompress(X_1656);
    X_1683:bat[:dbl] := sql.bind(X_1541,"sys","test3","x",0,1,2);
    X_1657:bat[:dbl] := mosaic.decompress(X_1683);
    X_1619:bat[:dbl] := mosaic.decompress(X_1657);
    C_1615:bat[:oid] := sql.tid(X_1541,"sys","test3",1,2);
    C_1622 := algebra.subselect(X_1619,C_1615,4,6,true,true,false);
    C_1624 := algebra.subselect(X_1617,C_1622,0:dbl,2:dbl,true,true,false);
    X_1626 := algebra.projection(C_1624,X_1619);
    X_1638 := mat.packIncrement(X_1625,2);
    X_1568 := mat.packIncrement(X_1638,X_1626);
    X_1627 := algebra.projection(C_1623,X_1616);
    X_1628 := algebra.projection(C_1624,X_1617);
    X_1640 := mat.packIncrement(X_1627,2);
    X_1569 := mat.packIncrement(X_1640,X_1628);
    language.pass(X_1618);
    language.pass(X_1619);
    language.pass(C_1623);
    language.pass(X_1616);
    language.pass(C_1624);
    language.pass(X_1617);
exit X_1649;
    sql.resultSet(X_1587,X_1588,X_1590,X_1591,X_1592,X_1568,X_1569);
end user.SQLanalyze;
#explain select x,y from test where x between (7-3) and (7-1) and y between (1.0-1.0) and (4.0-2.0);
% .explain # table_name
% mal # name
% clob # type
% 75 # length
function user.SQLanalyze():void;
barrier X_1795 := language.dataflow();
    X_1712 := bat.new(nil:str);
    X_1719 := bat.append(X_1712,"sys.test");
    X_1728 := bat.append(X_1719,"sys.test");
    X_1714 := bat.new(nil:str);
    X_1721 := bat.append(X_1714,"x");
    X_1729 := bat.append(X_1721,"y");
    X_1715 := bat.new(nil:str);
    X_1722 := bat.append(X_1715,"double");
    X_1731 := bat.append(X_1722,"double");
    X_1716 := bat.new(nil:int);
    X_1724 := bat.append(X_1716,53);
    X_1732 := bat.append(X_1724,53);
    X_1718 := bat.new(nil:int);
    X_1726 := bat.append(X_1718,0);
    X_1733 := bat.append(X_1726,0);
    X_1676 := sql.mvc();
    X_1826:bat[:dbl] := sql.bind(X_1676,"sys","test3","y",0,0,2);
    X_1800:bat[:dbl] := mosaic.decompress(X_1826);
    X_1762:bat[:dbl] := mosaic.decompress(X_1800);
    X_1827:bat[:dbl] := sql.bind(X_1676,"sys","test3","x",0,0,2);
    X_1801:bat[:dbl] := mosaic.decompress(X_1827);
    X_1764:bat[:dbl] := mosaic.decompress(X_1801);
    C_1759:bat[:oid] := sql.tid(X_1676,"sys","test3",0,2);
    C_1767 := algebra.subselect(X_1764,C_1759,4:dbl,6:dbl,true,true,false);
    C_1769 := algebra.subselect(X_1762,C_1767,0:dbl,2:dbl,true,true,false);
    X_1771 := algebra.projection(C_1769,X_1764);
    X_1828:bat[:dbl] := sql.bind(X_1676,"sys","test3","y",0,1,2);
    X_1802:bat[:dbl] := mosaic.decompress(X_1828);
    X_1763:bat[:dbl] := mosaic.decompress(X_1802);
    X_1829:bat[:dbl] := sql.bind(X_1676,"sys","test3","x",0,1,2);
    X_1803:bat[:dbl] := mosaic.decompress(X_1829);
    X_1765:bat[:dbl] := mosaic.decompress(X_1803);
    C_1761:bat[:oid] := sql.tid(X_1676,"sys","test3",1,2);
    C_1768 := algebra.subselect(X_1765,C_1761,4:dbl,6:dbl,true,true,false);
    C_1770 := algebra.subselect(X_1763,C_1768,0:dbl,2:dbl,true,true,false);
    X_1772 := algebra.projection(C_1770,X_1765);
    X_1784 := mat.packIncrement(X_1771,2);
    X_1709 := mat.packIncrement(X_1784,X_1772);
    X_1773 := algebra.projection(C_1769,X_1762);
    X_1774 := algebra.projection(C_1770,X_1763);
    X_1786 := mat.packIncrement(X_1773,2);
    X_1710 := mat.packIncrement(X_1786,X_1774);
    language.pass(X_1764);
    language.pass(X_1765);
    language.pass(C_1769);
    language.pass(X_1762);
    language.pass(C_1770);
    language.pass(X_1763);
exit X_1795;
    sql.resultSet(X_1728,X_1729,X_1731,X_1732,X_1733,X_1709,X_1710);
end user.SQLanalyze;
#drop table test;
#drop table test1;
#drop table test2;
#drop table test3;
#drop table test4;

# 18:37:29 >  
# 18:37:29 >  "Done."
# 18:37:29 >  


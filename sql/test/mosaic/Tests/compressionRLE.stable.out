stdout of test 'compressionRLE` in directory 'sql/test/mosaic` itself:


# 21:09:36 >  
# 21:09:36 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=30051" "--set" "mapi_usock=/var/tmp/mtest-28373/.s.monetdb.30051" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch1/mk/mosaic//Linux/var/MonetDB/mTests_sql_test_mosaic" "--set" "mal_listing=0" "--set" "embedded_r=yes"
# 21:09:36 >  

# MonetDB 5 server v11.20.0
# This is an unreleased version
# Serving database 'mTests_sql_test_mosaic', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:30051/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-28373/.s.monetdb.30051
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.

# 21:09:37 >  
# 21:09:37 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-28373" "--port=30051"
# 21:09:37 >  

#set optimizer='sequential_pipe';
#drop table tmp3;
#create table tmp3( i integer, b boolean, f real,t timestamp);
#insert into tmp3 values
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
[ 86	]
#alter table tmp3RLE set read only;
#select sum(i) from tmp3RLE;
% sys.L4 # table_name
% L3 # name
% hugeint # type
% 3 # length
[ 270	]
#select sum(f) from tmp3RLE;
% sys.L4 # table_name
% L3 # name
% real # type
% 15 # length
[ 27.104	]
#explain select * from tmp3RLE;
% .explain # table_name
% mal # name
% clob # type
% 93 # length
function user.s14_1():void;
    X_1:void := querylog.define("explain select * from tmp3rle;", "sequential_pipe", 39:int);
    X_22 := bat.new(nil:str);
    X_28 := bat.new(nil:int);
    X_26 := bat.new(nil:int);
    X_25 := bat.new(nil:str);
    X_24 := bat.new(nil:str);
    X_4 := sql.mvc();
    C_103:bat[:oid] := sql.tid(X_4, "sys", "tmp3rle");
    X_5:bat[:oid] := mosaic.decompress(C_103);
    X_18:bat[:timestamp] := sql.bind(X_4, "sys", "tmp3rle", "t", 0:int);
    X_20 := mosaic.projection(X_5, X_18);
    X_15:bat[:flt] := sql.bind(X_4, "sys", "tmp3rle", "f", 0:int);
    X_17 := mosaic.projection(X_5, X_15);
    X_12:bat[:bit] := sql.bind(X_4, "sys", "tmp3rle", "b", 0:int);
    X_14 := mosaic.projection(X_5, X_12);
    X_8:bat[:int] := sql.bind(X_4, "sys", "tmp3rle", "i", 0:int);
    X_11 := mosaic.projection(X_5, X_8);
    X_29 := bat.append(X_22, "sys.tmp3rle");
    X_31 := bat.append(X_24, "i");
    X_32 := bat.append(X_25, "int");
    X_34 := bat.append(X_26, 32:int);
    X_36 := bat.append(X_28, 0:int);
    X_37 := bat.append(X_29, "sys.tmp3rle");
    X_38 := bat.append(X_31, "b");
    X_39 := bat.append(X_32, "boolean");
    X_41 := bat.append(X_34, 1:int);
    X_43 := bat.append(X_36, 0:int);
    X_45 := bat.append(X_37, "sys.tmp3rle");
    X_46 := bat.append(X_38, "f");
    X_47 := bat.append(X_39, "real");
    X_49 := bat.append(X_41, 24:int);
    X_51 := bat.append(X_43, 0:int);
    X_52 := bat.append(X_45, "sys.tmp3rle");
    X_53 := bat.append(X_46, "t");
    X_55 := bat.append(X_47, "timestamp");
    X_57 := bat.append(X_49, 7:int);
    X_59 := bat.append(X_51, 0:int);
    sql.resultSet(X_52, X_53, X_55, X_57, X_59, X_11, X_14, X_17, X_20);
end user.s14_1;
#inline               actions= 0 time=1 usec 
#remap                actions= 0 time=3 usec 
#costmodel            actions= 1 time=2 usec 
#coercion             actions= 0 time=2 usec 
#evaluate             actions= 0 time=3 usec 
#emptybind            actions= 0 time=8 usec 
#aliases              actions= 0 time=6 usec 
#mergetable           actions= 0 time=35 usec 
#deadcode             actions= 0 time=7 usec 
#aliases              actions= 0 time=5 usec 
#constants            actions= 2 time=9 usec 
#commonTerms          actions= 0 time=7 usec 
#projectionpath       actions= 0 time=5 usec 
#reorder              actions= 1 time=30 usec 
#deadcode             actions= 0 time=7 usec 
#reduce               actions=19 time=8 usec 
#matpack              actions= 0 time=2 usec 
#multiplex            actions= 0 time=3 usec 
#profiler             actions= 1 time=3 usec 
#candidates           actions= 1 time=1 usec 
#garbagecollector     actions= 1 time=18 usec 
#total                actions= 1 time=274 usec 
#alter table tmp3RLE alter column i set storage 'runlength';
#select * from mosaic.layout('sys','tmp3RLE','i') limit 25;
% .L4,	.L4,	.L4,	.L4,	.L4 # table_name
% technique,	count,	inputsize,	outputsize,	properties # name
% clob,	bigint,	bigint,	bigint,	clob # type
% 0,	1,	1,	1,	0 # length
#alter table tmp3RLE alter column b set storage 'runlength';
#select * from mosaic.layout('sys','tmp3RLE','b') limit 25;
% .L4,	.L4,	.L4,	.L4,	.L4 # table_name
% technique,	count,	inputsize,	outputsize,	properties # name
% clob,	bigint,	bigint,	bigint,	clob # type
% 0,	1,	1,	1,	0 # length
#alter table tmp3RLE alter column f set storage 'runlength';
#select * from mosaic.layout('sys','tmp3RLE','f') limit 25;
% .L4,	.L4,	.L4,	.L4,	.L4 # table_name
% technique,	count,	inputsize,	outputsize,	properties # name
% clob,	bigint,	bigint,	bigint,	clob # type
% 0,	1,	1,	1,	0 # length
#alter table tmp3RLE alter column t set storage 'runlength';
#select * from mosaic.layout('sys','tmp3RLE','t') limit 25;
% .L4,	.L4,	.L4,	.L4,	.L4 # table_name
% technique,	count,	inputsize,	outputsize,	properties # name
% clob,	bigint,	bigint,	bigint,	clob # type
% 0,	1,	1,	1,	0 # length
#explain select i from tmp3RLE;
% .explain # table_name
% mal # name
% clob # type
% 93 # length
function user.s32_1():void;
    X_1:void := querylog.define("explain select i from tmp3rle;", "sequential_pipe", 18:int);
    X_13 := bat.new(nil:str);
    X_19 := bat.new(nil:int);
    X_17 := bat.new(nil:int);
    X_16 := bat.new(nil:str);
    X_15 := bat.new(nil:str);
    X_4 := sql.mvc();
    C_71:bat[:oid] := sql.tid(X_4, "sys", "tmp3rle");
    X_5:bat[:oid] := mosaic.decompress(C_71);
    X_8:bat[:int] := sql.bind(X_4, "sys", "tmp3rle", "i", 0:int);
    X_11 := mosaic.projection(X_5, X_8);
    X_20 := bat.append(X_13, "sys.tmp3rle");
    X_22 := bat.append(X_15, "i");
    X_23 := bat.append(X_16, "int");
    X_25 := bat.append(X_17, 32:int);
    X_27 := bat.append(X_19, 0:int);
    sql.resultSet(X_20, X_22, X_23, X_25, X_27, X_11);
end user.s32_1;
#inline               actions= 0 time=0 usec 
#remap                actions= 0 time=2 usec 
#costmodel            actions= 1 time=1 usec 
#coercion             actions= 0 time=1 usec 
#evaluate             actions= 0 time=2 usec 
#emptybind            actions= 0 time=6 usec 
#aliases              actions= 0 time=4 usec 
#mergetable           actions= 0 time=23 usec 
#deadcode             actions= 0 time=5 usec 
#aliases              actions= 0 time=3 usec 
#constants            actions= 0 time=4 usec 
#commonTerms          actions= 0 time=3 usec 
#projectionpath       actions= 0 time=3 usec 
#reorder              actions= 1 time=20 usec 
#deadcode             actions= 0 time=5 usec 
#reduce               actions=17 time=6 usec 
#matpack              actions= 0 time=2 usec 
#multiplex            actions= 0 time=2 usec 
#profiler             actions= 1 time=2 usec 
#candidates           actions= 1 time=0 usec 
#garbagecollector     actions= 1 time=12 usec 
#total                actions= 1 time=203 usec 
#explain select b from tmp3RLE;
% .explain # table_name
% mal # name
% clob # type
% 93 # length
function user.s34_1():void;
    X_1:void := querylog.define("explain select b from tmp3rle;", "sequential_pipe", 18:int);
    X_13 := bat.new(nil:str);
    X_19 := bat.new(nil:int);
    X_17 := bat.new(nil:int);
    X_16 := bat.new(nil:str);
    X_15 := bat.new(nil:str);
    X_4 := sql.mvc();
    C_71:bat[:oid] := sql.tid(X_4, "sys", "tmp3rle");
    X_5:bat[:oid] := mosaic.decompress(C_71);
    X_8:bat[:bit] := sql.bind(X_4, "sys", "tmp3rle", "b", 0:int);
    X_11 := mosaic.projection(X_5, X_8);
    X_20 := bat.append(X_13, "sys.tmp3rle");
    X_22 := bat.append(X_15, "b");
    X_23 := bat.append(X_16, "boolean");
    X_25 := bat.append(X_17, 1:int);
    X_27 := bat.append(X_19, 0:int);
    sql.resultSet(X_20, X_22, X_23, X_25, X_27, X_11);
end user.s34_1;
#inline               actions= 0 time=0 usec 
#remap                actions= 0 time=2 usec 
#costmodel            actions= 1 time=0 usec 
#coercion             actions= 0 time=1 usec 
#evaluate             actions= 0 time=2 usec 
#emptybind            actions= 0 time=6 usec 
#aliases              actions= 0 time=4 usec 
#mergetable           actions= 0 time=23 usec 
#deadcode             actions= 0 time=5 usec 
#aliases              actions= 0 time=3 usec 
#constants            actions= 0 time=3 usec 
#commonTerms          actions= 0 time=4 usec 
#projectionpath       actions= 0 time=4 usec 
#reorder              actions= 1 time=19 usec 
#deadcode             actions= 0 time=4 usec 
#reduce               actions=17 time=6 usec 
#matpack              actions= 0 time=2 usec 
#multiplex            actions= 0 time=2 usec 
#profiler             actions= 1 time=2 usec 
#candidates           actions= 1 time=0 usec 
#garbagecollector     actions= 1 time=11 usec 
#total                actions= 1 time=201 usec 
#explain select f from tmp3RLE;
% .explain # table_name
% mal # name
% clob # type
% 93 # length
function user.s36_1():void;
    X_1:void := querylog.define("explain select f from tmp3rle;", "sequential_pipe", 18:int);
    X_13 := bat.new(nil:str);
    X_19 := bat.new(nil:int);
    X_17 := bat.new(nil:int);
    X_16 := bat.new(nil:str);
    X_15 := bat.new(nil:str);
    X_4 := sql.mvc();
    C_71:bat[:oid] := sql.tid(X_4, "sys", "tmp3rle");
    X_5:bat[:oid] := mosaic.decompress(C_71);
    X_8:bat[:flt] := sql.bind(X_4, "sys", "tmp3rle", "f", 0:int);
    X_11 := mosaic.projection(X_5, X_8);
    X_20 := bat.append(X_13, "sys.tmp3rle");
    X_22 := bat.append(X_15, "f");
    X_23 := bat.append(X_16, "real");
    X_25 := bat.append(X_17, 24:int);
    X_27 := bat.append(X_19, 0:int);
    sql.resultSet(X_20, X_22, X_23, X_25, X_27, X_11);
end user.s36_1;
#inline               actions= 0 time=1 usec 
#remap                actions= 0 time=2 usec 
#costmodel            actions= 1 time=1 usec 
#coercion             actions= 0 time=2 usec 
#evaluate             actions= 0 time=3 usec 
#emptybind            actions= 0 time=5 usec 
#aliases              actions= 0 time=4 usec 
#mergetable           actions= 0 time=23 usec 
#deadcode             actions= 0 time=5 usec 
#aliases              actions= 0 time=3 usec 
#constants            actions= 0 time=3 usec 
#commonTerms          actions= 0 time=4 usec 
#projectionpath       actions= 0 time=3 usec 
#reorder              actions= 1 time=20 usec 
#deadcode             actions= 0 time=4 usec 
#reduce               actions=17 time=6 usec 
#matpack              actions= 0 time=2 usec 
#multiplex            actions= 0 time=2 usec 
#profiler             actions= 1 time=1 usec 
#candidates           actions= 1 time=0 usec 
#garbagecollector     actions= 1 time=12 usec 
#total                actions= 1 time=209 usec 
#explain select t from tmp3RLE;
% .explain # table_name
% mal # name
% clob # type
% 93 # length
function user.s38_1():void;
    X_1:void := querylog.define("explain select t from tmp3rle;", "sequential_pipe", 18:int);
    X_13 := bat.new(nil:str);
    X_19 := bat.new(nil:int);
    X_17 := bat.new(nil:int);
    X_16 := bat.new(nil:str);
    X_15 := bat.new(nil:str);
    X_4 := sql.mvc();
    C_71:bat[:oid] := sql.tid(X_4, "sys", "tmp3rle");
    X_5:bat[:oid] := mosaic.decompress(C_71);
    X_8:bat[:timestamp] := sql.bind(X_4, "sys", "tmp3rle", "t", 0:int);
    X_11 := mosaic.projection(X_5, X_8);
    X_20 := bat.append(X_13, "sys.tmp3rle");
    X_22 := bat.append(X_15, "t");
    X_23 := bat.append(X_16, "timestamp");
    X_25 := bat.append(X_17, 7:int);
    X_27 := bat.append(X_19, 0:int);
    sql.resultSet(X_20, X_22, X_23, X_25, X_27, X_11);
end user.s38_1;
#inline               actions= 0 time=0 usec 
#remap                actions= 0 time=2 usec 
#costmodel            actions= 1 time=1 usec 
#coercion             actions= 0 time=1 usec 
#evaluate             actions= 0 time=2 usec 
#emptybind            actions= 0 time=6 usec 
#aliases              actions= 0 time=4 usec 
#mergetable           actions= 0 time=23 usec 
#deadcode             actions= 0 time=5 usec 
#aliases              actions= 0 time=4 usec 
#constants            actions= 0 time=3 usec 
#commonTerms          actions= 0 time=4 usec 
#projectionpath       actions= 0 time=3 usec 
#reorder              actions= 1 time=19 usec 
#deadcode             actions= 0 time=5 usec 
#reduce               actions=17 time=6 usec 
#matpack              actions= 0 time=2 usec 
#multiplex            actions= 0 time=2 usec 
#profiler             actions= 1 time=2 usec 
#candidates           actions= 1 time=0 usec 
#garbagecollector     actions= 1 time=13 usec 
#total                actions= 1 time=203 usec 
#select * from tmp3RLE;
% sys.tmp3rle,	sys.tmp3rle,	sys.tmp3rle,	sys.tmp3rle # table_name
% i,	b,	f,	t # name
% int,	boolean,	real,	timestamp # type
% 2,	5,	15,	26 # length
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 2,	false,	0.314,	2014-08-23 11:34:54.000000	]
[ 3,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 2,	false,	0.314,	2014-08-23 11:34:54.000000	]
[ 3,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 2,	false,	0.314,	2014-08-23 11:34:54.000000	]
[ 3,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 0,	false,	0.316,	2014-08-23 11:34:54.000000	]
[ 5,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 6,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 7,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 8,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 9,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 10,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 2,	false,	0.314,	2014-08-23 11:34:54.000000	]
[ 3,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 2,	false,	0.314,	2014-08-23 11:34:54.000000	]
[ 3,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 2,	false,	0.314,	2014-08-23 11:34:54.000000	]
[ 3,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 0,	false,	0.316,	2014-08-23 11:34:54.000000	]
[ 5,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 6,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 7,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 8,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 9,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 10,	false,	0.317,	2014-08-23 11:34:54.000000	]
#select sum(i) from tmp3RLE;
% sys.L4 # table_name
% L3 # name
% hugeint # type
% 3 # length
[ 270	]
#select sum(f) from tmp3RLE;
% sys.L4 # table_name
% L3 # name
% real # type
% 15 # length
[ 27.104	]

# 21:09:37 >  
# 21:09:37 >  "Done."
# 21:09:37 >  


stdout of test 'compressionRLE` in directory 'sql/test/mosaic` itself:


# 21:09:36 >  
# 21:09:36 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=30051" "--set" "mapi_usock=/var/tmp/mtest-28373/.s.monetdb.30051" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/export/scratch1/mk/mosaic//Linux/var/MonetDB/mTests_sql_test_mosaic" "--set" "mal_listing=0" "--set" "embedded_r=yes"
# 21:09:36 >  

# MonetDB 5 server v11.20.0
# This is an unreleased version
# Serving database 'mTests_sql_test_mosaic', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.591 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2014 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.ins.cwi.nl:30051/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-28373/.s.monetdb.30051
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/R   module loaded

Ready.

# 21:09:37 >  
# 21:09:37 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-28373" "--port=30051"
# 21:09:37 >  

#set optimizer='sequential_pipe';
#drop table tmp3;
#create table tmp3( i integer, b boolean, f real,t timestamp);
#insert into tmp3 values
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
#(1, true, 0.314,'2014-08-23 11:34:54.000000'),
[ 86	]
#alter table tmp3RLE set read only;
#select sum(i) from tmp3RLE;
% sys.L4 # table_name
% L3 # name
% hugeint # type
% 3 # length
[ 270	]
#select sum(f) from tmp3RLE;
% sys.L4 # table_name
% L3 # name
% real # type
% 15 # length
[ 27.104	]
#explain select * from tmp3RLE;
% .explain # table_name
% mal # name
% clob # type
% 92 # length
function user.s14_1():void;
    X_59:void := querylog.define("explain select * from tmp3rle;","sequential_pipe",40:int);
    X_21 := bat.new(nil:str);
    X_28 := bat.append(X_21,"sys.tmp3rle");
    X_36 := bat.append(X_28,"sys.tmp3rle");
    X_44 := bat.append(X_36,"sys.tmp3rle");
    X_51 := bat.append(X_44,"sys.tmp3rle");
    X_23 := bat.new(nil:str);
    X_30 := bat.append(X_23,"i");
    X_37 := bat.append(X_30,"b");
    X_45 := bat.append(X_37,"f");
    X_52 := bat.append(X_45,"t");
    X_24 := bat.new(nil:str);
    X_31 := bat.append(X_24,"int");
    X_38 := bat.append(X_31,"boolean");
    X_46 := bat.append(X_38,"real");
    X_54 := bat.append(X_46,"timestamp");
    X_25 := bat.new(nil:int);
    X_33 := bat.append(X_25,32:int);
    X_40 := bat.append(X_33,1:int);
    X_48 := bat.append(X_40,24:int);
    X_56 := bat.append(X_48,7:int);
    X_27 := bat.new(nil:int);
    X_35 := bat.append(X_27,0:int);
    X_42 := bat.append(X_35,0:int);
    X_50 := bat.append(X_42,0:int);
    X_58 := bat.append(X_50,0:int);
    X_3 := sql.mvc();
    C_4:bat[:oid] := sql.tid(X_3,"sys","tmp3rle");
    X_7:bat[:int] := sql.bind(X_3,"sys","tmp3rle","i",0:int);
    X_10 := mosaic.projection(C_4,X_7);
    X_11:bat[:bit] := sql.bind(X_3,"sys","tmp3rle","b",0:int);
    X_13 := mosaic.projection(C_4,X_11);
    X_14:bat[:flt] := sql.bind(X_3,"sys","tmp3rle","f",0:int);
    X_16 := mosaic.projection(C_4,X_14);
    X_17:bat[:timestamp] := sql.bind(X_3,"sys","tmp3rle","t",0:int);
    X_19 := mosaic.projection(C_4,X_17);
# querylog.define("explain select * from tmp3rle;","sequential_pipe")
    sql.resultSet(X_51,X_52,X_54,X_56,X_58,X_10,X_13,X_16,X_19);
end user.s14_1;
#inline               actions= 0 time=1 usec 
#remap                actions= 0 time=3 usec 
#costmodel            actions= 1 time=2 usec 
#coercion             actions= 0 time=2 usec 
#evaluate             actions= 0 time=3 usec 
#emptybind            actions= 0 time=8 usec 
#aliases              actions= 0 time=6 usec 
#mergetable           actions= 0 time=35 usec 
#deadcode             actions= 0 time=7 usec 
#aliases              actions= 0 time=5 usec 
#constants            actions= 2 time=9 usec 
#commonTerms          actions= 0 time=7 usec 
#projectionpath       actions= 0 time=5 usec 
#reorder              actions= 1 time=30 usec 
#deadcode             actions= 0 time=7 usec 
#reduce               actions=19 time=8 usec 
#matpack              actions= 0 time=2 usec 
#multiplex            actions= 0 time=3 usec 
#profiler             actions= 1 time=3 usec 
#candidates           actions= 1 time=1 usec 
#garbagecollector     actions= 1 time=18 usec 
#total                actions= 1 time=274 usec 
#alter table tmp3RLE alter column i set storage 'runlength';
#alter table tmp3RLE alter column b set storage 'runlength';
#alter table tmp3RLE alter column f set storage 'runlength';
#alter table tmp3RLE alter column t set storage 'runlength';
#explain select i from tmp3RLE;
% .explain # table_name
% mal # name
% clob # type
% 92 # length
function user.s24_1():void;
    X_27:void := querylog.define("explain select i from tmp3rle;","sequential_pipe",19:int);
    X_12 := bat.new(nil:str);
    X_19 := bat.append(X_12,"sys.tmp3rle");
    X_14 := bat.new(nil:str);
    X_21 := bat.append(X_14,"i");
    X_15 := bat.new(nil:str);
    X_22 := bat.append(X_15,"int");
    X_16 := bat.new(nil:int);
    X_24 := bat.append(X_16,32:int);
    X_18 := bat.new(nil:int);
    X_26 := bat.append(X_18,0:int);
    X_3 := sql.mvc();
    C_4:bat[:oid] := sql.tid(X_3,"sys","tmp3rle");
    X_7:bat[:int] := sql.bind(X_3,"sys","tmp3rle","i",0:int);
    X_10 := mosaic.projection(C_4,X_7);
# querylog.define("explain select i from tmp3rle;","sequential_pipe")
    sql.resultSet(X_19,X_21,X_22,X_24,X_26,X_10);
end user.s24_1;
#inline               actions= 0 time=1 usec 
#remap                actions= 0 time=2 usec 
#costmodel            actions= 1 time=1 usec 
#coercion             actions= 0 time=1 usec 
#evaluate             actions= 0 time=2 usec 
#emptybind            actions= 0 time=6 usec 
#aliases              actions= 0 time=4 usec 
#mergetable           actions= 0 time=23 usec 
#deadcode             actions= 0 time=5 usec 
#aliases              actions= 0 time=3 usec 
#constants            actions= 0 time=4 usec 
#commonTerms          actions= 0 time=3 usec 
#projectionpath       actions= 0 time=3 usec 
#reorder              actions= 1 time=20 usec 
#deadcode             actions= 0 time=5 usec 
#reduce               actions=17 time=6 usec 
#matpack              actions= 0 time=2 usec 
#multiplex            actions= 0 time=2 usec 
#profiler             actions= 1 time=2 usec 
#candidates           actions= 1 time=0 usec 
#garbagecollector     actions= 1 time=12 usec 
#total                actions= 1 time=203 usec 
#explain select b from tmp3RLE;
% .explain # table_name
% mal # name
% clob # type
% 92 # length
function user.s26_1():void;
    X_27:void := querylog.define("explain select b from tmp3rle;","sequential_pipe",19:int);
    X_12 := bat.new(nil:str);
    X_19 := bat.append(X_12,"sys.tmp3rle");
    X_14 := bat.new(nil:str);
    X_21 := bat.append(X_14,"b");
    X_15 := bat.new(nil:str);
    X_22 := bat.append(X_15,"boolean");
    X_16 := bat.new(nil:int);
    X_24 := bat.append(X_16,1:int);
    X_18 := bat.new(nil:int);
    X_26 := bat.append(X_18,0:int);
    X_3 := sql.mvc();
    C_4:bat[:oid] := sql.tid(X_3,"sys","tmp3rle");
    X_7:bat[:bit] := sql.bind(X_3,"sys","tmp3rle","b",0:int);
    X_10 := mosaic.projection(C_4,X_7);
# querylog.define("explain select b from tmp3rle;","sequential_pipe")
    sql.resultSet(X_19,X_21,X_22,X_24,X_26,X_10);
end user.s26_1;
#inline               actions= 0 time=1 usec 
#remap                actions= 0 time=3 usec 
#costmodel            actions= 1 time=1 usec 
#coercion             actions= 0 time=1 usec 
#evaluate             actions= 0 time=2 usec 
#emptybind            actions= 0 time=6 usec 
#aliases              actions= 0 time=4 usec 
#mergetable           actions= 0 time=23 usec 
#deadcode             actions= 0 time=5 usec 
#aliases              actions= 0 time=3 usec 
#constants            actions= 0 time=3 usec 
#commonTerms          actions= 0 time=4 usec 
#projectionpath       actions= 0 time=4 usec 
#reorder              actions= 1 time=19 usec 
#deadcode             actions= 0 time=4 usec 
#reduce               actions=17 time=6 usec 
#matpack              actions= 0 time=2 usec 
#multiplex            actions= 0 time=2 usec 
#profiler             actions= 1 time=2 usec 
#candidates           actions= 1 time=0 usec 
#garbagecollector     actions= 1 time=11 usec 
#total                actions= 1 time=201 usec 
#explain select f from tmp3RLE;
% .explain # table_name
% mal # name
% clob # type
% 92 # length
function user.s28_1():void;
    X_27:void := querylog.define("explain select f from tmp3rle;","sequential_pipe",19:int);
    X_12 := bat.new(nil:str);
    X_19 := bat.append(X_12,"sys.tmp3rle");
    X_14 := bat.new(nil:str);
    X_21 := bat.append(X_14,"f");
    X_15 := bat.new(nil:str);
    X_22 := bat.append(X_15,"real");
    X_16 := bat.new(nil:int);
    X_24 := bat.append(X_16,24:int);
    X_18 := bat.new(nil:int);
    X_26 := bat.append(X_18,0:int);
    X_3 := sql.mvc();
    C_4:bat[:oid] := sql.tid(X_3,"sys","tmp3rle");
    X_7:bat[:flt] := sql.bind(X_3,"sys","tmp3rle","f",0:int);
    X_10 := mosaic.projection(C_4,X_7);
# querylog.define("explain select f from tmp3rle;","sequential_pipe")
    sql.resultSet(X_19,X_21,X_22,X_24,X_26,X_10);
end user.s28_1;
#inline               actions= 0 time=0 usec 
#remap                actions= 0 time=2 usec 
#costmodel            actions= 1 time=1 usec 
#coercion             actions= 0 time=2 usec 
#evaluate             actions= 0 time=3 usec 
#emptybind            actions= 0 time=5 usec 
#aliases              actions= 0 time=4 usec 
#mergetable           actions= 0 time=23 usec 
#deadcode             actions= 0 time=5 usec 
#aliases              actions= 0 time=3 usec 
#constants            actions= 0 time=3 usec 
#commonTerms          actions= 0 time=4 usec 
#projectionpath       actions= 0 time=3 usec 
#reorder              actions= 1 time=20 usec 
#deadcode             actions= 0 time=4 usec 
#reduce               actions=17 time=6 usec 
#matpack              actions= 0 time=2 usec 
#multiplex            actions= 0 time=2 usec 
#profiler             actions= 1 time=1 usec 
#candidates           actions= 1 time=0 usec 
#garbagecollector     actions= 1 time=12 usec 
#total                actions= 1 time=209 usec 
#explain select t from tmp3RLE;
% .explain # table_name
% mal # name
% clob # type
% 92 # length
function user.s30_1():void;
    X_27:void := querylog.define("explain select t from tmp3rle;","sequential_pipe",19:int);
    X_12 := bat.new(nil:str);
    X_19 := bat.append(X_12,"sys.tmp3rle");
    X_14 := bat.new(nil:str);
    X_21 := bat.append(X_14,"t");
    X_15 := bat.new(nil:str);
    X_22 := bat.append(X_15,"timestamp");
    X_16 := bat.new(nil:int);
    X_24 := bat.append(X_16,7:int);
    X_18 := bat.new(nil:int);
    X_26 := bat.append(X_18,0:int);
    X_3 := sql.mvc();
    C_4:bat[:oid] := sql.tid(X_3,"sys","tmp3rle");
    X_7:bat[:timestamp] := sql.bind(X_3,"sys","tmp3rle","t",0:int);
    X_10 := mosaic.projection(C_4,X_7);
# querylog.define("explain select t from tmp3rle;","sequential_pipe")
    sql.resultSet(X_19,X_21,X_22,X_24,X_26,X_10);
end user.s30_1;
#inline               actions= 0 time=0 usec 
#remap                actions= 0 time=2 usec 
#costmodel            actions= 1 time=1 usec 
#coercion             actions= 0 time=1 usec 
#evaluate             actions= 0 time=2 usec 
#emptybind            actions= 0 time=6 usec 
#aliases              actions= 0 time=4 usec 
#mergetable           actions= 0 time=23 usec 
#deadcode             actions= 0 time=5 usec 
#aliases              actions= 0 time=4 usec 
#constants            actions= 0 time=3 usec 
#commonTerms          actions= 0 time=4 usec 
#projectionpath       actions= 0 time=3 usec 
#reorder              actions= 1 time=19 usec 
#deadcode             actions= 0 time=5 usec 
#reduce               actions=17 time=6 usec 
#matpack              actions= 0 time=2 usec 
#multiplex            actions= 0 time=2 usec 
#profiler             actions= 1 time=2 usec 
#candidates           actions= 1 time=0 usec 
#garbagecollector     actions= 1 time=13 usec 
#total                actions= 1 time=203 usec 
#select * from tmp3RLE;
% sys.tmp3rle,	sys.tmp3rle,	sys.tmp3rle,	sys.tmp3rle # table_name
% i,	b,	f,	t # name
% int,	boolean,	real,	timestamp # type
% 2,	5,	15,	26 # length
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 2,	false,	0.314,	2014-08-23 11:34:54.000000	]
[ 3,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 2,	false,	0.314,	2014-08-23 11:34:54.000000	]
[ 3,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 2,	false,	0.314,	2014-08-23 11:34:54.000000	]
[ 3,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 0,	false,	0.316,	2014-08-23 11:34:54.000000	]
[ 5,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 6,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 7,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 8,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 9,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 10,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 1,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 2,	false,	0.314,	2014-08-23 11:34:54.000000	]
[ 3,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 2,	false,	0.314,	2014-08-23 11:34:54.000000	]
[ 3,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 2,	false,	0.314,	2014-08-23 11:34:54.000000	]
[ 3,	true,	0.314,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 4,	true,	0.316,	2014-08-23 11:34:54.000000	]
[ 0,	false,	0.316,	2014-08-23 11:34:54.000000	]
[ 5,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 6,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 7,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 8,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 9,	false,	0.317,	2014-08-23 11:34:54.000000	]
[ 10,	false,	0.317,	2014-08-23 11:34:54.000000	]
#select sum(i) from tmp3RLE;
% sys.L4 # table_name
% L3 # name
% hugeint # type
% 3 # length
[ 270	]
#select sum(f) from tmp3RLE;
% sys.L4 # table_name
% L3 # name
% real # type
% 15 # length
[ 27.104	]

# 21:09:37 >  
# 21:09:37 >  "Done."
# 21:09:37 >  


# test various error conditions

# negative weights
START TRANSACTION;

CREATE TABLE vals(w DOUBLE, value INTEGER);
INSERT INTO vals VALUES (1, 100), (-1, 50);

SELECT * FROM vals SAMPLE 1 USING WEIGHTS w;

ROLLBACK;

# fewer weights are non-zero than size of sample
START TRANSACTION;

CREATE TABLE vals(w DOUBLE, value INTEGER);
INSERT INTO vals VALUES (1, 100), (0, 50);

SELECT * FROM vals SAMPLE 2 USING WEIGHTS w;

ROLLBACK;

# string weights
START TRANSACTION;

CREATE TABLE vals(w STRING, value INTEGER);
INSERT INTO vals VALUES ('#1 sample', 100), ('#2 sample', 50);

SELECT * FROM vals SAMPLE 1 USING WEIGHTS w;

ROLLBACK;

# sample size bigger than amount of elements
START TRANSACTION;

CREATE TABLE vals(w DOUBLE, value INTEGER);
INSERT INTO vals VALUES (1, 100), (1, 50);

SELECT * FROM vals SAMPLE 10 USING WEIGHTS w;

ROLLBACK;

# weight overflow
START TRANSACTION;

CREATE TABLE vals(w DOUBLE, value INTEGER);
INSERT INTO vals VALUES (1.7976931348623157E+306, 100), (0, 50);

SELECT * FROM vals SAMPLE 1 USING WEIGHTS w;

ROLLBACK;

# intigus maximus
START TRANSACTION;

CREATE TABLE vals(w DOUBLE, value INTEGER);
INSERT INTO vals VALUES (1, 100), (0, 50);


SELECT * FROM vals SAMPLE 18446744073709551617 USING WEIGHTS w;

ROLLBACK;

# biggus samplus
START TRANSACTION;

CREATE TABLE vals(w DOUBLE, value INTEGER);
INSERT INTO vals VALUES (1, 100), (0, 50);


SELECT * FROM vals SAMPLE 2147483648 USING WEIGHTS w;

ROLLBACK;

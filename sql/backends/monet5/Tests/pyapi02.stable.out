stdout of test 'pyapi02` in directory 'sql/backends/monet5` itself:


# 16:11:24 >  
# 16:11:24 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=33314" "--set" "mapi_usock=/var/tmp/mtest-9490/.s.monetdb.33314" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/Users/hannes/monetdb-install/var/MonetDB/mTests_sql_backends_monet5" "--set" "mal_listing=0" "--set" "embedded_r=true" "--set" "embedded_py=true"
# 16:11:24 >  

# MonetDB 5 server v11.20.0
# This is an unreleased version
# Serving database 'mTests_sql_backends_monet5', using 4 threads
# Compiled for x86_64-apple-darwin14.3.0/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 16.000 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://dakar.da.cwi.nl:33314/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-9490/.s.monetdb.33314
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/Python module loaded
# MonetDB/R   module loaded

Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_temporal.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 39_analytics.sql
# loading sql script: 39_analytics_hge.sql
# loading sql script: 40_geom.sql
# loading sql script: 40_json.sql
# loading sql script: 40_json_hge.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_gsl.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql
Loading data from the database into Python.
- Loading a BAT of type INT (5)
- Loading a BAT of type INT (5)
- Loading a scalar of type INT (5)
Formatting python code.
Executing python code.
[1 2 3 4]
[4 3 2 1]
[20 40 60 80]
Returning result.
Returning a bat of type INT (5)
Returning a bat of size 4.
Cleaning up.

# 16:11:24 >  
# 16:11:24 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-9490" "--port=33314"
# 16:11:24 >  

#START TRANSACTION;
#CREATE TABLE rval(i integer,j integer);
#INSERT INTO rval VALUES (1,4), (2,3), (3,2), (4,1);
[ 4	]
#CREATE FUNCTION pyapi02(i integer,j integer,z integer) returns integer
#language P 
#{
#	print(i);
#	print(j);
#	x = i * sum(j) * z;
#	print(x)
#	return(x);
#};
#SELECT pyapi02(i,j,2) as r02 FROM rval;
% sys.L # table_name
% r02 # name
% int # type
% 2 # length
[ 20	]
[ 40	]
[ 60	]
[ 80	]
#DROP FUNCTION pyapi02;
#DROP TABLE rval;
#ROLLBACK;

# 16:11:25 >  
# 16:11:25 >  "Done."
# 16:11:25 >  


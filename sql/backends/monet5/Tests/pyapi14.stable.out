stdout of test 'pyapi14` in directory 'sql/backends/monet5` itself:


# 12:53:38 >  
# 12:53:38 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=32216" "--set" "mapi_usock=/var/tmp/mtest-21856/.s.monetdb.32216" "--set" "monet_prompt=" "--forcemito" "--set" "mal_listing=2" "--dbpath=/home/mytherin/opt/var/mTests_sql_backends_monet5" "--set" "mal_listing=0" "--set" "embedded_r=true" "--set" "embedded_py=true"
# 12:53:38 >  

# MonetDB 5 server v11.22.0
# This is an unreleased version
# Serving database 'mTests_sql_backends_monet5', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 7.684 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2015 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://mytherin-N750JV:32216/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-21856/.s.monetdb.32216
# Start processing logs sql/sql_logs version 52200
# Finished processing logs sql/sql_logs
# MonetDB/SQL module loaded
# MonetDB/Python module loaded
# MonetDB/R   module loaded

Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_temporal.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 24_zorder.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 27_rejects.sql
# loading sql script: 39_analytics.sql
# loading sql script: 39_analytics_hge.sql
# loading sql script: 40_json.sql
# loading sql script: 40_json_hge.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 51_sys_schema_extension.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql

# 12:53:39 >  
# 12:53:39 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-21856" "--port=32216"
# 12:53:39 >  

#START TRANSACTION;
#CREATE TABLE rval(i integer,j integer);
#INSERT INTO rval VALUES (1,4), (2,3), (3,2), (4,1);
[ 4	]
#CREATE FUNCTION pyapi14_function_format() returns table(s string) language P
#{
#	# helper function, concat a list of constants used together with the type of the constant to a structure like (int:20)(int:33)(str:test)
#	def consts_to_string(consts):
#		result = ""
#		for const in consts:
#			result = result + '(' + str(type(const).__name__) + ':' + str(const) + ')'
#		return result
#	# helper function, concat names with a comma between them
#	def names_to_string(names):
#		result = ""
#		for name in names:
#			result = result + name + ','
#SELECT * FROM pyapi14_function_format();
% . # table_name
% s # name
% clob # type
% 460 # length
[ "2@2@2@83@\\x7c\\x00\\x00\\x7c\\x01\\x00\\x14\\x53@(NoneType:None)@@a,b,@@@<string>@myfun@40@\\x00\\x01@"	]
[ "2@2@2@83@\\x7c\\x00\\x00\\x64\\x01\\x00\\x14\\x7c\\x01\\x00\\x17\\x53@(NoneType:None)(int:20)@@a,b,@@@<string>@myfun2@42@\\x00\\x01@"	]
[ "2@3@3@83@\\x64\\x01\\x00\\x64\\x00\\x00\\x6c\\x00\\x00\\x7d\\x02\\x00\\x74\\x01\\x00\\x6a\\x02\\x00\\x7c\\x00\\x00\\x7c\\x01\\x00\\x83\\x02\\x00\\x53@(NoneType:None)(int:-1)@math,numpy,power,@a,b,math,@@@<string>@myfun3@44@\\x00\\x01\\x0c\\x01@"	]
[ "2@3@3@83@\\x64\\x01\\x00\\x84\\x00\\x00\\x7d\\x02\\x00\\x7c\\x02\\x00\\x7c\\x00\\x00\\x7c\\x01\\x00\\x83\\x02\\x00\\x53@(NoneType:None)(code:{@2@2@2@83@\\x7c\\x00\\x00\\x7c\\x01\\x00\\x14\\x53@(NoneType:None)@@a,b,@@@<string>@mult@48@\\x00\\x01@})@@a,b,mult,@@@<string>@myfun4@47@\\x00\\x01\\x09\\x02@"	]
[ "2@3@3@83@\\x64\\x01\\x00\\x84\\x00\\x00\\x7d\\x02\\x00\\x7c\\x02\\x00\\x7c\\x00\\x00\\x7c\\x01\\x00\\x83\\x02\\x00\\x53@(NoneType:None)(code:{@2@3@2@83@\\x64\\x01\\x00\\x84\\x00\\x00\\x7d\\x02\\x00\\x7c\\x02\\x00\\x7c\\x00\\x00\\x83\\x01\\x00\\x7c\\x01\\x00\\x14\\x53@(NoneType:None)(code:{@1@1@2@83@\\x7c\\x00\\x00\\x64\\x01\\x00\\x14\\x53@(NoneType:None)(int:20)@@a,@@@<string>@timestwenty@53@\\x00\\x01@})@@a,b,timestwenty,@@@<string>@mult@52@\\x00\\x01\\x09\\x02@})@@a,b,mult,@@@<string>@myfun5@51@\\x00\\x01\\x09\\x04@"	]
#CREATE FUNCTION pyapi14(a integer, b integer) returns integer language P {@2@2@2@67@|\x00\x00|\x01\x00\x14S@(NoneType:None)@@a,b,@@@<stdin>@myfun@40@\x00\x01@};
#SELECT pyapi14(i,j) FROM rval;
% sys.L # table_name
% pyapi14_i # name
% int # type
% 1 # length
[ 4	]
[ 6	]
[ 6	]
[ 4	]
#DROP FUNCTION pyapi14;
#CREATE FUNCTION pyapi14(a integer, b integer) returns integer language P {@2@2@2@83@\\x7c\\x00\\x00\\x64\\x01\\x00\\x14\\x7c\\x01\\x00\\x17\\x53@(NoneType:None)(int:20)@@a,b,@@@<string>@myfun2@36@\\x00\\x01@};
#SELECT pyapi14(i,j) FROM rval;
% sys.L # table_name
% pyapi14_i # name
% int # type
% 2 # length
[ 24	]
[ 43	]
[ 62	]
[ 81	]
#DROP FUNCTION pyapi14;
#CREATE FUNCTION pyapi14(a integer, b integer) returns integer language P {@2@3@3@83@\\x64\\x01\\x00\\x64\\x00\\x00\\x6c\\x00\\x00\\x7d\\x02\\x00\\x74\\x01\\x00\\x6a\\x02\\x00\\x7c\\x00\\x00\\x7c\\x01\\x00\\x83\\x02\\x00\\x53@(NoneType:None)(int:-1)@math,numpy,power,@a,b,math,@@@<string>@myfun3@38@\\x00\\x01\\x0c\\x01@};
#SELECT pyapi14(i,j) FROM rval;
% sys.L # table_name
% pyapi14_i # name
% int # type
% 1 # length
[ 1	]
[ 8	]
[ 9	]
[ 4	]
#DROP FUNCTION pyapi14;
#CREATE FUNCTION pyapi14(a integer, b integer) returns integer language P {@2@3@3@83@\\x64\\x01\\x00\\x84\\x00\\x00\\x7d\\x02\\x00\\x7c\\x02\\x00\\x7c\\x00\\x00\\x7c\\x01\\x00\\x83\\x02\\x00\\x53@(NoneType:None)(code:{@2@2@2@83@\\x7c\\x00\\x00\\x7c\\x01\\x00\\x14\\x53@(NoneType:None)@@a,b,@@@<string>@mult@48@\\x00\\x01@})@@a,b,mult,@@@<string>@myfun4@47@\\x00\\x01\\x09\\x02@};
#SELECT pyapi14(i,j) FROM rval;
% sys.L # table_name
% pyapi14_i # name
% int # type
% 1 # length
[ 4	]
[ 6	]
[ 6	]
[ 4	]
#DROP FUNCTION pyapi14;
#CREATE FUNCTION pyapi14(a integer, b integer) returns integer language P {@2@3@3@83@\\x64\\x01\\x00\\x84\\x00\\x00\\x7d\\x02\\x00\\x7c\\x02\\x00\\x7c\\x00\\x00\\x7c\\x01\\x00\\x83\\x02\\x00\\x53@(NoneType:None)(code:{@2@3@2@83@\\x64\\x01\\x00\\x84\\x00\\x00\\x7d\\x02\\x00\\x7c\\x02\\x00\\x7c\\x00\\x00\\x83\\x01\\x00\\x7c\\x01\\x00\\x14\\x53@(NoneType:None)(code:{@1@1@2@83@\\x7c\\x00\\x00\\x64\\x01\\x00\\x14\\x53@(NoneType:None)(int:20)@@a,@@@<string>@timestwenty@53@\\x00\\x01@})@@a,b,timestwenty,@@@<string>@mult@52@\\x00\\x01\\x09\\x02@})@@a,b,mult,@@@<string>@myfun5@51@\\x00\\x01\\x09\\x04@};
#SELECT pyapi14(i,j) FROM rval;
% sys.L # table_name
% pyapi14_i # name
% int # type
% 3 # length
[ 80	]
[ 120	]
[ 120	]
[ 80	]
#DROP FUNCTION pyapi14;
#DROP TABLE rval;
#ROLLBACK;

# 12:53:39 >  
# 12:53:39 >  "Done."
# 12:53:39 >  


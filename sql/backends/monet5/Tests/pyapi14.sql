# To allow for transferring functions from python to monetdb without the source code we analyze the underlying PyCodeObject structure of a python function object
# We can then convert this PyCodeObject to an encoded string using the Marshal module, and decode it to reconstruct the PyCodeObject in MonetDB

# This is necessary because Python throws away the source code of functions created in the interpreter
#   so if we want to pass an arbitrary function to MonetDB we need to transfer it using its underlying Code Object

START TRANSACTION;

CREATE TABLE rval(i integer,j integer);
INSERT INTO rval VALUES (1,4), (2,3), (3,2), (4,1);


CREATE FUNCTION pyapi14_function_format() returns table(s string) language P
{
	def function_to_string(fun):
		import marshal, string
		return '@' + "".join('\\x' + x.encode('hex') for x in marshal.dumps(fun.__code__))

	def myfun(a,b):
		return a * b

	def myfun2(a,b):
		return a * 20 + b

	def myfun3(a,b):
		import math
		return numpy.power(a,b)

	def myfun4(a,b):
		def mult(a,b):
			return a * b
		return mult(a,b)

	def myfun5(a,b):
		def mult(a,b):
			def timestwenty(a):
				return a * 20
			return timestwenty(a) * b
		return mult(a,b)

	return [function_to_string(myfun), 
			function_to_string(myfun2),
			function_to_string(myfun3),
			function_to_string(myfun4),
			function_to_string(myfun5)];
};

SELECT * FROM pyapi14_function_format();

# note: when creating the SQL function the format is '{@<function_code>};', the first @ symbolizes to the parser that it is not a regular function but an encoded code object

# def myfun(a,b):
#    return a * b
CREATE FUNCTION pyapi14(a integer, b integer) returns integer language P {@\\x63\\x02\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x53\\x00\\x00\\x00\\x73\\x08\\x00\\x00\\x00\\x7c\\x00\\x00\\x7c\\x01\\x00\\x14\\x53\\x28\\x01\\x00\\x00\\x00\\x4e\\x28\\x00\\x00\\x00\\x00\\x28\\x02\\x00\\x00\\x00\\x74\\x01\\x00\\x00\\x00\\x61\\x74\\x01\\x00\\x00\\x00\\x62\\x28\\x00\\x00\\x00\\x00\\x28\\x00\\x00\\x00\\x00\\x73\\x08\\x00\\x00\\x00\\x3c\\x73\\x74\\x72\\x69\\x6e\\x67\\x3e\\x74\\x05\\x00\\x00\\x00\\x6d\\x79\\x66\\x75\\x6e\\x05\\x00\\x00\\x00\\x73\\x02\\x00\\x00\\x00\\x00\\x01};
SELECT pyapi14(i,j) FROM rval;
DROP FUNCTION pyapi14;

# def myfun2(a,b):
#    return a * 20 + b
CREATE FUNCTION pyapi14(a integer, b integer) returns integer language P {@\\x63\\x02\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x53\\x00\\x00\\x00\\x73\\x0c\\x00\\x00\\x00\\x7c\\x00\\x00\\x64\\x01\\x00\\x14\\x7c\\x01\\x00\\x17\\x53\\x28\\x02\\x00\\x00\\x00\\x4e\\x69\\x14\\x00\\x00\\x00\\x28\\x00\\x00\\x00\\x00\\x28\\x02\\x00\\x00\\x00\\x74\\x01\\x00\\x00\\x00\\x61\\x74\\x01\\x00\\x00\\x00\\x62\\x28\\x00\\x00\\x00\\x00\\x28\\x00\\x00\\x00\\x00\\x73\\x08\\x00\\x00\\x00\\x3c\\x73\\x74\\x72\\x69\\x6e\\x67\\x3e\\x74\\x06\\x00\\x00\\x00\\x6d\\x79\\x66\\x75\\x6e\\x32\\x07\\x00\\x00\\x00\\x73\\x02\\x00\\x00\\x00\\x00\\x01};
SELECT pyapi14(i,j) FROM rval;
DROP FUNCTION pyapi14;

#def myfun3(a,b):
#	import math
#	return numpy.power(a,b)
CREATE FUNCTION pyapi14(a integer, b integer) returns integer language P {@\\x63\\x02\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x53\\x00\\x00\\x00\\x73\\x1c\\x00\\x00\\x00\\x64\\x01\\x00\\x64\\x00\\x00\\x6c\\x00\\x00\\x7d\\x02\\x00\\x74\\x01\\x00\\x6a\\x02\\x00\\x7c\\x00\\x00\\x7c\\x01\\x00\\x83\\x02\\x00\\x53\\x28\\x02\\x00\\x00\\x00\\x4e\\x69\\xff\\xff\\xff\\xff\\x28\\x03\\x00\\x00\\x00\\x74\\x04\\x00\\x00\\x00\\x6d\\x61\\x74\\x68\\x74\\x05\\x00\\x00\\x00\\x6e\\x75\\x6d\\x70\\x79\\x74\\x05\\x00\\x00\\x00\\x70\\x6f\\x77\\x65\\x72\\x28\\x03\\x00\\x00\\x00\\x74\\x01\\x00\\x00\\x00\\x61\\x74\\x01\\x00\\x00\\x00\\x62\\x52\\x00\\x00\\x00\\x00\\x28\\x00\\x00\\x00\\x00\\x28\\x00\\x00\\x00\\x00\\x73\\x08\\x00\\x00\\x00\\x3c\\x73\\x74\\x72\\x69\\x6e\\x67\\x3e\\x74\\x06\\x00\\x00\\x00\\x6d\\x79\\x66\\x75\\x6e\\x33\\x09\\x00\\x00\\x00\\x73\\x04\\x00\\x00\\x00\\x00\\x01\\x0c\\x01};
SELECT pyapi14(i,j) FROM rval;
DROP FUNCTION pyapi14;

#def myfun4(a,b):
#	def mult(a,b):
#	   return a * b
#	return mult(a,b)
CREATE FUNCTION pyapi14(a integer, b integer) returns integer language P {@\\x63\\x02\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x53\\x00\\x00\\x00\\x73\\x16\\x00\\x00\\x00\\x64\\x01\\x00\\x84\\x00\\x00\\x7d\\x02\\x00\\x7c\\x02\\x00\\x7c\\x00\\x00\\x7c\\x01\\x00\\x83\\x02\\x00\\x53\\x28\\x02\\x00\\x00\\x00\\x4e\\x63\\x02\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x53\\x00\\x00\\x00\\x73\\x08\\x00\\x00\\x00\\x7c\\x00\\x00\\x7c\\x01\\x00\\x14\\x53\\x28\\x01\\x00\\x00\\x00\\x4e\\x28\\x00\\x00\\x00\\x00\\x28\\x02\\x00\\x00\\x00\\x74\\x01\\x00\\x00\\x00\\x61\\x74\\x01\\x00\\x00\\x00\\x62\\x28\\x00\\x00\\x00\\x00\\x28\\x00\\x00\\x00\\x00\\x73\\x08\\x00\\x00\\x00\\x3c\\x73\\x74\\x72\\x69\\x6e\\x67\\x3e\\x74\\x04\\x00\\x00\\x00\\x6d\\x75\\x6c\\x74\\x0d\\x00\\x00\\x00\\x73\\x02\\x00\\x00\\x00\\x00\\x01\\x28\\x00\\x00\\x00\\x00\\x28\\x03\\x00\\x00\\x00\\x52\\x00\\x00\\x00\\x00\\x52\\x01\\x00\\x00\\x00\\x52\\x02\\x00\\x00\\x00\\x28\\x00\\x00\\x00\\x00\\x28\\x00\\x00\\x00\\x00\\x73\\x08\\x00\\x00\\x00\\x3c\\x73\\x74\\x72\\x69\\x6e\\x67\\x3e\\x74\\x06\\x00\\x00\\x00\\x6d\\x79\\x66\\x75\\x6e\\x34\\x0c\\x00\\x00\\x00\\x73\\x04\\x00\\x00\\x00\\x00\\x01\\x09\\x02};
SELECT pyapi14(i,j) FROM rval;
DROP FUNCTION pyapi14;

#def myfun5(a,b):
#	def mult(a,b):
#		def timestwenty(a):
#			return a * 20
#	    return timestwenty(a) * b
#	return mult(a,b)
CREATE FUNCTION pyapi14(a integer, b integer) returns integer language P {@\\x63\\x02\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x53\\x00\\x00\\x00\\x73\\x16\\x00\\x00\\x00\\x64\\x01\\x00\\x84\\x00\\x00\\x7d\\x02\\x00\\x7c\\x02\\x00\\x7c\\x00\\x00\\x7c\\x01\\x00\\x83\\x02\\x00\\x53\\x28\\x02\\x00\\x00\\x00\\x4e\\x63\\x02\\x00\\x00\\x00\\x03\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x53\\x00\\x00\\x00\\x73\\x17\\x00\\x00\\x00\\x64\\x01\\x00\\x84\\x00\\x00\\x7d\\x02\\x00\\x7c\\x02\\x00\\x7c\\x00\\x00\\x83\\x01\\x00\\x7c\\x01\\x00\\x14\\x53\\x28\\x02\\x00\\x00\\x00\\x4e\\x63\\x01\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x53\\x00\\x00\\x00\\x73\\x08\\x00\\x00\\x00\\x7c\\x00\\x00\\x64\\x01\\x00\\x14\\x53\\x28\\x02\\x00\\x00\\x00\\x4e\\x69\\x14\\x00\\x00\\x00\\x28\\x00\\x00\\x00\\x00\\x28\\x01\\x00\\x00\\x00\\x74\\x01\\x00\\x00\\x00\\x61\\x28\\x00\\x00\\x00\\x00\\x28\\x00\\x00\\x00\\x00\\x73\\x08\\x00\\x00\\x00\\x3c\\x73\\x74\\x72\\x69\\x6e\\x67\\x3e\\x74\\x0b\\x00\\x00\\x00\\x74\\x69\\x6d\\x65\\x73\\x74\\x77\\x65\\x6e\\x74\\x79\\x12\\x00\\x00\\x00\\x73\\x02\\x00\\x00\\x00\\x00\\x01\\x28\\x00\\x00\\x00\\x00\\x28\\x03\\x00\\x00\\x00\\x52\\x00\\x00\\x00\\x00\\x74\\x01\\x00\\x00\\x00\\x62\\x52\\x01\\x00\\x00\\x00\\x28\\x00\\x00\\x00\\x00\\x28\\x00\\x00\\x00\\x00\\x73\\x08\\x00\\x00\\x00\\x3c\\x73\\x74\\x72\\x69\\x6e\\x67\\x3e\\x74\\x04\\x00\\x00\\x00\\x6d\\x75\\x6c\\x74\\x11\\x00\\x00\\x00\\x73\\x04\\x00\\x00\\x00\\x00\\x01\\x09\\x02\\x28\\x00\\x00\\x00\\x00\\x28\\x03\\x00\\x00\\x00\\x52\\x00\\x00\\x00\\x00\\x52\\x02\\x00\\x00\\x00\\x52\\x03\\x00\\x00\\x00\\x28\\x00\\x00\\x00\\x00\\x28\\x00\\x00\\x00\\x00\\x73\\x08\\x00\\x00\\x00\\x3c\\x73\\x74\\x72\\x69\\x6e\\x67\\x3e\\x74\\x06\\x00\\x00\\x00\\x6d\\x79\\x66\\x75\\x6e\\x35\\x10\\x00\\x00\\x00\\x73\\x04\\x00\\x00\\x00\\x00\\x01\\x09\\x04};
SELECT pyapi14(i,j) FROM rval;
DROP FUNCTION pyapi14;

DROP TABLE rval;


ROLLBACK;

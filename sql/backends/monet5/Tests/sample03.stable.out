stdout of test 'sample03` in directory 'sql/backends/monet5` itself:


# 13:12:12 >  
# 13:12:12 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=32084" "--set" "mapi_usock=/var/tmp/mtest-99643/.s.monetdb.32084" "--set" "monet_prompt=" "--forcemito" "--dbpath=/Users/myth/opt/var/MonetDB/mTests_sql_backends_monet5" "--set" "embedded_py=true"
# 13:12:12 >  

# MonetDB 5 server v11.28.0
# This is an unreleased version
# Serving database 'mTests_sql_backends_monet5', using 4 threads
# Compiled for x86_64-apple-darwin15.6.0/64bit with 128bit integers
# Found 8.000 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2017 MonetDB B.V., all rights reserved
# Visit https://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://dhcp-21.eduroam.cwi.nl:32084/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-99643/.s.monetdb.32084
# MonetDB/SQL module loaded
# MonetDB/Python2 module loaded

Ready.
# SQL catalog created, loading sql scripts once
# loading sql script: 09_like.sql
# loading sql script: 10_math.sql
# loading sql script: 11_times.sql
# loading sql script: 12_url.sql
# loading sql script: 13_date.sql
# loading sql script: 14_inet.sql
# loading sql script: 15_querylog.sql
# loading sql script: 16_tracelog.sql
# loading sql script: 17_temporal.sql
# loading sql script: 18_index.sql
# loading sql script: 20_vacuum.sql
# loading sql script: 21_dependency_functions.sql
# loading sql script: 22_clients.sql
# loading sql script: 23_skyserver.sql
# loading sql script: 25_debug.sql
# loading sql script: 26_sysmon.sql
# loading sql script: 27_rejects.sql
# loading sql script: 39_analytics.sql
# loading sql script: 39_analytics_hge.sql
# loading sql script: 40_json.sql
# loading sql script: 40_json_hge.sql
# loading sql script: 41_md5sum.sql
# loading sql script: 45_uuid.sql
# loading sql script: 46_profiler.sql
# loading sql script: 51_sys_schema_extension.sql
# loading sql script: 60_wlcr.sql
# loading sql script: 72_fits.sql
# loading sql script: 74_netcdf.sql
# loading sql script: 75_storagemodel.sql
# loading sql script: 80_statistics.sql
# loading sql script: 80_udf.sql
# loading sql script: 80_udf_hge.sql
# loading sql script: 90_generator.sql
# loading sql script: 90_generator_hge.sql
# loading sql script: 99_system.sql

# 13:12:12 >  
# 13:12:12 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-99643" "--port=32084"
# 13:12:12 >  

#START TRANSACTION;
#CREATE TABLE vals(w DOUBLE, value INTEGER);
#INSERT INTO vals VALUES (1, 100), (-1, 50);
[ 2	]
#ROLLBACK;
#START TRANSACTION;
#CREATE TABLE vals(w DOUBLE, value INTEGER);
#INSERT INTO vals VALUES (1, 100), (0, 50);
[ 2	]
#ROLLBACK;
#START TRANSACTION;
#CREATE TABLE vals(w STRING, value INTEGER);
#INSERT INTO vals VALUES ('#1 sample', 100), ('#2 sample', 50);
[ 2	]
#ROLLBACK;
#START TRANSACTION;
#CREATE TABLE vals(w DOUBLE, value INTEGER);
#INSERT INTO vals VALUES (1, 100), (1, 50);
[ 2	]
#ROLLBACK;
#START TRANSACTION;
#CREATE TABLE vals(w DOUBLE, value INTEGER);
#INSERT INTO vals VALUES (1.7976931348623157E+306, 100), (0, 50);
[ 2	]
#ROLLBACK;
#START TRANSACTION;
#CREATE TABLE vals(w DOUBLE, value INTEGER);
#INSERT INTO vals VALUES (1, 100), (0, 50);
[ 2	]
#ROLLBACK;
#START TRANSACTION;
#CREATE TABLE vals(w DOUBLE, value INTEGER);
#INSERT INTO vals VALUES (1, 100), (0, 50);
[ 2	]
#ROLLBACK;

# 13:12:12 >  
# 13:12:12 >  "Done."
# 13:12:12 >  


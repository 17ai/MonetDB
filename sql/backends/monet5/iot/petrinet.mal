# The contents of this file are subject to the MonetDB Public License
# Version 1.1 (the "License"); you may not use this file except in
# compliance with the License. You may obtain a copy of the License at
# http://www.monetdb.org/Legal/MonetDBLicense
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations
# under the License.
#
# The Original Code is the MonetDB Database System.
#
# The Initial Developer of the Original Code is CWI.
# Portions created by CWI are Copyright (C) 1997-July 2008 CWI.
# Copyright August 2008-2016 MonetDB B.V.
# All Rights Reserved.

module petrinet;

pattern register(mod:str, fcn:str, calls:int)
address PNregister;
pattern register(mod:str, fcn:str)
address PNregister
comment "Add a continous MAL query to the Petri net. It will analyse
the MAL block to determine the input/output dependencies. ";

pattern resume(mod:str, fcn:str)
address PNresume
comment "Activate a continuous query";

pattern resume()
address PNresume
comment "Activate all continuous query";

pattern pause(mod:str, fcn:str)
address PNpause
comment "Deactivate a continuous query";

pattern pause()
address PNpause
comment "Deactivate all continuous query";

pattern step(cnt:int)
address PNstep
comment "Limit number of petrinet steps";

pattern iot.deregister()
address PNderegister
comment "Remove all query from the Petri-net controller";

pattern iot.deregister(mod:str,fcn:str)
address PNderegister
comment "Remove a query from the Petri-net controller";

pattern iot.period(t:int)
address PNperiod
comment "Control the scheduler cycle time in ms.";

command iot.queries() (mod:bat[:str],fcn:bat[:str], status:bat[:str],lastrun:bat[:timestamp],cycles:bat[:int], events:bat[:int],time:bat[:lng],error:bat[:str])
address PNtable
comment "Inspect the iot queries";

command iot.inputplaces() (sch:bat[:str], tbl:bat[:str],mod:bat[:str],fcn:bat[:str])
address PNinputplaces
comment "Inspect the destination of the places";

command iot.outputplaces() (sch:bat[:str], tbl:bat[:str],mod:bat[:str],fcn:bat[:str])
address PNoutputplaces
comment "Inspect the output places";

command dump()
address PNdump
comment "Show the status of the Petri net";

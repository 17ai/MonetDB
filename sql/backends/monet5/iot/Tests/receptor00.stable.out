stdout of test 'receptor00` in directory 'sql/backends/monet5/iot` itself:


# 23:00:08 >  
# 23:00:08 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=37702" "--set" "mapi_usock=/var/tmp/mtest-21308/.s.monetdb.37702" "--set" "monet_prompt=" "--forcemito" "--dbpath=/export/scratch1/mk/iot//Linux/var/MonetDB/mTests_sql_backends_monet5_iot"
# 23:00:08 >  

# MonetDB 5 server v11.24.0
# This is an unreleased version
# Serving database 'mTests_sql_backends_monet5_iot', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.589 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2016 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.da.cwi.nl:37702/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-21308/.s.monetdb.37702
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/iot loaded

Ready.

# 23:00:08 >  
# 23:00:08 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-21308" "--port=37702"
# 23:00:08 >  

#set schema iot;
#set optimizer='iot_pipe';
#create stream table temps( iotclk timestamp, room string , temperature real);
#declare basketdir string;
#set basketdir= '/ufs/mk/baskets/measures/temperatures/';
#explain call iot.import('iot','temps', concat(basketdir,'1'));
% .explain # table_name
% mal # name
% clob # type
% 134 # length
function user.s10_1():void;
    X_4:void := querylog.define("explain call iot.import(\\'iot\\',\\'temps\\', concat(basketdir,\\'1\\'));", "default_pipe", 10:int);
    X_7 := sql.mvc();
    X_10:str := sql.getVariable(X_7, "basketdir");
    X_13:str := calc.+(X_10, "1");
    iot.import("iot", "temps", X_13);
end user.s10_1;
#inline               actions= 0 time=1 usec 
#remap                actions= 0 time=2 usec 
#costmodel            actions= 1 time=1 usec 
#coercion             actions= 1 time=3 usec 
#evaluate             actions= 0 time=1 usec 
#aliases              actions= 3 time=4 usec 
#mergetable           actions= 0 time=12 usec 
#deadcode             actions= 0 time=2 usec 
#aliases              actions= 0 time=2 usec 
#constants            actions= 0 time=1 usec 
#commonTerms          actions= 0 time=2 usec 
#projectionpath       actions= 0 time=2 usec 
#deadcode             actions= 0 time=2 usec 
#reorder              actions= 1 time=11 usec 
#reduce               actions=21 time=5 usec 
#matpack              actions= 0 time=2 usec 
#dataflow             actions=26 time=7 usec 
#multiplex            actions= 0 time=2 usec 
#profiler             actions= 1 time=1 usec 
#candidates           actions= 1 time=0 usec 
#garbagecollector     actions= 1 time=6 usec 
#total                actions= 1 time=134 usec 
#select * from iot.errors();
% .L1,	.L1 # table_name
% table,	error # name
% clob,	clob # type
% 0,	0 # length
#select * from temps;
% iot.temps,	iot.temps,	iot.temps # table_name
% iotclk,	room,	temperature # name
% timestamp,	clob,	real # type
% 26,	11,	15 # length
[ 2016-04-25 11:09:57.658000,	"living room",	32.3	]
[ 2016-04-25 11:09:57.658000,	"kitchen",	30.1	]
[ 2016-04-25 11:09:57.658000,	"bedroom",	29.9	]
[ 2016-04-25 11:09:57.658000,	"bathroom",	28.6	]
[ 2016-04-25 11:09:57.658000,	"dining room",	30	]
#drop table temps;

# 23:00:08 >  
# 23:00:08 >  "Done."
# 23:00:08 >  


stdout of test 'webtest` in directory 'sql/backends/monet5/iot` itself:


# 22:26:06 >  
# 22:26:06 >  "mserver5" "--debug=10" "--set" "gdk_nr_threads=0" "--set" "mapi_open=true" "--set" "mapi_port=31285" "--set" "mapi_usock=/var/tmp/mtest-10345/.s.monetdb.31285" "--set" "monet_prompt=" "--forcemito" "--dbpath=/export/scratch1/mk/iot//Linux/var/MonetDB/mTests_sql_backends_monet5_iot"
# 22:26:06 >  

# MonetDB 5 server v11.24.0
# This is an unreleased version
# Serving database 'mTests_sql_backends_monet5_iot', using 8 threads
# Compiled for x86_64-unknown-linux-gnu/64bit with 64bit OIDs and 128bit integers dynamically linked
# Found 15.589 GiB available main-memory.
# Copyright (c) 1993-July 2008 CWI.
# Copyright (c) August 2008-2016 MonetDB B.V., all rights reserved
# Visit http://www.monetdb.org/ for further information
# Listening for connection requests on mapi:monetdb://vienna.da.cwi.nl:31285/
# Listening for UNIX domain connection requests on mapi:monetdb:///var/tmp/mtest-10345/.s.monetdb.31285
# MonetDB/GIS module loaded
# MonetDB/SQL module loaded
# MonetDB/iot loaded

Ready.

# 22:26:06 >  
# 22:26:06 >  "mclient" "-lsql" "-ftest" "-Eutf-8" "-i" "-e" "--host=/var/tmp/mtest-10345" "--port=31285"
# 22:26:06 >  

#set schema iot;
#create stream table temps( iotclk timestamp, room string , temperature real);
#create table atemps( iotclk timestamp, cnt int , temperature real);
#declare baskets string;
#set baskets= '/ufs/mk/baskets/measures/temperatures/';
#select * from ntemps;
% iot.ntemps,	iot.ntemps,	iot.ntemps # table_name
% iotclk,	room,	temperature # name
% timestamp,	clob,	real # type
% 26,	11,	15 # length
[ 2016-04-25 11:09:57.658000,	"living room",	32.3	]
[ 2016-04-25 11:09:57.658000,	"kitchen",	30.1	]
[ 2016-04-25 11:09:57.658000,	"bedroom",	29.9	]
[ 2016-04-25 11:09:57.658000,	"bathroom",	28.6	]
[ 2016-04-25 11:09:57.658000,	"dining room",	30	]
#create procedure web00()
#begin
#    insert into atemps select min(iotclk), count(*), avg(temperature) from temps;
#end;
#call iot.show('iot','web00');
% .explain # table_name
% mal # name
% clob # type
% 29 # length
function user.petri_0():void;
    sql.transaction();
    user.iot_web00();
    sql.commit();
end user.petri_0;
#call iot.show('iot','web00');
% .explain # table_name
% mal # name
% clob # type
% 72 # length
unsafe function user.iot_web00():void;
    X_1 := sql.mvc();
    X_58 := basket.register(X_1, "iot", "ntemps", 0:int);
    X_62 := basket.lock(X_58, "iot", "ntemps");
    X_2:bat[:oid] := basket.tid(X_1, "iot", "ntemps");
    X_5:bat[:timestamp] := basket.bind(X_58, "iot", "ntemps", "iotclk");
    X_9:bat[:str] := basket.bind(X_58, "iot", "ntemps", "room");
    X_12:bat[:flt] := basket.bind(X_58, "iot", "ntemps", "temperature");
barrier X_90 := language.dataflow();
    X_15 := aggr.min(X_5);
    X_16 := aggr.count(X_5);
    X_17:dbl := aggr.avg(X_12);
    X_18 := calc.int(X_16);
    X_19 := calc.flt(X_17);
    X_21 := sql.append(X_62, "iot", "atemps", "iotclk", X_15);
    X_24 := sql.append(X_21, "iot", "atemps", "cnt", X_18);
    X_27 := sql.append(X_24, "iot", "atemps", "temperature", X_19);
exit X_90;
    X_63 := basket.tumble(X_27, "iot", "ntemps");
catch SQLexception:str;
    iot.error("user", "web00", SQLexception);
exit SQLexception:str;
catch MALexception:str;
    iot.error("user", "web00", MALexception);
exit MALexception:str;
    basket.unlock(X_63, "iot", "ntemps");
end user.iot_web00;
#inline               actions= 0 time=0 usec 
#candidates           actions= 1 time=1 usec 
#remap                actions= 0 time=2 usec 
#iot                  actions= 1 time=23 usec 
#costmodel            actions= 1 time=1 usec 
#coercion             actions= 0 time=1 usec 
#evaluate             actions= 0 time=2 usec 
#aliases              actions= 0 time=5 usec 
#mergetable           actions= 0 time=21 usec 
#deadcode             actions= 0 time=4 usec 
#aliases              actions= 0 time=4 usec 
#constants            actions= 3 time=4 usec 
#commonTerms          actions= 0 time=4 usec 
#projectionpath       actions= 0 time=2 usec 
#deadcode             actions= 0 time=4 usec 
#reduce               actions=31 time=6 usec 
#matpack              actions= 0 time=2 usec 
#dataflow             actions=29 time=16 usec 
#multiplex            actions= 0 time=2 usec 
#profiler             actions= 1 time=0 usec 
#garbagecollector     actions= 1 time=14 usec 
#total                actions= 1 time=206 usec 
#call iot.stop();
#pnstop waiting for  0 queries 

# 22:26:06 >  
# 22:26:06 >  "Done."
# 22:26:06 >  

